{"version":3,"file":"ClarityCvAdapter.js","sourceRoot":"","sources":["../../src/delegates/ClarityCvAdapter.ts"],"names":[],"mappings":";;;AAEA,uDAA4D;AAG5D,MAAa,gBAAgB;IAC3B,UAAU,CAAC,KAAa;QACtB,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,MAAM,KAAK,EAAE,EAAE,CAAC;YACrD,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;QAChD,CAAC;QACD,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACtC,IAAI,GAAG,CAAC,MAAM,KAAK,EAAE,IAAI,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC,WAAW,EAAE,EAAE,CAAC;YACrE,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;QAClE,CAAC;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IACD,0BAA0B,CAAC,EAAgB,EAAE,KAAa;QASxD,MAAM,CAAC,GAAQ,IAAA,uBAAQ,EAAC,EAAE,CAAC,CAAC;QAE5B,6DAA6D;QAC7D,IAAI,CAAC,EAAE,IAAI,KAAK,MAAM;YAAE,OAAO,SAAS,CAAC;QAEzC,MAAM,CAAC,GAAQ,CAAC,EAAE,KAAK,CAAC;QACxB,IAAI,CAAC,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ;YAAE,OAAO,SAAS,CAAC;QAElD,iDAAiD;QACjD,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,IAAI,SAAS,CAAC;QAEhF,oDAAoD;QACpD,MAAM,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC;YAC3E,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC;gBAC1E,CAAC,CAAC,SAAS,CAAC;QAEhC,MAAM,gBAAgB,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC;YACnF,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC;gBAClF,CAAC,CAAC,SAAS,CAAC;QAEpC,MAAM,QAAQ,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC;QAE3E,8DAA8D;QAC9D,MAAM,UAAU,GAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,CAAC;QACvE,MAAM,YAAY,GAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC;QAE3E,2BAA2B;QAC3B,MAAM,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,SAAS,CAAC;QAErD,OAAO;YACL,MAAM;YACN,YAAY;YACZ,gBAAgB;YAChB,QAAQ,EAAE,OAAO,QAAQ,KAAK,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;YACjF,YAAY;YACZ,UAAU;YACV,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS;SACzC,CAAC;IACJ,CAAC;IAGD,+BAA+B,CAC7B,EAAgB;QAEhB,MAAM,QAAQ,GAAG,IAAA,yBAAU,EAAC,EAAE,CAAC,CAAC;QAChC,IAAI,QAAQ,KAAK,MAAM,IAAI,QAAQ,KAAK,QAAQ;YAAE,OAAO,SAAS,CAAC;QACnE,MAAM,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,4CAA4C,CAAC,CAAC;QACvE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACd,MAAM,CAAC,eAAe,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACxD,OAAO,EAAE,eAAe,EAAE,YAAY,EAAE,CAAC;QAC3C,CAAC;QACD,MAAM,CAAC,GAAQ,IAAA,uBAAQ,EAAC,EAAE,CAAC,CAAC;QAC5B,IAAI,CAAC,EAAE,IAAI,KAAK,MAAM,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC;YACnC,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;YACtB,MAAM,eAAe,GAAG,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,eAAe,CAAC;YAC/D,MAAM,YAAY,GAAG,KAAK,CAAC,YAAY,IAAI,KAAK,CAAC,IAAI,CAAC;YACtD,IAAI,eAAe,IAAI,YAAY;gBAAE,OAAO,EAAE,eAAe,EAAE,YAAY,EAAE,CAAC;QAChF,CAAC;QACD,MAAM,IAAI,KAAK,CAAC,iDAAiD,QAAQ,EAAE,CAAC,CAAC;IAC/E,CAAC;IAED,+BAA+B,CAAC,EAAgB,EAAE,KAAa;QAC7D,MAAM,CAAC,GAAQ,IAAA,uBAAQ,EAAC,EAAE,CAAC,CAAC;QAC5B,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM;YAAE,OAAO,SAAS,CAAC;QACxC,MAAM,CAAC,GAAQ,CAAC,CAAC,KAAK,CAAC;QACvB,MAAM,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QACvC,MAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QAC3C,MAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvC,MAAM,cAAc,GAAG,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QAC7C,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpC,MAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QACtC,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,cAAc,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC;IACtF,CAAC;CACF;AA7FD,4CA6FC;AAED,kBAAe,gBAAgB,CAAC","sourcesContent":["// src/delegates/ClarityCvAdapter.ts\nimport type { ClarityValue } from '@stacks/transactions';\nimport { cvToJSON, cvToString } from '@stacks/transactions';\nimport type { OnChainSubscription } from '../contracts/domain';\n\nexport class ClarityCvAdapter {\n  guardHex32(idHex: string): Buffer {\n    if (typeof idHex !== 'string' || idHex.length !== 64) {\n      throw new Error('idHex must be 64 hex chars');\n    }\n    const buf = Buffer.from(idHex, 'hex');\n    if (buf.length !== 32 || buf.toString('hex') !== idHex.toLowerCase()) {\n      throw new Error('idHex must decode to 32 bytes and round-trip');\n    }\n    return buf;\n  }\n  decodeOptionalInvoiceTuple(cv: ClarityValue, idHex: string): {\n    status?: string;\n    paidAtHeight?: number;\n    lastChangeHeight?: number;\n    lastTxId?: string;\n    refundAmount?: number | string | bigint;\n    amountSats?: number | string | bigint;\n    payer?: string;\n  } | undefined {\n    const j: any = cvToJSON(cv);\n\n    // Optional response: either `(none)` or `(some (tuple ...))`\n    if (j?.type === 'none') return undefined;\n\n    const t: any = j?.value;\n    if (!t || typeof t !== 'object') return undefined;\n\n    // Common field names (tolerate minor variations)\n    const status = String(t.status ?? t['status'] ?? '').toLowerCase() || undefined;\n\n    // Heights (some contracts expose only one of these)\n    const paidAtHeight = Number.isFinite(Number(t['paid-at-height'])) ? Number(t['paid-at-height'])\n                        : Number.isFinite(Number(t['paidAtHeight']))   ? Number(t['paidAtHeight'])\n                        : undefined;\n\n    const lastChangeHeight = Number.isFinite(Number(t['last-change-height'])) ? Number(t['last-change-height'])\n                            : Number.isFinite(Number(t['lastChangeHeight']))   ? Number(t['lastChangeHeight'])\n                            : undefined;\n\n    const lastTxId = t['last-txid'] ?? t['lastTxId'] ?? t['txid'] ?? undefined;\n\n    // Amounts â€“ keep as number|string|bigint so poller can coerce\n    const amountSats  = t['amount'] ?? t['amount-sats'] ?? t['amountSats'];\n    const refundAmount= t['refund'] ?? t['refund-amount'] ?? t['refundAmount'];\n\n    // Payer / sender principal\n    const payer = t['payer'] ?? t['sender'] ?? undefined;\n\n    return {\n      status,\n      paidAtHeight,\n      lastChangeHeight,\n      lastTxId: typeof lastTxId === 'string' && lastTxId ? String(lastTxId) : undefined,\n      refundAmount,\n      amountSats,\n      payer: payer ? String(payer) : undefined,\n    };\n  }\n\n\n  decodeOptionalContractPrincipal(\n    cv: ClarityValue,\n  ): { contractAddress: string; contractName: string } | undefined {\n    const asString = cvToString(cv);\n    if (asString === 'none' || asString === '(none)') return undefined;\n    const m = asString.match(/\\(some\\s+([A-Z0-9]{1,}\\.[a-zA-Z0-9\\-_]+)\\)/);\n    if (m && m[1]) {\n      const [contractAddress, contractName] = m[1].split('.');\n      return { contractAddress, contractName };\n    }\n    const j: any = cvToJSON(cv);\n    if (j?.type === 'some' && j?.value) {\n      const inner = j.value;\n      const contractAddress = inner.address ?? inner.contractAddress;\n      const contractName = inner.contractName ?? inner.name;\n      if (contractAddress && contractName) return { contractAddress, contractName };\n    }\n    throw new Error(`Unexpected optional contract-principal shape: ${asString}`);\n  }\n\n  decodeOptionalSubscriptionTuple(cv: ClarityValue, idHex: string): OnChainSubscription | undefined {\n    const j: any = cvToJSON(cv);\n    if (j.type === 'none') return undefined;\n    const t: any = j.value;\n    const merchant = String(t['merchant']);\n    const subscriber = String(t['subscriber']);\n    const amountSats = BigInt(t['amount']);\n    const intervalBlocks = BigInt(t['interval']);\n    const active = Boolean(t['active']);\n    const nextDue = BigInt(t['next-due']);\n    return { idHex, merchant, subscriber, amountSats, intervalBlocks, active, nextDue };\n  }\n}\n\nexport default ClarityCvAdapter;\n"]}