{"version":3,"file":"SchedulerStartupCoordinator.js","sourceRoot":"","sources":["../../src/delegates/SchedulerStartupCoordinator.ts"],"names":[],"mappings":";;;AAGA,MAAa,2BAA2B;IAAxC;QACU,kBAAa,GAAG,KAAK,CAAC;QACtB,iBAAY,GAAG,KAAK,CAAC;QACrB,wBAAmB,GAAG,KAAK,CAAC;IAqBtC,CAAC;IAnBQ,KAAK,CAAC,eAAe,CAAC,IAK5B;QACC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC;YAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC;QACD,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;YAC9B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,CAAC;QACD,IAAI,IAAI,CAAC,qBAAqB,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC5D,IAAI,CAAC,qBAAqB,CAAC,kBAAkB,EAAE,CAAC;YAChD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAClC,CAAC;IACH,CAAC;CACF;AAxBD,kEAwBC","sourcesContent":["// src/delegates/SchedulerStartupCoordinator.ts\nimport type { IConfigService } from '../contracts/interfaces';\n\nexport class SchedulerStartupCoordinator {\n  private startedPoller = false;\n  private startedRetry = false;\n  private startedSubscription = false;\n\n  public async startSchedulers(deps: {\n    poller: { bootstrapPoller(): void };\n    webhookRetry: { bootstrap(): void };\n    subscriptionScheduler?: { bootstrapScheduler(): void };\n    config: IConfigService;\n  }): Promise<void> {\n    if (!this.startedPoller) {\n      deps.poller.bootstrapPoller();\n      this.startedPoller = true;\n    }\n    if (!this.startedRetry) {\n      deps.webhookRetry.bootstrap();\n      this.startedRetry = true;\n    }\n    if (deps.subscriptionScheduler && !this.startedSubscription) {\n      deps.subscriptionScheduler.bootstrapScheduler();\n      this.startedSubscription = true;\n    }\n  }\n}\n"]}