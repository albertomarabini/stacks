{"version":3,"file":"PostConditionsComposer.js","sourceRoot":"","sources":["../../src/delegates/PostConditionsComposer.ts"],"names":[],"mappings":";;;AAGA,MAAa,sBAAsB;IACjC,YACU,GAAsB,EACtB,GAA0B;QAD1B,QAAG,GAAH,GAAG,CAAmB;QACtB,QAAG,GAAH,GAAG,CAAuB;IACjC,CAAC;IAEJ,SAAS,CACP,iBAAyB,EACzB,UAAkB;QAElB,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAC1C,MAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,iBAAiB,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;QAChF,OAAO;YACL,iBAAiB,EAAE,MAAM;YACzB,cAAc;SACf,CAAC;IACJ,CAAC;IAED,MAAM,CACJ,cAAsB,EACtB,iBAAyB,EACzB,UAAkB;QAElB,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAC1C,MAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,cAAc,EAAE,iBAAiB,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;QACpG,OAAO;YACL,iBAAiB,EAAE,MAAM;YACzB,cAAc;SACf,CAAC;IACJ,CAAC;CACF;AA9BD,wDA8BC","sourcesContent":["// src/delegates/PostConditionsComposer.ts\nimport type { IAssetInfoFactory, IPostConditionFactory } from '../contracts/interfaces';\n\nexport class PostConditionsComposer {\n  constructor(\n    private aif: IAssetInfoFactory,\n    private pcf: IPostConditionFactory\n  ) {}\n\n  forRefund(\n    merchantPrincipal: string,\n    amountSats: number\n  ): { postConditionMode: 'deny'; postConditions: any[] } {\n    const asset = this.aif.getSbtcAssetInfo();\n    const postConditions = this.pcf.forRefund(merchantPrincipal, amountSats, asset);\n    return {\n      postConditionMode: 'deny',\n      postConditions,\n    };\n  }\n\n  forPay(\n    payerPrincipal: string,\n    merchantPrincipal: string,\n    amountSats: number\n  ): { postConditionMode: 'deny'; postConditions: any[] } {\n    const asset = this.aif.getSbtcAssetInfo();\n    const postConditions = this.pcf.forPayInvoice(payerPrincipal, merchantPrincipal, amountSats, asset);\n    return {\n      postConditionMode: 'deny',\n      postConditions,\n    };\n  }\n}\n"]}