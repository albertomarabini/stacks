{"version":3,"file":"CorsMiddlewareFactory.js","sourceRoot":"","sources":["../../src/delegates/CorsMiddlewareFactory.ts"],"names":[],"mappings":";;;;;;AACA,gDAAwB;AAGxB,MAAa,qBAAqB;IACzB,MAAM,CACX,OAAiB,EACjB,UAMC;QAED,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CACxB,IAAA,cAAI,EAAC;YACH,MAAM,EAAE,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,UAAU,CAAC,yBAAyB,CAAC,MAAM,EAAE,EAAE,EAAE,GAAG,CAAC;YAC7E,OAAO;YACP,cAAc,EAAE;gBACd,cAAc;gBACd,WAAW;gBACX,qBAAqB;gBACrB,qBAAqB;aACtB;SACF,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACvB,CAAC;CACF;AAvBD,sDAuBC","sourcesContent":["import type { RequestHandler } from 'express';\nimport cors from 'cors';\nimport type { CorsOptions } from 'cors';\n\nexport class CorsMiddlewareFactory {\n  public create(\n    methods: string[],\n    corsPolicy: {\n      publicCorsOriginValidator(\n        origin: string | undefined,\n        cb: (err: Error | null, allow?: boolean) => void,\n        req: any,\n      ): void;\n    },\n  ): RequestHandler {\n    return (req, res, next) =>\n      cors({\n        origin: (origin, cb) => corsPolicy.publicCorsOriginValidator(origin, cb, req),\n        methods,\n        allowedHeaders: [\n          'Content-Type',\n          'X-API-Key',\n          'X-Webhook-Timestamp',\n          'X-Webhook-Signature',\n        ],\n      })(req, res, next);\n  }\n}\n"]}