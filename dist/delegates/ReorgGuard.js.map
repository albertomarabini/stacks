{"version":3,"file":"ReorgGuard.js","sourceRoot":"","sources":["../../src/delegates/ReorgGuard.ts"],"names":[],"mappings":";;;AAKA,MAAa,UAAU;IACrB,KAAK,CAAC,WAAW,CACf,yBAAiC,EACjC,SAAiB,EACjB,MAAsB,EACtB,KAAyB;QAEzB,IAAI,SAAS,GAAG,MAAM,CAAC,UAAU;YAAE,OAAO,IAAI,CAAC;QAC/C,IAAI,MAAM,CAAC,UAAU,KAAK,CAAC;YAAE,OAAO,KAAK,CAAC;QAC1C,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,cAAc,CAAC,yBAAyB,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;QACvF,IAAI,CAAC,MAAM;YAAE,OAAO,KAAK,CAAC;QAC1B,MAAM,MAAM,GAAG,MAAM,CAAC,iBAAiB,CAAC;QACxC,OAAO,MAAM,KAAK,MAAM,CAAC,aAAa,CAAC;IACzC,CAAC;IAED,mBAAmB,CAAC,MAAsB,EAAE,iBAAyB;QACnE,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,UAAU,GAAG,iBAAiB,CAAC,CAAC;QAChE,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAnBD,gCAmBC","sourcesContent":["// src/delegates/ReorgGuard.ts\nimport type { IStacksChainClient } from '../contracts/interfaces';\n\nexport type CursorSnapshot = { lastHeight: number; lastBlockHash?: string };\n\nexport class ReorgGuard {\n  async detectReorg(\n    firstBlockToProcessHeight: number,\n    tipHeight: number,\n    cursor: CursorSnapshot,\n    chain: IStacksChainClient,\n  ): Promise<boolean> {\n    if (tipHeight < cursor.lastHeight) return true;\n    if (cursor.lastHeight === 0) return false;\n    const header = await chain.getBlockHeader(firstBlockToProcessHeight).catch(() => null);\n    if (!header) return false;\n    const parent = header.parent_block_hash;\n    return parent !== cursor.lastBlockHash;\n  }\n\n  computeRewindTarget(cursor: CursorSnapshot, reorgWindowBlocks: number): number {\n    const back = Math.max(0, cursor.lastHeight - reorgWindowBlocks);\n    return back;\n  }\n}\n"]}