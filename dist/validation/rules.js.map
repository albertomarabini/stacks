{"version":3,"file":"rules.js","sourceRoot":"","sources":["../../src/validation/rules.ts"],"names":[],"mappings":";AAAA,oFAAoF;;;AAEvE,QAAA,UAAU,GAAG;IACxB,OAAO,EAAE,mBAAmB;IAC5B,GAAG,EAAE,wBAAwB;IAC7B,QAAQ,EAAE,mBAAmB;IAC7B,IAAI,EAAE,4FAA4F;IAClG,eAAe,EAAE,eAAe;IAEhC,QAAQ;IACR,aAAa,EAAE;QACb,WAAW,EAAE,aAAa;QAC1B,WAAW,EAAE,aAAa;QAC1B,gBAAgB,EAAE,EAAE;QACpB,WAAW,EAAE,cAAc;KAC5B;IACD,MAAM,EAAE;QACN,UAAU,EAAE,MAAM;QAClB,WAAW,EAAE,aAAa;QAC1B,gBAAgB,EAAE,EAAE;QACpB,GAAG,EAAE,uCAAuC;KAC7C;IACD,YAAY,EAAE;QACZ,UAAU,EAAE,kBAAkB;QAC9B,WAAW,EAAE,aAAa;QAC1B,eAAe,EAAE,aAAa;QAC9B,IAAI,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;KAC5B;IACD,kBAAkB,EAAE;QAClB,gBAAgB;QAChB,iBAAiB;QACjB,uCAAuC;QACvC,iBAAiB;QACjB,6BAA6B;QAC7B,qBAAqB;QACrB,uBAAuB;KACxB;IACD,kBAAkB,EAAE;QAClB,WAAW,EAAE,4BAA4B;QACzC,eAAe,EAAE,YAAY;KAC9B;CACO,CAAC","sourcesContent":["// Validation & Constraint Definitions; Error Handling & Fault Tolerance enums/types\n\nexport const Validation = {\n  idHex64: /^[0-9A-Fa-f]{64}$/,\n  url: /^(https?):\\/\\/[^\\s]+$/i,\n  colorHex: /^#[0-9A-Fa-f]{6}$/,\n  uuid: /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$/,\n  stacksPrincipal: /^S[^\\s]{10,}$/,\n\n  // Rules\n  createInvoice: {\n    amount_sats: 'integer > 0',\n    ttl_seconds: 'integer > 0',\n    memoMaxUtf8Bytes: 34,\n    webhook_url: 'optional URL',\n  },\n  refund: {\n    invoice_id: 'uuid',\n    amount_sats: 'integer > 0',\n    memoMaxUtf8Bytes: 34,\n    cap: 'refund_amount + request â‰¤ amount_sats',\n  },\n  subscription: {\n    subscriber: 'stacks principal',\n    amount_sats: 'integer > 0',\n    interval_blocks: 'integer > 0',\n    mode: ['invoice', 'direct'],\n  },\n  publicCreateTxGate: [\n    'invoice exists',\n    'merchant active',\n    'status not in [paid,canceled,expired]',\n    'TTL not expired',\n    'on-chain status not expired',\n    'id_hex valid 64-hex',\n    'sBTC token configured',\n  ],\n  storeProfileUpdate: {\n    brand_color: 'optional color hex #RRGGBB',\n    allowed_origins: 'CSV string',\n  },\n} as const;\n\nexport type PublicErrorReason =\n  | 'notFound'\n  | 'invalidId'\n  | 'expired'\n  | 'invalidState'\n  | 'rateLimited'\n  | 'missingIdentifier'\n  | 'missingSbtcToken';\n\nexport type MerchantAdminError =\n  | 'rate_limited'\n  | 'bad_status'\n  | 'not_cancellable'\n  | 'already_paid'\n  | 'insufficient_balance'\n  | 'validation_error';\n"]}