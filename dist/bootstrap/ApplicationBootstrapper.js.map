{"version":3,"file":"ApplicationBootstrapper.js","sourceRoot":"","sources":["../../src/bootstrap/ApplicationBootstrapper.ts"],"names":[],"mappings":"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","sourcesContent":["// src/bootstrap/ApplicationBootstrapper.ts\nimport path from 'path';\nimport express, { Express } from 'express';\nimport 'dotenv/config';\n\nprocess.on('uncaughtException', (err) => {\n  console.error('[FATAL] uncaughtException:', err);\n});\nprocess.on('unhandledRejection', (reason) => {\n  console.error('[FATAL] unhandledRejection:', reason);\n});\n\nimport { ConfigService } from '../config/ConfigService';\nimport { openDatabaseAndMigrate } from '../db/SqliteStore';\nimport { InvoiceIdCodec } from '../utils/InvoiceIdCodec';\nimport { PricingCache } from '../services/PricingCache';\nimport { PricingService } from '../services/PricingService';\nimport { AssetInfoFactory } from '../factories/AssetInfoFactory';\nimport { PostConditionFactory } from '../factories/PostConditionFactory';\nimport { StacksChainClient } from '../clients/StacksChainClient';\nimport { ContractCallBuilder } from '../builders/ContractCallBuilder';\nimport { WebhookRetryScheduler } from '../webhooks/WebhookRetryScheduler';\nimport { WebhookDispatcher } from '../webhooks/WebhookDispatcher';\nimport { ExpirationMonitor } from '../services/ExpirationMonitor';\nimport { PaymentPoller } from '../poller/PaymentPoller';\nimport { PollerAdminBridge } from '../poller/PollerAdminBridge';\nimport { SubscriptionScheduler } from '../schedulers/SubscriptionScheduler';\nimport { AdminAuth } from '../middleware/AdminAuth';\nimport { StoreApiAuth } from '../middleware/StoreApiAuth';\nimport { CrossTenantMask } from '../middleware/CrossTenantMask';\nimport { CorsPolicy } from '../middleware/CorsPolicy';\nimport { RateLimitPolicy } from '../middleware/RateLimitPolicy';\nimport { InvoiceService } from '../services/InvoiceService';\nimport { RefundService } from '../services/RefundService';\nimport { SubscriptionService } from '../services/SubscriptionService';\nimport { PublicApiController } from '../controllers/PublicApiController';\nimport { MerchantApiController } from '../controllers/MerchantApiController';\nimport { AdminApiController } from '../controllers/AdminApiController';\nimport { HealthController } from '../controllers/HealthController';\nimport { AdminStaticServer } from '../servers/AdminStaticServer';\nimport { HttpApiServer } from '../server/HttpApiServer';\nimport type { IConfigService } from '../contracts/interfaces';\n\n// ✅ import the address helper by name (no default-destructure)\nimport { getAddressFromPrivateKey } from '@stacks/transactions';\n// Support both ESM and CJS shapes for @stacks/network\nimport * as stacksNetworkPkg from '@stacks/network';\nconst Net = (stacksNetworkPkg as any).default ?? stacksNetworkPkg;\nconst { networkFromName, clientFromNetwork } = Net;\n\nfunction log(step: string, msg: string) {\n  console.log(`[BOOT:${step}] ${msg}`);\n}\nconst mask = (s?: string) =>\n  typeof s === 'string' && s.length > 10 ? `${s.slice(0, 10)}…[${s.length}b]` : String(s ?? '');\n\nfunction env(k: string) {\n  return process.env[k];\n}\nfunction cleanHexPk(s?: string) {\n  if (!s) return '';\n  return s.replace(/^0x/i, '');\n}\n/**\n * Derive & log an address from a secret key if present.\n * Accepts 64/66-hex (trailing '01' compressed ok) and trims to 64 for derivation.\n * Uses network NAME (mainnet|testnet|devnet|mocknet), which is what stacks.js expects.\n */\nfunction logAddrIfPresent(label: string, skRaw: string | undefined, netName: string) {\n  if (!skRaw) return;\n  try {\n    const sk = cleanHexPk(skRaw);\n    const addr = getAddressFromPrivateKey(sk.slice(0, 64), netName as any);\n    log('ADDR', `${label}=${addr} (from ${mask(sk)})`);\n  } catch (e) {\n    log('ADDR', `${label}=<failed to derive> (${(e as Error)?.message || e})`);\n  }\n}\n\nexport class ApplicationBootstrapper {\n  private serverRef: import('http').Server | null = null;\n  private async waitFor<T>(fn: () => Promise<T | undefined>, ok: (v: T) => boolean, ms = 15000) {\n    const end = Date.now() + ms;\n    while (Date.now() < end) {\n      try {\n        const v = await fn();\n        if (v && ok(v)) return v;\n      } catch {/* best-effort; keep polling */ }\n      await new Promise(r => setTimeout(r, 400));\n    }\n    throw new Error('timeout waiting for on-chain state');\n  }\n\n  public async boot(): Promise<void> {\n    log('START', 'starting…');\n\n    // 1) Config\n    const cfg = new ConfigService();\n    const netName = cfg.getNetwork(); // 'mainnet' | 'testnet' | 'devnet' | 'mocknet'\n    const { contractAddress, contractName } = cfg.getContractId();\n    const poll = cfg.getPollingConfig();\n    const avgBlockSecs = cfg.getAvgBlockSecs();\n\n    // Try to surface the effective Stacks API base URL if available via @stacks/network helpers\n    let stacksApiBase = env('STACKS_API_URL') || '';\n    try {\n      const n = networkFromName(netName);\n      const client = clientFromNetwork(n);\n      stacksApiBase = (client && (client.baseUrl || client.coreApiUrl)) || stacksApiBase || '';\n    } catch {\n      /* non-fatal */\n    }\n\n    log('CONFIG', `network=${netName}`);\n    log('CONFIG', `stacksApi=${stacksApiBase || '<unset>'}`);\n    log('CONFIG', `paymentContract=${contractAddress || '?'}.${contractName || '?'}`);\n\n    // sBTC token (if preconfigured via env)\n    if (env('SBTC_CONTRACT_ADDRESS') && env('SBTC_CONTRACT_NAME')) {\n      log(\n        'CONFIG',\n        `sbtcToken=${env('SBTC_CONTRACT_ADDRESS')}.${env('SBTC_CONTRACT_NAME')}`\n      );\n    } else {\n      log('CONFIG', 'sbtcToken=<unset> (admin must call set-sbtc-token)');\n    }\n\n    // Broadcast/poller knobs\n    log(\n      'CONFIG',\n      `confirmations=${poll.minConfirmations} reorgWindow=${poll.reorgWindowBlocks} pollInterval=${poll.pollIntervalSecs}s avgBlockSecs=${avgBlockSecs}`\n    );\n    log('CONFIG', `AUTO_BOOTSTRAP_ADMIN=${env('AUTO_BOOTSTRAP_ADMIN') ?? 'false'} GLOBAL_DEBUGGING=${env('GLOBAL_DEBUGGING') ?? '0'}`);\n\n    // Derive & log addresses from any provided secret keys (purely for debugging)\n    logAddrIfPresent('ADMIN_SECRET_KEY', env('ADMIN_SECRET_KEY'), netName);\n    logAddrIfPresent('MERCHANT_SECRET_KEY', env('MERCHANT_SECRET_KEY'), netName);\n    logAddrIfPresent('PAYER_SECRET_KEY', env('PAYER_SECRET_KEY'), netName);\n    // Server signer (used only if AUTO_BOOTSTRAP_ADMIN=true)\n    logAddrIfPresent('SIGNER_PRIVATE_KEY', env('SIGNER_PRIVATE_KEY'), netName);\n\n    // 2) Database\n    const dbPath = env('DB_PATH') ? String(env('DB_PATH')) : path.join(process.cwd(), 'data.sqlite');\n    log('DB', `opening sqlite at ${dbPath}`);\n    const store = openDatabaseAndMigrate(dbPath);\n    log('DB', 'migrations up-to-date');\n\n    // 3) Core helpers/services\n    const codec = new InvoiceIdCodec();\n    const corsPolicy = new CorsPolicy();\n    corsPolicy.bindStore(store);\n\n    const priceTtlMs = Number(env('PRICE_TTL_MS') ?? 60_000);\n    const pricingCache = new PricingCache(priceTtlMs);\n    pricingCache.initCache();\n    log('PRICING', `cache TTL = ${priceTtlMs}ms`);\n\n    const pricing = new PricingService();\n    pricing.bindDependencies(pricingCache, cfg);\n\n    const aif = new AssetInfoFactory(cfg);\n    const pcf = new PostConditionFactory();\n\n    // 4) Chain client\n    const chain = new StacksChainClient(cfg);\n    log('CHAIN', 'StacksChainClient initialized');\n\n    // 5) Builder\n    const builder = new ContractCallBuilder(cfg, aif, pcf, codec);\n    log('BUILDER', 'ContractCallBuilder ready');\n\n    // 6) Webhooks / schedulers / poller\n    const webhookRetry = new WebhookRetryScheduler();\n    const dispatcher = new WebhookDispatcher();\n    dispatcher.initCaches();\n    dispatcher.bindStoreAndScheduler(store as any, webhookRetry as any);\n    webhookRetry.bindDependencies(store as any, dispatcher as any);\n    log('WEBHOOK', 'dispatcher + retry scheduler wired');\n\n    const expirations = new ExpirationMonitor();\n\n    const poller = new PaymentPoller();\n    poller.bindDependencies(\n      chain as any,\n      store as any,\n      dispatcher as any,\n      expirations,\n      cfg as IConfigService\n    );\n    log('POLLER', 'PaymentPoller bound to deps');\n\n    const pollerBridge = new PollerAdminBridge();\n    pollerBridge.bindPoller(poller);\n\n    const subScheduler = new SubscriptionScheduler();\n    subScheduler.bindDependencies({\n      chain: chain as any,\n      builder,\n      store: store as any,\n      pricing,\n      cfg: cfg as IConfigService,\n      dispatcher: dispatcher as any,\n      codec,\n    });\n    log('SCHED', 'SubscriptionScheduler wired');\n\n    // 7) Middlewares/policies\n    const adminAuth = new AdminAuth();\n    adminAuth.bindCredentialsFromEnv(cfg);\n\n    const storeAuth = new StoreApiAuth();\n    storeAuth.bindStore(store as any);\n\n    const crossTenant = new CrossTenantMask();\n\n    const rateLimit = new RateLimitPolicy();\n    rateLimit.initLimiters();\n\n    // 8) Domain services\n    const invService = new InvoiceService();\n    invService.bindDependencies({\n      store: store as any,\n      chain: chain as any,\n      builder,\n      cfg: cfg as IConfigService,\n      pricing,\n      codec,\n    });\n\n    const refundService = new RefundService();\n    refundService.bindDependencies({\n      chain: chain as any,\n      builder,\n      pcf,\n      aif,\n      codec,\n      cfg: cfg as IConfigService,\n    });\n\n    const subsService = new SubscriptionService();\n    subsService.bindDependencies({\n      store: store as any,\n      builder,\n      chain: chain as any,\n      cfg: cfg as IConfigService,\n      codec,\n      pricing,\n    });\n    log('DOMAIN', 'Invoice/Refund/Subscription services bound');\n\n    // 9) Controllers / static server\n    const publicCtrl = new PublicApiController();\n    publicCtrl.bindDependencies({\n      store: store as any,\n      chain: chain as any,\n      builder,\n      aif,\n      cfg: cfg as IConfigService,\n      codec,\n    });\n    publicCtrl.bindCorsPolicy(corsPolicy as any);\n\n    const merchantCtrl = new MerchantApiController();\n    merchantCtrl.bindDependencies({\n      store: store as any,\n      chain: chain as any,\n      builder,\n      pricing,\n      cfg: cfg as IConfigService,\n      codec,\n      subs: subsService,\n      inv: invService,\n      refund: refundService,\n      aif,\n    });\n\n    const adminCtrl = new AdminApiController();\n    adminCtrl.bindDependencies({\n      store: store as any,\n      chain: chain as any,\n      builder,\n      dispatcher: dispatcher as any,\n      pollerBridge,\n    });\n\n    // inside ApplicationBootstrapper.boot(), after you construct `chain`, `builder`, `adminCtrl`, etc.\n    // In ApplicationBootstrapper.boot()\n    if (process.env.AUTO_BOOTSTRAP_ADMIN === '1' && process.env.SIGNER_PRIVATE_KEY) {\n      try {\n        // 1) Admin\n        const adminNow = await chain.readAdminPrincipal();\n        if (!adminNow) {\n          const unsigned = builder.buildBootstrapAdmin();\n          await chain.signAndBroadcast(unsigned, env('SIGNER_PRIVATE_KEY')!);\n          await this.waitFor(() => chain.readAdminPrincipal(), v => !!v);\n          log('BOOTSTRAP', 'on-chain admin set');\n        }\n\n        // 2) sBTC token\n        const sbtc = await chain.readSbtcToken();\n        if (!sbtc && env('SBTC_CONTRACT_ADDRESS') && env('SBTC_CONTRACT_NAME')) {\n          const unsigned = builder.buildSetSbtcToken({\n            contractAddress: env('SBTC_CONTRACT_ADDRESS')!,\n            contractName: env('SBTC_CONTRACT_NAME')!,\n          });\n          await chain.signAndBroadcast(unsigned, env('SIGNER_PRIVATE_KEY')!);\n          await this.waitFor(() => chain.readSbtcToken(), v => !!v);\n          log('BOOTSTRAP', 'sbtc-token configured');\n        }\n      } catch (e: any) {\n        // idempotent safety + visibility if it races\n        log('BOOTSTRAP', `skipped or failed: ${e?.message || e}`);\n      }\n    } else {\n      log('BOOTSTRAP', 'skipped (set AUTO_BOOTSTRAP_ADMIN=true and provide SIGNER_PRIVATE_KEY)');\n    }\n\n    const healthCtrl = new HealthController();\n\n    const staticServer = new AdminStaticServer();\n    const adminStaticRoot = env('ADMIN_STATIC_DIR')\n      ? String(env('ADMIN_STATIC_DIR'))\n      : path.join(process.cwd(), 'admin');\n    staticServer.configureStaticDir(adminStaticRoot);\n    log('CTRL', `controllers + static server ready (admin dir: ${adminStaticRoot})`);\n\n    // 10) HTTP composition\n    const app: Express = express();\n    const httpServer = new HttpApiServer();\n\n    httpServer.composeRoutesAndMiddleware(app, {\n      publicCtrl,\n      merchantCtrl,\n      adminCtrl,\n      healthCtrl,\n      adminAuth,\n      storeAuth,\n      crossTenantMask: crossTenant,\n      rateLimit,\n      corsPolicy,\n      staticServer,\n      webhookVerifier: dispatcher.verifyWebhookSignature.bind(dispatcher),\n    });\n    log('HTTP', 'routes and middleware composed');\n\n    // 11) Start schedulers/poller & any server-managed services\n    await poller.startPoller();\n    log('POLLER', 'started');\n\n    // Some HttpApiServer implementations may already bind a port; we handle that safely.\n    await httpServer.start({\n      app,\n      poller,\n      webhookRetry,\n      subscriptionScheduler: subScheduler,\n      config: cfg as IConfigService,\n    });\n    log('HTTP', 'HttpApiServer.start completed');\n\n    // 12) Listen (single authoritative binding with EADDRINUSE fallback)\n    const port = Number(env('PORT') ?? 3000);\n    const host = env('HOST') ?? '0.0.0.0';\n\n    await this.listenWithFallback(app, port, host);\n\n    log('READY', 'service is up');\n  }\n\n  private async listenWithFallback(app: Express, port: number, host: string): Promise<void> {\n    try {\n      this.serverRef = await new Promise<import('http').Server>((resolve, reject) => {\n        const srv = app\n          .listen(port, host, () => {\n            log('HTTP', `listening on http://${host}:${port}`);\n            resolve(srv);\n          })\n          .on('error', (err: any) => reject(err));\n      });\n      this.installShutdownHooks();\n    } catch (err: any) {\n      if (err && err.code === 'EADDRINUSE') {\n        log(\n          'HTTP',\n          `port ${port} already in use — assuming HttpApiServer already bound the port; skipping app.listen`\n        );\n        this.installShutdownHooks();\n        return;\n      }\n      throw err;\n    }\n  }\n\n  private installShutdownHooks() {\n    const shutdown = async (signal: string) => {\n      log('SHUTDOWN', `received ${signal}, closing…`);\n      try {\n        if (this.serverRef) {\n          await new Promise<void>((resolve) => this.serverRef!.close(() => resolve()));\n          log('SHUTDOWN', 'HTTP server closed');\n        }\n      } catch (e) {\n        console.error('[SHUTDOWN] error while closing HTTP server:', e);\n      } finally {\n        process.exit(0);\n      }\n    };\n\n    (['SIGINT', 'SIGTERM'] as NodeJS.Signals[]).forEach((sig) => {\n      process.on(sig, () => void shutdown(sig));\n    });\n  }\n}\n\n// run when executed directly\n(async () => {\n  try {\n    await new ApplicationBootstrapper().boot();\n    log('DONE', 'ready');\n  } catch (e) {\n    console.error('[BOOT] failed:', e);\n    process.exit(1);\n  }\n})();\n"]}