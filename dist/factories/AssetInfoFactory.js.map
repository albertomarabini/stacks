{"version":3,"file":"AssetInfoFactory.js","sourceRoot":"","sources":["../../src/factories/AssetInfoFactory.ts"],"names":[],"mappings":";;;AASA,MAAa,gBAAgB;IAI3B,YAAY,GAAmB;QAC7B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACjB,CAAC;IAED,gBAAgB;QACd,IAAI,IAAI,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC,MAAM,CAAC;QAEpC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC;QAC3C,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;QACxC,CAAC;QAED,MAAM,EAAE,eAAe,EAAE,YAAY,EAAE,GAAG,KAAK,CAAC;QAEhD,IAAI,OAAO,eAAe,KAAK,QAAQ,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;YAC5E,MAAM,IAAI,SAAS,CAAC,+BAA+B,CAAC,CAAC;QACvD,CAAC;QACD,IAAI,CAAC,YAAY,IAAI,OAAO,YAAY,KAAK,QAAQ,EAAE,CAAC;YACtD,MAAM,IAAI,SAAS,CAAC,4BAA4B,CAAC,CAAC;QACpD,CAAC;QAED,MAAM,SAAS,GAAG,MAAM,CAAC;QAEzB,IAAI,CAAC,MAAM,GAAG,EAAE,eAAe,EAAE,YAAY,EAAE,SAAS,EAAE,CAAC;QAC3D,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;CACF;AA9BD,4CA8BC","sourcesContent":["// src/factories/AssetInfoFactory.ts\nimport type { IAssetInfoFactory, IConfigService } from '../contracts/interfaces';\n\ntype SbtcAssetInfo = {\n  contractAddress: string;\n  contractName: string;\n  assetName: string;\n};\n\nexport class AssetInfoFactory implements IAssetInfoFactory {\n  private readonly cfg: IConfigService;\n  private cached?: SbtcAssetInfo;\n\n  constructor(cfg: IConfigService) {\n    this.cfg = cfg;\n  }\n\n  getSbtcAssetInfo(): SbtcAssetInfo {\n    if (this.cached) return this.cached;\n\n    const token = this.cfg.getSbtcContractId();\n    if (!token) {\n      throw new Error('sbtc_token_not_set');\n    }\n\n    const { contractAddress, contractName } = token;\n\n    if (typeof contractAddress !== 'string' || !contractAddress.startsWith('S')) {\n      throw new TypeError('invalid_sbtc_contract_address');\n    }\n    if (!contractName || typeof contractName !== 'string') {\n      throw new TypeError('invalid_sbtc_contract_name');\n    }\n\n    const assetName = 'sbtc';\n\n    this.cached = { contractAddress, contractName, assetName };\n    return this.cached;\n  }\n}\n"]}