{"version":3,"file":"PaymentPoller.js","sourceRoot":"","sources":["../../src/poller/PaymentPoller.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ISqliteStore } from '../contracts/dao';\nimport type {\n  IStacksChainClient,\n  IConfigService,\n  IWebhookDispatcher,\n} from '../contracts/interfaces';\nimport type {\n  PollerMetrics,\n  NormalizedEvent,\n  InvoiceStatus,\n  InvoiceRow,\n} from '../contracts/domain';\nimport { ContractCallEventNormalizer } from '../delegates/ContractCallEventNormalizer';\nimport { ReorgGuard } from '../delegates/ReorgGuard';\nimport { SubscriptionLifecycleProcessor } from '../delegates/SubscriptionLifecycleProcessor';\nimport { InvoiceEventApplier } from '../delegates/InvoiceEventApplier';\nimport { ExpirationMonitor } from '../services/ExpirationMonitor';\n\ntype CursorState = {\n  lastHeight: number;\n  lastTxId?: string;\n  lastBlockHash?: string;\n};\n\nconst MAX_UNPAID_CHECKS_PER_TICK = 200;\nconst MAX_REFUND_CHECKS_PER_TICK = 200;\n\nexport class PaymentPoller {\n  private chain!: IStacksChainClient;\n  private store!: ISqliteStore;\n  private dispatcher!: IWebhookDispatcher;\n  private expirations!: ExpirationMonitor;\n  private cfg!: IConfigService;\n\n  private cursor: CursorState = { lastHeight: 0 };\n  private metrics: PollerMetrics = {\n    running: false,\n    lastRunAt: undefined,\n    lastHeight: 0,\n    lastTxId: undefined,\n    lastBlockHash: undefined,\n    lagBlocks: undefined,\n  };\n\n  private pollHandle: NodeJS.Timeout | null = null;\n  private currentIntervalMs = 0;\n  private rewindToHeight: number | undefined;\n\n  private eventNormalizer = new ContractCallEventNormalizer();\n  private reorgGuard = new ReorgGuard();\n  private subscriptionProcessor!: SubscriptionLifecycleProcessor;\n  private invoiceApplier!: InvoiceEventApplier;\n\n  private normHex64(input: string | undefined | null): string {\n    const s = String(input ?? '').trim();\n    if (!s) return '';\n    const no0x = s.startsWith('0x') || s.startsWith('0X') ? s.slice(2) : s;\n    return no0x.toLowerCase();\n  }\n\n  public isActive(): boolean { return !!this.pollHandle; }\n\n  // ────────────────────────────────────────────────────────────────────────────\n  // READ with hardened fallbacks\n  // ────────────────────────────────────────────────────────────────────────────\n  private async readOnchainInvoice(idHex: string) {\n    const hex = this.normHex64(idHex);\n    if (!hex) return undefined;\n\n    try {\n      const inv = await (this.chain as any).readInvoice?.(hex);\n      if (inv && typeof inv === 'object') {\n        // console.debug('[READ:INV] tuple', { idHex: hex, keys: Object.keys(inv), inv });\n        return inv as any;\n      }\n    } catch (e) {\n      // console.debug('[READ:INV] readInvoice error', e);\n    }\n\n    try {\n      const s = await (this.chain as any).readInvoiceStatus?.(hex);\n      if (typeof s === 'string' && s) {\n        // console.debug('[READ:INV] status-only', { idHex: hex, status: s });\n        return { status: s };\n      }\n    } catch { }\n\n    try {\n      const p = await (this.chain as any).readIsPaid?.(hex);\n      if (typeof p === 'boolean') {\n        // console.debug('[READ:INV] bool-only', { idHex: hex, paid: p });\n        return { status: p ? 'paid' : 'unpaid' };\n      }\n    } catch { }\n\n    console.debug('[POLLER] onchain read returned undefined for', hex);\n    return undefined;\n  }\n\n  bindDependencies(\n    chain: IStacksChainClient,\n    store: ISqliteStore,\n    dispatcher: IWebhookDispatcher,\n    expirations: ExpirationMonitor,\n    cfg: IConfigService,\n  ): void {\n    this.chain = chain;\n    this.store = store;\n    this.dispatcher = dispatcher;\n    this.expirations = expirations;\n    this.cfg = cfg;\n\n    this.subscriptionProcessor = new SubscriptionLifecycleProcessor(\n      this.store,\n      this.chain,\n      this.dispatcher,\n    );\n    this.invoiceApplier = new InvoiceEventApplier(this.store, this.dispatcher);\n  }\n\n  bootstrapPoller(): void {\n    if (this.pollHandle) return;\n    const pollSecs = this.cfg.getPollingConfig().pollIntervalSecs;\n    const avgBlockSecs = this.cfg.getAvgBlockSecs();\n    const intervalSecs = Math.max(5, pollSecs, avgBlockSecs);\n    this.currentIntervalMs = intervalSecs * 1000;\n\n    if (!this.cursor) {\n      this.cursor = { lastHeight: 0, lastTxId: undefined, lastBlockHash: undefined };\n    }\n    this.metrics = {\n      running: false,\n      lastRunAt: undefined,\n      lastHeight: 0,\n      lastTxId: undefined,\n      lastBlockHash: undefined,\n      lagBlocks: undefined,\n    };\n\n    this.pollHandle = setInterval(() => void this.timerCallback(), this.currentIntervalMs);\n    void this.timerCallback();\n  }\n\n  timerCallback(): void {\n    void this.pollTick().catch((err) => {\n      // keep interval alive but surface failures\n      // eslint-disable-next-line no-console\n      console.debug('[POLLER] pollTick error:', err?.stack || err);\n      this.refreshMetrics(); // update lastRunAt even on failure\n    });\n  }\n\n  // private async observePendingBroadcasts(): Promise<void> {\n  //   // [MISSING] replace with your actual store read:\n  //   const pending = this.store.selectPendingInvoiceBroadcasts?.() as Array<{ invoice_id: string; txid: string }> | undefined;\n  //   if (!pending || !pending.length) return;\n\n  //   for (const row of pending) {\n  //     try {\n  //       const tx = await (this.chain as any).getTxStatus(row.txid);\n  //       const s = String(tx?.tx_status || '').toLowerCase();\n\n  //       if (s === 'abort_by_response' || s === 'failed' || s.startsWith('dropped')) {\n  //         // [MISSING] store hook to annotate failure and clear pending\n  //         this.store.setInvoiceBroadcastFailed?.({ invoiceId: row.invoice_id, txid: row.txid, reason: s });\n  //       }\n  //       if (s === 'success') {\n  //         // Don’t mark paid here — let normal on-chain reads/events flip state.\n  //         // Just clear pending so UI can show “mining/confirming”.\n  //         this.store.clearInvoiceBroadcastPending?.({ invoiceId: row.invoice_id, txid: row.txid });\n  //       }\n  //       // if s === 'pending' → do nothing\n  //     } catch {\n  //       // swallow transient reader errors\n  //     }\n  //   }\n  // }\n\n\n  async startPoller(): Promise<void> {\n    const saved =\n      this.store.getPollerCursor() ??\n      null;\n\n    if (saved) {\n      this.cursor = {\n        lastHeight: saved.lastHeight,\n        lastTxId: saved.lastTxId,\n        lastBlockHash: saved.lastBlockHash,\n      };\n    } else {\n      const tip = await this.chain.getTip();\n      const { minConfirmations } = this.cfg.getPollingConfig();\n      this.cursor = {\n        lastHeight: Math.max(0, tip.height - Math.max(1, Number(minConfirmations || 1))),\n        lastTxId: undefined,\n        lastBlockHash: tip.blockHash,\n      };\n    }\n\n    const pollSecs = this.cfg.getPollingConfig().pollIntervalSecs;\n    this.currentIntervalMs = Math.max(5, pollSecs) * 1000;\n    if (this.pollHandle) {\n      clearInterval(this.pollHandle);\n      this.pollHandle = null;\n    }\n    this.pollHandle = setInterval(() => void this.timerCallback(), this.currentIntervalMs);\n\n    this.metrics = {\n      running: false,\n      lastRunAt: undefined,\n      lastHeight: this.cursor.lastHeight,\n      lastTxId: this.cursor.lastTxId,\n      lastBlockHash: this.cursor.lastBlockHash,\n      lagBlocks: 0,\n    };\n    void this.timerCallback();\n  }\n\n  async pollTick(): Promise<void> {\n    if (!this.guardReentrancy()) return;\n\n    let tipHeight = 0;\n    try {\n      const { tipHeight: th, tipBlockHash, cursorRef } = await this.readChainTip();\n      const {contractAddress, contractName} = this.cfg.getContractId();\n      console.debug('[POLLER:TICK]', {\n        from: this.rewindToHeight !== undefined ? this.rewindToHeight : (this.cursor.lastHeight + 1),\n        cursorLastHeight: this.cursor.lastHeight,\n        tipHeight,\n        contract: `${contractAddress}.${contractName}`,\n      });\n      tipHeight = th;\n      const fromHeight = this.rewindToHeight !== undefined ? this.rewindToHeight : cursorRef.lastHeight + 1;\n\n      const batch = await this.fetchAndFilterEvents(fromHeight);\n      console.debug('[POLLER:BATCH]', { count: batch.length, sample: batch.slice(0, 3) });\n\n      const { minConfirmations } = this.cfg.getPollingConfig();\n      await this.processSubscriptionEvents(batch, tipHeight, minConfirmations);\n\n      for (const e of batch) {\n        await this.processEvent(e, tipHeight, minConfirmations);\n      }\n\n      const unpaidStatuses: InvoiceStatus[] = ['unpaid'];\n      const unpaidRows: InvoiceRow[] =\n        this.store.selectAdminInvoices(unpaidStatuses) as unknown as InvoiceRow[];\n      const candidateHexes = unpaidRows.map((r) => r.id_hex);\n      // await this.observePendingBroadcasts();\n\n      await this.expirations.sweepOnchainStatuses(candidateHexes, {\n        store: this.store,\n        chain: this.chain,\n        dispatcher: this.dispatcher,\n      });\n\n      await this.sweepOnchainPaid(unpaidRows.slice(0, MAX_UNPAID_CHECKS_PER_TICK), tipHeight, minConfirmations);\n      await this.sweepOnchainRefunds(tipHeight, minConfirmations);\n\n      const reorg = await this.detectReorg(fromHeight, tipHeight);\n      if (reorg) {\n        this.planRewindWindow();\n        return;\n      }\n\n      const lastTxId = batch.length ? batch[batch.length - 1].tx_id : undefined;\n      // console.debug(`[tick:done] ${batch.length} evts, ${fromHeight}, ${tipHeight}`);\n      await this.updateCursorState(\n        { height: tipHeight, blockHash: tipBlockHash, parentHash: '' },\n        lastTxId,\n        tipHeight,\n      );\n      this.rewindToHeight = undefined;\n    } finally {\n      this.refreshMetrics({ tipHeight });\n    }\n  }\n\n  private async sweepOnchainPaid(\n    unpaidRows: InvoiceRow[],\n    tipHeight: number,\n    minConfirmations: number,\n  ): Promise<void> {\n    if (!unpaidRows.length) return;\n\n    for (const row of unpaidRows) {\n      const idHex = this.normHex64(row.id_hex as unknown as string);\n      if (!idHex) continue;\n      const inv = await this.readOnchainInvoice(idHex);\n      const status = String(inv?.status ?? '').toLowerCase();\n\n      const paidLike =\n        status === 'paid' ||\n        status === 'settled' ||\n        status === 'paid_confirmed' ||\n        status.startsWith('paid-') ||\n        status.startsWith('settled-');\n\n      if (!paidLike) continue;\n\n      const paidAtHeight =\n        typeof inv?.paidAtHeight === 'number'\n          ? inv.paidAtHeight\n          : (typeof inv?.lastChangeHeight === 'number' ? inv.lastChangeHeight : undefined);\n\n      const confirmations = typeof paidAtHeight === 'number'\n        ? (tipHeight - paidAtHeight + 1)\n        : Number.MAX_SAFE_INTEGER;\n\n      if (confirmations < minConfirmations) continue;\n\n      const cur = String(row.status || '').toLowerCase();\n      if (cur === 'paid' || cur === 'partially_refunded' || cur === 'refunded') continue;\n\n      const latestStatus = this.store.getInvoiceStatusByHex(idHex);\n      if (latestStatus && latestStatus.toLowerCase() !== 'unpaid') continue;\n\n      const ev = {\n        type: 'invoice-paid',\n        idHex,\n        merchantPrincipal: row.merchant_principal,\n        amountSats: Number(row.amount_sats ?? 0),\n        tx_id: inv?.lastTxId ?? '',\n        block_height: typeof paidAtHeight === 'number' ? paidAtHeight : tipHeight,\n        sender: inv?.payer ?? undefined,\n      } as NormalizedEvent;\n\n      await this.invoiceApplier.handlePaid(ev);\n    }\n  }\n\n  // src/services/PaymentPoller.ts\n\n  private async sweepOnchainRefunds(tipHeight: number, minConfirmations: number): Promise<void> {\n    const rows = this.store.selectInvoicesByStatuses(\n      ['paid', 'partially_refunded'],\n      MAX_REFUND_CHECKS_PER_TICK\n      // , optionalStoreId\n    ) as Pick<InvoiceRow, 'id_hex' | 'status' | 'refund_amount' | 'merchant_principal'>[];\n\n    if (!rows.length) return;\n\n    // Hardened converter: handles bigint | number | \"u…\" string | CV JSON object\n    const toNumU = (x: any): number => {\n      if (x === null || x === undefined) return NaN;\n      if (typeof x === 'number') return x;\n      if (typeof x === 'bigint') return Number(x);\n      if (typeof x === 'string') return Number(x.startsWith('u') ? x.slice(1) : x);\n      if (typeof x === 'object') {\n        // Peel common CV JSON shapes: {value}, {repr}, nested\n        if ('value' in x) return toNumU((x as any).value);\n        if ('repr' in x) return toNumU((x as any).repr);\n        // last-ditch: try first enumerable field\n        const k = Object.keys(x)[0];\n        if (k) return toNumU((x as any)[k]);\n        return NaN;\n      }\n      return NaN;\n    };\n\n    for (const row of rows) {\n      const idHex = this.normHex64(row.id_hex as unknown as string);\n      if (!idHex) continue;\n\n      const inv = await this.readOnchainInvoice(idHex);\n      // console.debug('[SWEEP:R]', { idHex, invKeys: inv ? Object.keys(inv) : [], inv });\n      if (!inv) continue;\n\n      const onchainRefundRaw = (inv as any).refundAmount;\n      if (onchainRefundRaw === undefined || onchainRefundRaw === null) {\n        // console.debug('[SWEEP:R] skip (no refundAmount on-chain)', { idHex });\n        continue;\n      }\n\n      const onchainRefund = toNumU(onchainRefundRaw);\n      const localRefund = Number(row.refund_amount ?? 0);\n\n      const preview = typeof onchainRefundRaw === 'string'\n        ? onchainRefundRaw.slice(0, 64)\n        : (typeof onchainRefundRaw === 'object' ? Object.keys(onchainRefundRaw).slice(0, 5) : onchainRefundRaw);\n      // console.debug('[SWEEP:R] types', { typeofOnchain: typeof onchainRefundRaw, preview, onchainRefund });\n\n\n      if (!Number.isFinite(onchainRefund)) {\n        // console.debug('[SWEEP:R] skip (refundAmount not numeric after normalize)', { idHex });\n        continue;\n      }\n\n      const delta = onchainRefund - localRefund;\n\n      // confirmations\n      let h = typeof (inv as any).lastChangeHeight === 'number' ? (inv as any).lastChangeHeight : undefined;\n      const conf = typeof h === 'number' ? (tipHeight - h + 1) : Number.MAX_SAFE_INTEGER;\n\n      // console.debug('[SWEEP:R] decide', { idHex, onchainRefund, localRefund, delta, h, conf, minConfirmations });\n\n      if (!(delta > 0)) continue;\n      if (conf < minConfirmations) {\n        // console.debug('[SWEEP:R] wait (confirmations)', { idHex, conf, minConfirmations });\n        continue;\n      }\n\n      // Fallback block height if none surfaced\n      if (h === undefined) h = tipHeight;\n\n      const ev: NormalizedEvent = {\n        type: 'refund-invoice',\n        idHex,\n        merchantPrincipal: row.merchant_principal,\n        amountSats: delta,\n        tx_id: (inv as any).lastTxId ?? '',\n        block_height: h,\n      } as NormalizedEvent;\n\n      // console.debug('[SWEEP:R] APPLY', { idHex, delta, tx_id: ev.tx_id });\n      await this.invoiceApplier.handleRefund(ev);\n    }\n  }\n\n\n\n  guardReentrancy(): boolean {\n    if (this.metrics.running) return false;\n    this.metrics.running = true;\n    return true;\n  }\n\n  async readChainTip(): Promise<{\n    tipHeight: number;\n    tipBlockHash: string;\n    cursorRef: CursorState;\n  }> {\n    const cursorRef = { ...this.cursor };\n    const { height, blockHash } = await this.chain.getTip();\n    return { tipHeight: height, tipBlockHash: blockHash, cursorRef };\n  }\n\n  async fetchAndFilterEvents(fromHeight: number): Promise<NormalizedEvent[]> {\n    return this.eventNormalizer.fetchAndFilterEvents(fromHeight, this.chain, this.store);\n  }\n\n  async processSubscriptionEvents(\n    eventBatch: NormalizedEvent[],\n    tipHeight: number,\n    minConfirmations: number,\n  ): Promise<void> {\n    await this.subscriptionProcessor.processBatch(eventBatch, tipHeight, minConfirmations);\n  }\n\n  async processEvent(e: NormalizedEvent, tipHeight: number, minConfirmations: number): Promise<void> {\n    const confirmations = tipHeight - e.block_height + 1;\n    console.debug('[EVT:PROC]', { type: e.type, idHex: e.idHex, block: e.block_height, tipHeight, confirmations, minConfirmations });\n\n    if (confirmations < minConfirmations) {\n      console.debug('[EVT:PROC] defer (insufficient conf)', { type: e.type, idHex: e.idHex, confirmations, minConfirmations });\n      return;\n    }\n\n    if (e.type === 'invoice-paid') {\n      e.idHex = this.normHex64(e.idHex);\n      console.debug('[EVT:PROC] APPLY paid', { idHex: e.idHex });\n      await this.onInvoicePaidConfirmed(e);\n      return;\n    }\n    if (e.type === 'refund-invoice') {\n      console.debug('[EVT:PROC] APPLY refund', { idHex: e.idHex, amountSats: e.amountSats, tx: e.tx_id });\n      await this.onRefundConfirmed(e);\n      return;\n    }\n    if (e.type === 'invoice-canceled') {\n      console.debug('[EVT:PROC] APPLY canceled', { idHex: e.idHex });\n      await this.invoiceApplier.handleCanceled(e);\n      return;\n    }\n  }\n\n  async detectReorg(firstBlockToProcessHeight: number, tipHeight: number): Promise<boolean> {\n    try {\n      return this.reorgGuard.detectReorg(\n        firstBlockToProcessHeight,\n        tipHeight,\n        { lastHeight: this.cursor.lastHeight, lastBlockHash: this.cursor.lastBlockHash },\n        this.chain,\n      );\n    } catch {\n      return false;\n    }\n  }\n\n  planRewindWindow(): void {\n    const { reorgWindowBlocks } = this.cfg.getPollingConfig();\n    const target = this.reorgGuard.computeRewindTarget(\n      { lastHeight: this.cursor.lastHeight, lastBlockHash: this.cursor.lastBlockHash },\n      reorgWindowBlocks,\n    );\n    this.planRewind(target);\n  }\n\n  planRewind(targetHeight: number): void {\n    this.rewindToHeight = targetHeight;\n  }\n\n  async updateCursorState(\n    processedBlockHeader: { height: number; blockHash: string; parentHash: string },\n    lastTxId?: string,\n    tipHeightKnown?: number,\n  ): Promise<void> {\n    this.cursor = {\n      lastHeight: processedBlockHeader.height,\n      lastTxId,\n      lastBlockHash: processedBlockHeader.blockHash,\n    };\n    const now = Math.floor(Date.now() / 1000);\n    this.store.savePollerCursor({\n      lastRunAt: now,\n      lastHeight: this.cursor.lastHeight,\n      lastTxId: this.cursor.lastTxId,\n      lastBlockHash: this.cursor.lastBlockHash,\n    });\n\n    const tipHeight = typeof tipHeightKnown === 'number'\n      ? tipHeightKnown\n      : (await this.chain.getTip()).height;\n\n    this.metrics.lastHeight = this.cursor.lastHeight;\n    this.metrics.lastTxId = this.cursor.lastTxId;\n    this.metrics.lastBlockHash = this.cursor.lastBlockHash;\n    this.metrics.lagBlocks = Math.max(0, tipHeight - this.cursor.lastHeight);\n  }\n\n  async onInvoicePaidConfirmed(event: NormalizedEvent): Promise<void> {\n    await this.invoiceApplier.handlePaid(event);\n  }\n\n  async onRefundConfirmed(event: NormalizedEvent): Promise<void> {\n    await this.invoiceApplier.handleRefund(event);\n  }\n\n  async onSubscriptionCreated(\n    event: NormalizedEvent,\n    tipHeight: number,\n    minConfirmations: number,\n  ): Promise<void> {\n    const confirmations = tipHeight - event.block_height + 1;\n    if (confirmations < minConfirmations) return;\n    if (!/^[0-9A-Fa-f]{64}$/.test(event.idHex)) return;\n    const storeId = this.store.getStoreIdByPrincipal(String(event.merchantPrincipal));\n    if (!storeId) return;\n\n    this.store.upsertSubscriptionByHex({\n      idHex: event.idHex,\n      storeId,\n      merchantPrincipal: String(event.merchantPrincipal),\n      subscriber: String(event.subscriber),\n      amountSats: Number(event.amountSats),\n      intervalBlocks: Number(event.intervalBlocks),\n      active: 1,\n    });\n\n    const onchain = await this.chain.readSubscription(event.idHex);\n    const nextDue =\n      onchain?.nextDue !== undefined ? Number(onchain.nextDue) : tipHeight + Number(event.intervalBlocks ?? 0);\n\n    const rawBody = JSON.stringify({\n      subscriptionId: event.idHex,\n      merchant: String(event.merchantPrincipal),\n      subscriber: String(event.subscriber),\n      amountSats: Number(event.amountSats),\n      intervalBlocks: Number(event.intervalBlocks),\n      nextDue,\n    });\n\n    await this.dispatcher.dispatch({\n      storeId,\n      subscriptionId: event.idHex,\n      eventType: 'subscription-created',\n      rawBody,\n    });\n  }\n\n  async onSubscriptionPaid(\n    event: NormalizedEvent,\n    tipHeight: number,\n    minConfirmations: number,\n  ): Promise<void> {\n    const confirmations = tipHeight - event.block_height + 1;\n    if (confirmations < minConfirmations) return;\n\n    const onchain = await this.chain.readSubscription(event.idHex);\n    const amountSats = onchain ? Number(onchain.amountSats) : 0;\n    const nextDue = onchain ? Number(onchain.nextDue) : tipHeight + Number(event.intervalBlocks ?? 0);\n    const merchant = onchain?.merchant;\n    const storeId = merchant ? this.store.getStoreIdByPrincipal(merchant) : undefined;\n    if (!storeId) return;\n\n    this.store.updateSubscriptionLastPaid({ subscriptionId: event.idHex, lastPaidInvoiceId: '' });\n\n    const rawBody = JSON.stringify({\n      subscriptionId: event.idHex,\n      subscriber: String(event.sender),\n      amountSats,\n      txId: event.tx_id,\n      nextDue,\n    });\n\n    await this.dispatcher.dispatch({\n      storeId,\n      subscriptionId: event.idHex,\n      eventType: 'subscription-paid',\n      rawBody,\n    });\n  }\n\n  async onSubscriptionCanceled(\n    event: NormalizedEvent,\n    tipHeight: number,\n    minConfirmations: number,\n  ): Promise<void> {\n    const confirmations = tipHeight - event.block_height + 1;\n    if (confirmations < minConfirmations) return;\n\n    this.store.setSubscriptionActive({ idHex: event.idHex, active: 0 });\n\n    const onchain = await this.chain.readSubscription(event.idHex);\n    const storeId = onchain ? this.store.getStoreIdByPrincipal(onchain.merchant) : undefined;\n    if (!storeId) return;\n\n    const rawBody = JSON.stringify({ subscriptionId: event.idHex });\n\n    await this.dispatcher.dispatch({\n      storeId,\n      subscriptionId: event.idHex,\n      eventType: 'subscription-canceled',\n      rawBody,\n    });\n  }\n\n  refreshMetrics(snapshot?: Partial<PollerMetrics> & { tipHeight?: number }): void {\n    this.metrics.running = false;\n    this.metrics.lastRunAt = Math.floor(Date.now() / 1000);\n    this.metrics.lastHeight = this.cursor.lastHeight;\n    this.metrics.lastTxId = this.cursor.lastTxId;\n    this.metrics.lastBlockHash = this.cursor.lastBlockHash;\n    if (typeof snapshot?.tipHeight === 'number') {\n      this.metrics.lagBlocks = Math.max(0, snapshot.tipHeight - this.cursor.lastHeight);\n    }\n  }\n\n  restartPoller(): { running: boolean } {\n    if (this.pollHandle) {\n      clearInterval(this.pollHandle);\n      this.pollHandle = null;\n    }\n    this.metrics.running = false;\n    const ms =\n      this.currentIntervalMs ||\n      this.cfg.getPollingConfig().pollIntervalSecs * 1000;\n    this.currentIntervalMs = ms;\n    this.pollHandle = setInterval(() => void this.timerCallback(), ms);\n    return { running: !!this.pollHandle };\n  }\n\n  getState(): PollerMetrics {\n    return { ...this.metrics };\n  }\n}\n"]}