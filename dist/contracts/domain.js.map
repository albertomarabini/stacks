{"version":3,"file":"domain.js","sourceRoot":"","sources":["../../src/contracts/domain.ts"],"names":[],"mappings":";AAAA,0BAA0B","sourcesContent":["// src/contracts/domain.ts\n\n// Enums\nexport type InvoiceStatus =\n  | 'unpaid'\n  | 'paid'\n  | 'partially_refunded'\n  | 'refunded'\n  | 'canceled'\n  | 'expired';\n\nexport type WebhookEventType =\n  | 'paid'\n  | 'refunded'\n  | 'subscription'\n  | 'subscription-created'\n  | 'subscription-paid'\n  | 'subscription-canceled'\n  | 'invoice-expired'\n  | 'invoice-canceled';\n\nexport type SubscriptionMode = 'invoice' | 'direct';\n\n// On-chain mirrors (read-only DTOs)\nexport interface OnChainInvoice {\n  idHex: string; // 64-hex for (buff 32)\n  merchant: string; // principal\n  amountSats: bigint;\n  memo?: string; // ≤34 bytes utf8\n  expiresAt?: bigint; // block height\n  paid: boolean;\n  canceled: boolean;\n  refundAmountSats: bigint;\n  payer?: string; // principal\n}\n\nexport interface OnChainSubscription {\n  idHex: string; // 64-hex\n  merchant: string;\n  subscriber: string;\n  amountSats: bigint;\n  intervalBlocks: bigint;\n  active: boolean;\n  nextDue: bigint;\n  lastPaid?: bigint;\n}\n\nexport interface OnChainAdminState {\n  admin?: string; // principal\n  sbtcToken?: { contractAddress: string; contractName: string };\n}\n\n// SQLite rows (snake_case)\nexport interface MerchantRow {\n  id: string;\n  principal: string;\n  name?: string;\n  display_name?: string;\n  logo_url?: string;\n  brand_color?: string;\n  webhook_url?: string;\n  hmac_secret: string;\n  stx_private_key: string;\n  active: number;              // 0/1\n  support_email?: string;\n  support_url?: string;\n  allowed_origins?: string;    // CSV\n  created_at: number;          // seconds\n\n  // new rotation columns (persisted “shown once” guard)\n  keys_rotation_version: number;       // NOT NULL DEFAULT 0\n  keys_last_rotated_at?: number | null;\n  keys_last_revealed_at?: number | null;\n  keys_dual_valid_until?: number | null;\n}\n\nexport interface InvoiceRow {\n  id_raw: string;\n  id_hex: string; // 64-hex, CHECK enforced\n  store_id: string;\n  amount_sats: number;\n  usd_at_create: number;\n  quote_expires_at: number; // ms\n  merchant_principal: string;\n  status: InvoiceStatus;\n  payer?: string;\n  txid?: string;\n  memo?: string;\n  webhook_url?: string;\n  created_at: number; // seconds\n  refunded_at?: number;\n  refund_amount: number;\n  refund_txid?: string;\n  subscription_id?: string;\n  refund_count: number;\n  expired: number; // 0/1\n}\n\nexport interface SubscriptionRow {\n  id: string;\n  id_hex: string; // 64-hex\n  store_id: string;\n  merchant_principal: string;\n  subscriber: string;\n  amount_sats: number;\n  interval_blocks: number;\n  active: number; // 0/1\n  created_at: number;\n  last_billed_at?: number;\n  next_invoice_at: number; // block height\n  last_paid_invoice_id?: string;\n  mode: SubscriptionMode;\n}\n\nexport interface WebhookLogRow {\n  id: string;\n  store_id: string;\n  invoice_id?: string;\n  subscription_id?: string;\n  event_type: WebhookEventType;\n  payload: string; // raw JSON\n  status_code?: number;\n  success: number; // 0/1\n  attempts: number;\n  last_attempt_at: number; // seconds\n}\n\n// Public DTOs (camelCase)\nexport interface PublicInvoiceDTO {\n  invoiceId: string;\n  idHex: string;\n  storeId: string;\n  amountSats: number;\n  usdAtCreate: number;\n  quoteExpiresAt: number; // ms\n  merchantPrincipal: string;\n  status: InvoiceStatus;\n  payer?: string;\n  txId?: string;\n  memo?: string;\n  subscriptionId?: string;\n  createdAt: number; // seconds\n  refundAmount?: number;\n  refundTxId?: string;\n  store?: StorePublicProfileDTO;\n}\n\nexport interface StorePublicProfileDTO {\n  displayName: string | null;\n  logoUrl: string | null;\n  brandColor: string | null;\n  supportEmail: string | null;\n  supportUrl: string | null;\n}\n\nexport interface StorePrivateProfileDTO extends StorePublicProfileDTO {\n  id: string;\n  name?: string;\n  allowedOrigins: string[];\n  principal: string;\n  active: boolean;\n  \n}\n\nexport interface AdminPollerStatusDTO {\n  running: boolean;\n  lastRunAt?: number;\n  lastHeight?: number;\n  lastTxId?: string;\n  lastBlockHash?: string;\n  lagBlocks?: number;\n}\n\n// Unsigned contract-call payload\nexport interface UnsignedContractCall {\n  contractAddress: string;\n  contractName: string;\n  functionName: string;\n  functionArgs: any[]; // Clarity CV descriptors\n  postConditionMode?: 'deny' | 'allow';\n  postConditions?: any[];\n  anchorMode?: 'any' | 'onChainOnly' | 'offChainOnly';\n  network: 'mainnet' | 'testnet' | 'devnet';\n}\n\n// Poller telemetry\nexport interface PollerMetrics {\n  running: boolean;\n  lastRunAt?: number;\n  lastHeight?: number;\n  lastTxId?: string;\n  lastBlockHash?: string;\n  lagBlocks?: number;\n}\n\n// Normalized chain event (for internal processing)\nexport type NormalizedEventType =\n  | 'invoice-paid'\n  | 'refund-invoice'\n  | 'invoice-canceled'\n  | 'create-subscription'\n  | 'cancel-subscription'\n  | 'pay-subscription';\n\nexport interface NormalizedEvent {\n  type: NormalizedEventType;\n  idHex: string;\n  block_height: number;\n  tx_id: string;\n  tx_index: number;\n  sender?: string;\n  merchantPrincipal?: string;\n  subscriber?: string;\n  amountSats?: number;\n  intervalBlocks?: number;\n  refundAmountSats?: number;\n}\n\n// Outbound webhook payloads (camelCase JSON)\nexport type InvoicePaidEvent = {\n  invoiceId: string;\n  status: 'paid';\n  txId: string;\n  payer: string;\n  amountSats: number;\n};\n\nexport type InvoiceRefundedEvent = {\n  invoiceId: string;\n  status: 'refunded';\n  refundTxId: string;\n  refundAmount: number;\n};\n\nexport type SubscriptionInvoiceCreatedEvent = {\n  subscriptionId: string;\n  invoiceId: string;\n  amountSats: number;\n  nextDue: number;\n  subscriber: string;\n};\n\nexport type SubscriptionCreatedEvent = {\n  subscriptionId: string;\n  merchant: string;\n  subscriber: string;\n  amountSats: number;\n  intervalBlocks: number;\n  nextDue: number;\n};\n\nexport type SubscriptionPaidEvent = {\n  subscriptionId: string;\n  subscriber: string;\n  amountSats: number;\n  txId: string;\n  nextDue: number;\n};\n\nexport type SubscriptionCanceledEvent = {\n  subscriptionId: string;\n};\n\nexport type InvoiceExpiredEvent = {\n  invoiceId: string;\n  status: 'expired';\n};\n\nexport type InvoiceCanceledEvent = {\n  invoiceId: string;\n};\n\nexport type NetworkName = 'mainnet' | 'testnet' | 'devnet' | 'mocknet';\nexport type AnchorCase = 'any' | 'on_chain_only' | 'off_chain_only' | 'onChainOnly' | 'offChainOnly';\n"]}