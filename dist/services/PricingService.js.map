{"version":3,"file":"PricingService.js","sourceRoot":"","sources":["../../src/services/PricingService.ts"],"names":[],"mappings":";;;AAAA,iCAAiC;AACjC,8CAAsD;AAMtD,MAAa,cAAc;IAUzB,YAAY,IAKX;QACC,2FAA2F;QAC3F,IAAI,CAAC,QAAQ,GAAG,IAAI,EAAE,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,aAAa,IAAI,uDAAuD,CAAC;QACvH,IAAI,CAAC,SAAS,GAAG,IAAI,EAAE,SAAS,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,IAAI,CAAC,CAAC;QAChF,IAAI,CAAC,OAAO,GAAG,IAAI,EAAE,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,IAAI,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,cAAc,GAAG,IAAI,EAAE,cAAc,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,IAAI,GAAG,CAAC,CAAC;IACjG,CAAC;IAED;;;OAGG;IACH,gBAAgB,CAAC,KAAmB,EAAE,GAAmB;QACvD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QAEf,MAAM,MAAM,GAAG,IAAI,CAAC,GAAU,CAAC;QAE/B,8EAA8E;QAC9E,MAAM,OAAO,GAAG,CAAC,GAAW,EAAsB,EAAE,CAClD,CAAC,OAAO,MAAM,CAAC,SAAS,KAAK,UAAU,IAAI,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACjE,CAAC,OAAO,MAAM,CAAC,GAAG,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACrD,CAAC,OAAO,MAAM,CAAC,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC3D,SAAS,CAAC;QAEZ,MAAM,UAAU,GAAG,CAAC,GAAW,EAAsB,EAAE;YACrD,MAAM,CAAC,GACL,CAAC,OAAO,MAAM,CAAC,SAAS,KAAK,UAAU,IAAI,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gBACjE,CAAC,OAAO,MAAM,CAAC,GAAG,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,KAAK,IAAI;gBAAE,OAAO,SAAS,CAAC;YACpD,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACpB,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QAC5C,CAAC,CAAC;QAEF,mDAAmD;QACnD,IAAI,CAAC,QAAQ;YACX,OAAO,CAAC,eAAe,CAAC;gBACxB,OAAO,CAAC,GAAG,CAAC,aAAa;gBACzB,IAAI,CAAC,QAAQ,CAAC;QAEhB,IAAI,CAAC,SAAS;YACZ,UAAU,CAAC,iBAAiB,CAAC;gBAC7B,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;gBAC/E,IAAI,CAAC,SAAS,CAAC;QAEjB,IAAI,CAAC,OAAO;YACV,UAAU,CAAC,cAAc,CAAC;gBAC1B,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;gBACzE,IAAI,CAAC,OAAO,CAAC;QAEf,IAAI,CAAC,cAAc;YACjB,UAAU,CAAC,uBAAuB,CAAC;gBACnC,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;gBAC3F,IAAI,CAAC,cAAc,CAAC;IACxB,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,mBAAmB;QACvB,sCAAsC;QACtC,MAAM,WAAW,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC;QAE5C,KAAK,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,IAAI,WAAW,EAAE,OAAO,EAAE,EAAE,CAAC;YACxD,IAAI,CAAC;gBACH,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBACjD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC;oBAC1C,MAAM,QAAQ,CAAC,IAAI,KAAK,CAAC,uBAAuB,CAAC,EAAE,uBAAuB,CAAC,CAAC;gBAC9E,CAAC;gBACD,oBAAoB;gBACpB,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;gBACvB,OAAO,KAAK,CAAC;YACf,CAAC;YAAC,OAAO,GAAQ,EAAE,CAAC;gBAClB,MAAM,MAAM,GAAG,OAAO,KAAK,WAAW,CAAC;gBAEvC,IAAI,CAAC,MAAM,EAAE,CAAC;oBACZ,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;oBAC9C,MAAM,IAAA,qBAAK,EAAC,OAAO,CAAC,CAAC;oBACrB,SAAS;gBACX,CAAC;gBAED,+DAA+D;gBAC/D,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,CAAC;oBAC1C,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;oBAChC,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;wBAC/C,OAAO,MAAM,CAAC;oBAChB,CAAC;gBACH,CAAC;gBAED,2CAA2C;gBAC3C,MAAM,CAAC,GAAG,QAAQ,CAAC,IAAI,KAAK,CAAC,mBAAmB,CAAC,EAAE,mBAAmB,CAAC,CAAC;gBACvE,CAAS,CAAC,KAAK,GAAG,GAAG,CAAC;gBACvB,MAAM,CAAC,CAAC;YACV,CAAC;QACH,CAAC;QAED,kCAAkC;QAClC,MAAM,CAAC,GAAG,QAAQ,CAAC,IAAI,KAAK,CAAC,mBAAmB,CAAC,EAAE,mBAAmB,CAAC,CAAC;QACxE,MAAM,CAAC,CAAC;IACV,CAAC;IAEO,KAAK,CAAC,qBAAqB;QACjC,gCAAgC;QAChC,MAAM,IAAI,GAAG,IAAI,eAAe,EAAE,CAAC;QACnC,MAAM,CAAC,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAEzD,IAAI,CAAC;YACH,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAChE,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC;gBACZ,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,KAAK,CAAC,cAAc,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC;gBAC1E,OAAO,CAAC,GAAG,CAAC,iCAAiC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;gBAC1D,GAAW,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;gBACjC,MAAM,GAAG,CAAC;YACZ,CAAC;YACD,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;YAE9B,6BAA6B;YAC7B,sCAAsC;YACtC,+CAA+C;YAC/C,uBAAuB;YACvB,IAAI,KAAyB,CAAC;YAE9B,IAAI,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,UAAU,EAAE,CAAC;gBAC/B,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC1C,CAAC;iBAAM,IAAI,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;gBAC9B,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACnC,CAAC;iBAAM,IAAI,OAAO,IAAI,EAAE,KAAK,KAAK,QAAQ,EAAE,CAAC;gBAC3C,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC;YAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAM,IAAI,CAAC,EAAE,CAAC;gBAC3C,OAAO,CAAC,GAAG,CAAC,iEAAiE,KAAK,IAAI,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC;gBACtG,MAAM,QAAQ,CAAC,IAAI,KAAK,CAAC,2BAA2B,CAAC,EAAE,2BAA2B,CAAC,CAAC;YACtF,CAAC;YACD,OAAO,KAAM,CAAC;QAChB,CAAC;QAAC,OAAO,GAAQ,EAAE,CAAC;YAClB,IAAI,GAAG,EAAE,IAAI,KAAK,YAAY,EAAE,CAAC;gBAC/B,MAAM,CAAC,GAAG,QAAQ,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,EAAE,WAAW,CAAC,CAAC;gBACrD,CAAS,CAAC,KAAK,GAAG,GAAG,CAAC;gBACvB,MAAM,CAAC,CAAC;YACV,CAAC;YACD,MAAM,GAAG,CAAC;QACZ,CAAC;gBAAS,CAAC;YACT,YAAY,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;IACH,CAAC;CACF;AArKD,wCAqKC;AAED,SAAS,QAAQ,CAAkB,CAAI,EAAE,IAAY;IAClD,CAAS,CAAC,IAAI,GAAG,IAAI,CAAC;IACvB,OAAO,CAAQ,CAAC;AAClB,CAAC","sourcesContent":["// src/services/PricingService.ts\nimport { setTimeout as delay } from 'timers/promises';\nimport type { IConfigService } from '../contracts/interfaces';\nimport { PricingCache } from './PricingCache'; // adjust path if different\n\nexport type PriceSnapshot = number;\n\nexport class PricingService {\n  private cache!: PricingCache;\n  private cfg!: IConfigService;\n\n  // Live-fetch tuning (can be overridden via ctor or config/env)\n  private priceUrl: string;\n  private timeoutMs: number;\n  private retries: number;\n  private retryBackoffMs: number;\n\n  constructor(opts?: {\n    priceUrl?: string;          // e.g. 'https://api.coindesk.com/v1/bpi/currentprice/BTC.json'\n    timeoutMs?: number;         // per attempt timeout\n    retries?: number;           // number of retries after the first attempt\n    retryBackoffMs?: number;    // base backoff between retries\n  }) {\n    // defaults; real values finalized in bindDependencies (cfg/env), unless overridden by opts\n    this.priceUrl = opts?.priceUrl ?? process.env.PRICE_API_URL ?? 'https://api.coindesk.com/v1/bpi/currentprice/BTC.json';\n    this.timeoutMs = opts?.timeoutMs ?? Number(process.env.HTTP_TIMEOUT_MS ?? 3000);\n    this.retries = opts?.retries ?? Number(process.env.HTTP_RETRIES ?? 2);\n    this.retryBackoffMs = opts?.retryBackoffMs ?? Number(process.env.HTTP_RETRY_BACKOFF_MS ?? 300);\n  }\n\n  /**\n   * Binds cache + config, and finalizes runtime config (prefers cfg > env > ctor defaults).\n   * This avoids hard-typing config getters so your IConfigService variation won’t cause TS errors.\n   */\n  bindDependencies(cache: PricingCache, cfg: IConfigService): void {\n    this.cache = cache;\n    this.cfg = cfg;\n\n    const anyCfg = this.cfg as any;\n\n    // Try a few common config getter shapes, then fallback to env/current values.\n    const fromCfg = (key: string): string | undefined =>\n      (typeof anyCfg.getString === 'function' && anyCfg.getString(key)) ??\n      (typeof anyCfg.get === 'function' && anyCfg.get(key)) ??\n      (typeof anyCfg.getEnv === 'function' && anyCfg.getEnv(key)) ??\n      undefined;\n\n    const fromCfgNum = (key: string): number | undefined => {\n      const v =\n        (typeof anyCfg.getNumber === 'function' && anyCfg.getNumber(key)) ??\n        (typeof anyCfg.get === 'function' && anyCfg.get(key));\n      if (v === undefined || v === null) return undefined;\n      const n = Number(v);\n      return Number.isFinite(n) ? n : undefined;\n    };\n\n    // Finalize runtime config (cfg > env > prev value)\n    this.priceUrl =\n      fromCfg('PRICE_API_URL') ??\n      process.env.PRICE_API_URL ??\n      this.priceUrl;\n\n    this.timeoutMs =\n      fromCfgNum('HTTP_TIMEOUT_MS') ??\n      (process.env.HTTP_TIMEOUT_MS ? Number(process.env.HTTP_TIMEOUT_MS) : undefined) ??\n      this.timeoutMs;\n\n    this.retries =\n      fromCfgNum('HTTP_RETRIES') ??\n      (process.env.HTTP_RETRIES ? Number(process.env.HTTP_RETRIES) : undefined) ??\n      this.retries;\n\n    this.retryBackoffMs =\n      fromCfgNum('HTTP_RETRY_BACKOFF_MS') ??\n      (process.env.HTTP_RETRY_BACKOFF_MS ? Number(process.env.HTTP_RETRY_BACKOFF_MS) : undefined) ??\n      this.retryBackoffMs;\n  }\n\n  /**\n   * Returns the spot USD price snapshot.\n   * Strategy:\n   *  - Try live HTTP with timeout and limited retries.\n   *  - On failure, if cache is NOT expired and has a value, return it.\n   *  - Otherwise, throw an Error(code='price_unavailable').\n   */\n  async getUsdPriceSnapshot(): Promise<PriceSnapshot> {\n    // Attempt live first (freshness wins)\n    const maxAttempts = 1 + (this.retries ?? 0);\n\n    for (let attempt = 1; attempt <= maxAttempts; attempt++) {\n      try {\n        const price = await this.fetchPriceWithTimeout();\n        if (!Number.isFinite(price) || price <= 0) {\n          throw withCode(new Error('invalid_price_payload'), 'invalid_price_payload');\n        }\n        // Cache the success\n        this.cache?.set(price);\n        return price;\n      } catch (err: any) {\n        const isLast = attempt === maxAttempts;\n\n        if (!isLast) {\n          const backoff = this.retryBackoffMs * attempt;\n          await delay(backoff);\n          continue;\n        }\n\n        // Last attempt failed — try cache (if present and not expired)\n        if (this.cache && !this.cache.isExpired()) {\n          const cached = this.cache.get();\n          if (cached !== null && Number.isFinite(cached)) {\n            return cached;\n          }\n        }\n\n        // Nothing usable → bubble a semantic error\n        const e = withCode(new Error('price_unavailable'), 'price_unavailable');\n        (e as any).cause = err;\n        throw e;\n      }\n    }\n\n    // Unreachable, but keeps TS happy\n    const e = withCode(new Error('price_unavailable'), 'price_unavailable');\n    throw e;\n  }\n\n  private async fetchPriceWithTimeout(): Promise<number> {\n    // AbortController-based timeout\n    const ctrl = new AbortController();\n    const t = setTimeout(() => ctrl.abort(), this.timeoutMs);\n\n    try {\n      const res = await fetch(this.priceUrl, { signal: ctrl.signal });\n      if (!res.ok) {\n        const err = withCode(new Error(`bad_status_${res.status}`), 'bad_status');\n        console.log(`[fetchPriceWithTimeout:error] ${res.status}`);\n        (err as any).status = res.status;\n        throw err;\n      }\n      const json = await res.json();\n\n      // Adapt to common providers:\n      // - Coindesk: json.bpi.USD.rate_float\n      // - CoinGecko (simple price): json.bitcoin.usd\n      // - Custom: json.price\n      let price: number | undefined;\n\n      if (json?.bpi?.USD?.rate_float) {\n        price = Number(json.bpi.USD.rate_float);\n      } else if (json?.bitcoin?.usd) {\n        price = Number(json.bitcoin.usd);\n      } else if (typeof json?.price === 'number') {\n        price = Number(json.price);\n      }\n\n      if (!Number.isFinite(price) || price! <= 0) {\n        console.log(`[fetchPriceWithTimeout:error] unrecognized_price_schema price=${price} ${json} ${json}`);\n        throw withCode(new Error('unrecognized_price_schema'), 'unrecognized_price_schema');\n      }\n      return price!;\n    } catch (err: any) {\n      if (err?.name === 'AbortError') {\n        const e = withCode(new Error('timeout'), 'ETIMEDOUT');\n        (e as any).cause = err;\n        throw e;\n      }\n      throw err;\n    } finally {\n      clearTimeout(t);\n    }\n  }\n}\n\nfunction withCode<T extends Error>(e: T, code: string): T & { code: string } {\n  (e as any).code = code;\n  return e as any;\n}\n"]}