{"version":3,"file":"MerchantApiController.js","sourceRoot":"","sources":["../../src/controllers/MerchantApiController.ts"],"names":[],"mappings":"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","sourcesContent":["// src/controllers/MerchantApiController.ts\nimport type { Request, Response } from 'express';\nimport crypto from 'crypto';\nimport type { ISqliteStore } from '../contracts/dao';\nimport type {\n  IStacksChainClient,\n  IContractCallBuilder,\n  IConfigService,\n  IInvoiceIdCodec,\n} from '../contracts/interfaces';\nimport { PricingService } from '../services/PricingService';\nimport { InvoiceService } from '../services/InvoiceService';\nimport { SubscriptionService } from '../services/SubscriptionService';\nimport RefundService from '../services/RefundService';\nimport { ApiCaseAndDtoMapper } from '../delegates/ApiCaseAndDtoMapper';\nimport { MerchantInputValidator } from '../delegates/MerchantInputValidator';\nimport { RefundPolicyGuard } from '../delegates/RefundPolicyGuard';\nimport { DirectSubscriptionPaymentTxBuilder } from '../delegates/DirectSubscriptionPaymentTxBuilder';\nimport { Validation } from '../validation/rules';\nimport type {\n  MerchantRow,\n  InvoiceRow,\n  SubscriptionRow,\n  InvoiceStatus,\n} from '../contracts/domain';\nimport type { IAssetInfoFactory } from '../contracts/interfaces';\nimport { InvoiceIdGuard } from '../delegates/InvoiceIdGuard';\nimport { PayInvoiceTxAssembler, HttpError } from '../delegates/PayInvoiceTxAssembler';\nimport { encodeStacksPayURL } from 'stacks-pay';\nimport {toJsonSafe} from '../utils/json-safe'\n\ntype AuthedRequest = Request & { store: MerchantRow };\n\nexport class MerchantApiController {\n  private store!: ISqliteStore;\n  private chain!: IStacksChainClient;\n  private builder!: IContractCallBuilder;\n  private pricing!: PricingService;\n  private cfg!: IConfigService;\n  private codec!: IInvoiceIdCodec;\n  private subs!: SubscriptionService;\n  private inv!: InvoiceService;\n  private refund!: RefundService;\n\n  private dtoMapper!: ApiCaseAndDtoMapper;\n  private inputValidator!: MerchantInputValidator;\n  private refundPolicy!: RefundPolicyGuard;\n  private directSubPayBuilder!: DirectSubscriptionPaymentTxBuilder;\n\n  private aif!: IAssetInfoFactory;\n  private idGuard!: InvoiceIdGuard;\n  private payTxAsm!: PayInvoiceTxAssembler;\n\n  private jsonSafe<T>(obj: T): T {\n    if (obj === undefined) return undefined as any;\n    return JSON.parse(\n      JSON.stringify(obj, (_k, v) => (typeof v === 'bigint' ? v.toString() : v))\n    );\n  }\n\n  bindDependencies(deps: {\n    store: ISqliteStore;\n    chain: IStacksChainClient;\n    builder: IContractCallBuilder;\n    pricing: PricingService;\n    cfg: IConfigService;\n    codec: IInvoiceIdCodec;\n    subs: SubscriptionService;\n    inv: InvoiceService;\n    refund: RefundService;\n    aif: IAssetInfoFactory;\n  }): void {\n    this.store = deps.store;\n    this.chain = deps.chain;\n    this.builder = deps.builder;\n    this.pricing = deps.pricing;\n    this.cfg = deps.cfg;\n    this.codec = deps.codec;\n    this.subs = deps.subs;\n    this.inv = deps.inv;\n    this.refund = deps.refund;\n    this.aif = deps.aif;\n\n    this.dtoMapper = new ApiCaseAndDtoMapper();\n    this.inputValidator = new MerchantInputValidator();\n    this.refundPolicy = new RefundPolicyGuard(this.codec, this.refund);\n    this.directSubPayBuilder = new DirectSubscriptionPaymentTxBuilder(\n      this.chain, this.builder, this.codec,\n    );\n\n    // ← new (same wiring as PublicApiController)\n    this.idGuard = new InvoiceIdGuard(this.codec);\n    const NonPayableStatuses = new Set(['paid', 'canceled', 'cancelled', 'expired', 'refunded', 'partially_refunded']);\n    this.payTxAsm = new PayInvoiceTxAssembler(\n      this.builder, this.aif, this.cfg, this.chain, this.idGuard, NonPayableStatuses,\n    );\n  }\n\n\n  // Base64url-encode a UTF-8 string (no padding)\n  private b64url(s: string): string {\n    return Buffer.from(s, 'utf8').toString('base64')\n      .replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/g, '');\n  }\n\n  // HMAC SHA-256 of data with the store secret, base64url encoded\n  private hmacB64url(secret: string, data: string): string {\n    return crypto.createHmac('sha256', secret).update(data).digest('base64')\n      .replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/g, '');\n  }\n\n  // Normalize builder output so the checkout page can use it directly with @stacks/connect\n  private normalizeUnsigned(unsigned: any): {\n    contractId: string;\n    function: string;\n    args: any[];\n    postConditions?: any[];\n    postConditionMode?: string;\n    network?: string;\n  } {\n    const contractId =\n      unsigned?.contractId ??\n      (unsigned?.contractAddress && unsigned?.contractName\n        ? `${unsigned.contractAddress}.${unsigned.contractName}`\n        : String(unsigned?.contract || ''));\n\n    return {\n      contractId,\n      function: String(unsigned?.function ?? unsigned?.functionName ?? 'pay-invoice'),\n      args: Array.isArray(unsigned?.functionArgs) ? unsigned.functionArgs : [],\n      postConditions: unsigned?.postConditions ?? [],\n      postConditionMode: String(unsigned?.postConditionMode ?? 'deny'),\n      network: unsigned?.network ?? 'mainnet',\n    };\n  }\n\n  async getInvoice(req: Request, res: Response): Promise<void> {\n    const sreq = req as AuthedRequest;\n    const idRaw = String(req.params.invoiceId);\n    const row = this.store.invoices.findByStoreAndIdRaw(sreq.store.id, idRaw);\n    if (!row) {\n      res.status(404).end();\n      return;\n    }\n    const dto = this.dtoMapper.invoiceToPublicDto(row);\n    res.json(dto);\n  }\n\n  async listInvoices(req: Request, res: Response): Promise<void> {\n    // guard: missing auth should be a clean 401 (prevents \"fetch failed\")\n    if (!(req as any).store) {\n      res.status(401).json({ error: 'missing-api-key' });\n      return;\n    }\n    const sreq = req as AuthedRequest;\n    const statusQ = req.query.status ? String(req.query.status) : undefined;\n    const allowed: InvoiceStatus[] = [\n      'unpaid',\n      'paid',\n      'partially_refunded',\n      'refunded',\n      'canceled',\n      'expired',\n    ];\n    if (statusQ && !allowed.includes(statusQ as InvoiceStatus)) {\n      res.status(400).json({ error: 'bad_status' });\n      return;\n    }\n    const rows = this.store.listInvoicesByStore(sreq.store.id, {\n      status: statusQ as InvoiceStatus | undefined,\n      orderByCreatedDesc: true,\n    });\n    res.json(rows.map((r) => this.dtoMapper.invoiceToPublicDto(r)));\n  }\n\n  // ─────────────────────────────────────────────────────────────────────────────\n  // CANCEL (builder): returns unsigned call (used first by the test)\n  // Route: POST /api/v1/stores/:storeId/invoices/:invoiceId/cancel/create-tx\n  // ─────────────────────────────────────────────────────────────────────────────\n  async cancelInvoiceCreateTx(req: Request, res: Response): Promise<void> {\n    const sreq = req as AuthedRequest;\n    const idRaw = String(req.params.invoiceId);\n    const invRow = this.store.invoices.findByStoreAndIdRaw(sreq.store.id, idRaw);\n    if (!invRow) { res.status(404).end(); return; }\n\n    // Only unpaid & not expired are cancellable via builder/action\n    if (invRow.status !== 'unpaid' || Number(invRow.expired ?? 0) === 1) {\n      res.status(409).json({ error: 'not_cancellable' }); return;\n    }\n\n    // Flip mirror NOW so public /create-tx will block immediately after this call\n    this.codec.assertHex64(invRow.id_hex);\n    this.store.markInvoiceCanceled(invRow.id_hex);\n\n    // Re-read to ensure it took effect\n    const after = this.store.invoices.findByStoreAndIdRaw(sreq.store.id, idRaw);\n    if (!after || after.status !== 'canceled') {\n      res.status(409).json({ error: 'not_cancellable' }); return;\n    }\n\n    // Still return the unsigned on-chain cancel call so the client can broadcast it\n    const unsignedCall = this.builder.buildCancelInvoice({ idHex: invRow.id_hex });\n    res.json({ canceled: true, unsignedCall, unsignedPayload: unsignedCall });\n  }\n\n\n  // ─────────────────────────────────────────────────────────────────────────────\n  // CANCEL (action): flips mirror row to canceled (fallback path in the test)\n  // Route: POST /api/v1/stores/:storeId/invoices/:invoiceId/cancel\n  // NOTE: store.markInvoiceCanceled(idHex) returns void -> re-read to verify\n  // ─────────────────────────────────────────────────────────────────────────────\n  async cancelInvoice(req: Request, res: Response): Promise<void> {\n    const sreq = req as AuthedRequest;\n    const idRaw = String(req.params.invoiceId);\n    const invRow = this.store.invoices.findByStoreAndIdRaw(sreq.store.id, idRaw);\n    if (!invRow) { res.status(404).end(); return; }\n\n    // Only unpaid & not expired are cancellable\n    if (invRow.status !== 'unpaid' || Number(invRow.expired ?? 0) === 1) {\n      res.status(409).json({ error: 'not_cancellable' }); return;\n    }\n\n    // Perform DB-side cancel (void return -> cannot test truthiness)\n    this.codec.assertHex64(invRow.id_hex);\n    this.store.markInvoiceCanceled(invRow.id_hex);\n\n    // Re-read row to confirm outcome; if not canceled, report conflict\n    const after = this.store.invoices.findByStoreAndIdRaw(sreq.store.id, idRaw);\n    if (!after || after.status !== 'canceled') {\n      res.status(409).json({ error: 'not_cancellable' }); return;\n    }\n\n    res.json({ canceled: true, invoiceId: idRaw });\n  }\n\n\n\n  async getStoreProfile(req: Request, res: Response): Promise<void> {\n    const sreq = req as AuthedRequest;\n    const dto = this.dtoMapper.storeToPrivateProfile(sreq.store);\n    res.json({\n      ...dto,\n      apiKey: sreq.store.api_key ?? null,\n      hmacSecret: sreq.store.hmac_secret ?? null,\n    });\n  }\n\n  async updateStoreProfile(req: Request, res: Response): Promise<void> {\n    const sreq = req as AuthedRequest;\n    const inb = (req.body ?? {}) as Record<string, unknown>;\n\n    // accept both snake_case and camelCase\n    const map: Record<string, string> = {\n      name: 'name',\n      display_name: 'display_name', displayName: 'display_name',\n      logo_url: 'logo_url', logoUrl: 'logo_url',\n      brand_color: 'brand_color', brandColor: 'brand_color',\n      webhook_url: 'webhook_url', webhookUrl: 'webhook_url',\n      support_email: 'support_email', supportEmail: 'support_email',\n      support_url: 'support_url', supportUrl: 'support_url',\n      allowed_origins: 'allowed_origins', allowedOrigins: 'allowed_origins',\n    };\n\n    const patch: Record<string, unknown> = {};\n    for (const [k, v] of Object.entries(map)) {\n      if (Object.prototype.hasOwnProperty.call(inb, k) && !(v in patch)) {\n        patch[v] = (inb as any)[k];\n      }\n    }\n\n    if (patch['brand_color'] !== undefined) {\n      const color = String(patch['brand_color']);\n      if (!Validation.colorHex.test(color)) {\n        res.status(400).json({ error: 'validation_error' });\n        return;\n      }\n    }\n\n    this.store.updateMerchantProfile(sreq.store.id, patch);\n\n    const updated = this.store.getMerchantById(sreq.store.id) as MerchantRow | undefined;\n    const dto = this.dtoMapper.storeToPrivateProfile(updated as MerchantRow);\n    // include secrets in PATCH response too (test expects them)\n    res.json({\n      ...dto,\n      apiKey: updated?.api_key ?? null,\n      hmacSecret: updated?.hmac_secret ?? null,\n    });\n  }\n\n  async createInvoice(req: Request, res: Response): Promise<void> {\n    try {\n      const sreq = req as AuthedRequest;\n\n      // inactive store should be blocked cleanly\n      if (!(sreq.store?.active === 1 || sreq.store?.active === true)) {\n        res.status(403).json({ error: 'inactive' });\n        return;\n      }\n\n      const normalized = this.validateCreateInvoiceBody(req.body);\n\n      // Service may return either a DB row or a ready PublicInvoiceDTO\n      const out: any = await this.inv.createInvoice(\n        { id: sreq.store.id, principal: sreq.store.principal },\n        normalized,\n      );\n\n      // If service already returned a PublicInvoiceDTO, just return it (ensure magicLink)\n      if (out && typeof out === 'object' && 'invoiceId' in out) {\n        const resp = out.magicLink ? out : { ...out, magicLink: `/i/${out.invoiceId}` };\n        res.json(this.jsonSafe(resp));\n        return;\n      }\n\n      // Otherwise it's a DB row: map to DTO and synthesize magicLink\n      const dto = this.dtoMapper.invoiceToPublicDto(out as InvoiceRow);\n      const magicLink = `/i/${dto.invoiceId}`;\n      res.json(this.jsonSafe({ ...dto, magicLink }));\n    } catch (e: any) {\n      if (e && (e.code === 'SQLITE_CONSTRAINT' || e.errno === 19)) {\n        res.status(409).json({ error: 'conflict' });\n        return;\n      }\n      if (e instanceof TypeError) {\n        res.status(400).json({ error: 'validation_error' });\n        return;\n      }\n      res.status(400).json({ error: 'validation_error' });\n    }\n  }\n\n\n  validateCreateInvoiceBody(body: any): {\n    amountSats: number;\n    ttlSeconds: number;\n    memo?: string;\n    webhookUrl?: string;\n  } {\n    const amountSats = Number(body?.amount_sats ?? body?.amountSats);\n    const ttlSeconds = Number(body?.ttl_seconds ?? body?.ttlSeconds ?? 900);\n    const memo =\n      body?.memo !== undefined && body?.memo !== null ? String(body.memo) : undefined;\n    const webhookUrl =\n      body?.webhook_url !== undefined && body?.webhook_url !== null\n        ? String(body.webhook_url)\n        : undefined;\n\n    this.inputValidator.assertPositiveInt(amountSats, 'amount_sats');\n    this.inputValidator.assertPositiveInt(ttlSeconds, 'ttl_seconds');\n\n    if (memo) {\n      const bytes = Buffer.from(memo, 'utf8');\n      if (bytes.length > 34) throw new TypeError('memo-too-long');\n    }\n    if (webhookUrl && !Validation.url.test(webhookUrl)) {\n      throw new TypeError('bad-webhook');\n    }\n\n    return { amountSats, ttlSeconds, memo, webhookUrl };\n  }\n\n  async buildRefund(req: Request, res: Response): Promise<void> {\n    try {\n      const sreq = req as AuthedRequest;\n      const { invoiceId, amountSats, memo } = this.inputValidator.validateRefundBody(req.body);\n      const invRow = this.store.invoices.findByStoreAndIdRaw(sreq.store.id, invoiceId);\n      if (!invRow) {\n        res.status(404).end();\n        return;\n      }\n      try {\n        const payload = await this.refundPolicy.enforceAndBuild(\n          sreq.store,\n          invRow as InvoiceRow,\n          amountSats,\n          memo,\n        );\n        res.json(this.jsonSafe(payload));\n      } catch (err: any) {\n        const code = err?.code as string;\n        if (code === 'bad_status' || code === 'cap_violation') {\n          res.status(409).json({ error: 'bad_status' });\n          return;\n        }\n        if (code === 'insufficient_balance') {\n          res.status(400).json({ error: 'insufficient_balance' });\n          return;\n        }\n        res.status(400).json({ error: 'validation_error' });\n      }\n    } catch {\n      res.status(400).json({ error: 'validation_error' });\n    }\n  }\n\n  // POST /api/v1/stores/:storeId/refunds/create-tx\n  async buildRefundTx(req: Request, res: Response): Promise<void> {\n    try {\n      const sreq = req as AuthedRequest;\n      const { invoiceId, amountSats, memo } = this.validateRefundBody((req.body ?? {}) as any);\n\n      const invRow = this.store.invoices.findByStoreAndIdRaw(sreq.store.id, invoiceId);\n      if (!invRow) { res.status(404).json({ error: 'not_found' }); return; }\n\n      // Only already-paid (or partially_refunded) invoices are refundable\n      const status = String(invRow.status ?? '').toLowerCase();\n      if (!(status === 'paid' || status === 'partially_refunded')) {\n        res.status(409).json({ error: 'invalid_state' }); return;\n      }\n\n      // The RefundService already enforces refund cap and requires merchantPrincipal\n      const unsigned = await this.refund.buildRefundPayload(\n        sreq.store,\n        invRow as any,\n        amountSats,\n        memo,\n      );\n\n      // Return the unsigned call — this is what the test expects to broadcast\n      res.json(this.jsonSafe(unsigned));\n    } catch {\n      // Validation-style failures → 400 per Steroids\n      res.status(400).json({ error: 'validation_error' });\n    }\n  }\n\n\n  // Accept snake_case or camelCase via the validator; keep camelCase in the controller.\n  private validateRefundBody(body: Record<string, unknown>): {\n    invoiceId: string;\n    amountSats: number;\n    memo?: string;\n  } {\n    return this.inputValidator.validateRefundBody(body);\n  }\n\n  async rotateKeys(req: Request, res: Response): Promise<void> {\n    const sreq = req as AuthedRequest;\n    const { apiKey, hmacSecret } = this.generateSecrets();\n    this.store.updateMerchantKeysTx(sreq.store.id, apiKey, hmacSecret);\n    res.json({ apiKey, hmacSecret });\n  }\n\n  generateSecrets(): { apiKey: string; hmacSecret: string } {\n    return {\n      apiKey: crypto.randomBytes(32).toString('hex'),\n      hmacSecret: crypto.randomBytes(32).toString('hex'),\n    };\n  }\n\n  async buildDirectSubscriptionPaymentTx(req: Request, res: Response): Promise<void> {\n    const sreq = req as AuthedRequest;\n    const id = String(req.params.id);\n    const sub = this.store.getSubscriptionByIdForStore(id, sreq.store.id);\n    if (!sub) {\n      res.status(404).end();\n      return;\n    }\n    const payerPrincipal = String((req.body ?? {}).payerPrincipal ?? '');\n    try {\n      const payload = await this.directSubPayBuilder.assemble(\n        sub as SubscriptionRow,\n        payerPrincipal,\n        sreq.store.principal,\n      );\n      res.json(this.jsonSafe(payload));\n    } catch (err: any) {\n      const code = err?.code as string;\n      if (code === 'bad_status' || code === 'invalid_payer' || code === 'too_early') {\n        res.status(409).json({ error: 'bad_status' });\n        return;\n      }\n      if (code === 'missing_token') {\n        res.status(422).json({ error: 'missingSbtcToken' });\n        return;\n      }\n      res.status(400).json({ error: 'validation_error' });\n    }\n  }\n\n  async createSubscription(req: Request, res: Response): Promise<void> {\n    try {\n      const sreq = req as AuthedRequest;\n      const body = (req.body ?? {}) as Record<string, unknown>;\n      const subscriber = String(body.subscriber ?? '');\n      const amountSats = Number(body.amount_sats ?? body.amountSats);\n      const intervalBlocks = Number(body.interval_blocks ?? body.intervalBlocks);\n      const mode = body.mode ? (String(body.mode) as 'invoice' | 'direct') : undefined;\n\n      if (!subscriber.trim()) {\n        res.status(400).json({ error: 'validation_error' });\n        return;\n      }\n      this.inputValidator.assertPositiveInt(amountSats, 'amount_sats');\n      this.inputValidator.assertPositiveInt(intervalBlocks, 'interval_blocks');\n      if (mode && !['invoice', 'direct'].includes(mode)) {\n        res.status(400).json({ error: 'validation_error' });\n        return;\n      }\n\n      const { row, unsignedCall } = await this.subs.createSubscription(\n        { id: sreq.store.id, principal: sreq.store.principal },\n        { subscriber, amountSats, intervalBlocks, mode },\n      );\n\n      const resp: any = {\n        id: row.id,\n        idHex: row.id_hex,\n        storeId: row.store_id,\n        merchantPrincipal: row.merchant_principal,\n        subscriber: row.subscriber,\n        amountSats: row.amount_sats,\n        intervalBlocks: row.interval_blocks,\n        active: row.active === 1,\n        createdAt: row.created_at,\n        lastBilledAt: row.last_billed_at,\n        nextInvoiceAt: row.next_invoice_at,\n        lastPaidInvoiceId: row.last_paid_invoice_id,\n        mode: row.mode,\n      };\n      if (unsignedCall) resp.unsignedCall = this.jsonSafe(unsignedCall);\n      res.json(resp);\n    } catch {\n      res.status(400).json({ error: 'validation_error' });\n    }\n  }\n\n\n  async genSubscriptionInvoice(req: Request, res: Response): Promise<void> {\n    try {\n      const sreq = req as AuthedRequest;\n      const id = String(req.params.id);\n      const sub = this.store.getSubscriptionByIdForStore(id, sreq.store.id);\n      if (!sub) {\n        res.status(404).end();\n        return;\n      }\n      if (!(sub.active === 1 && sub.mode === 'invoice')) {\n        res.status(409).json({ error: 'bad_status' });\n        return;\n      }\n      const body = (req.body ?? {}) as Record<string, unknown>;\n      const ttlSeconds = Number(body.ttl_seconds ?? body.ttlSeconds ?? 900);\n      const memo =\n        body.memo !== undefined && body.memo !== null ? String(body.memo) : undefined;\n      const webhookUrl =\n        body.webhook_url !== undefined && body.webhook_url !== null\n          ? String(body.webhook_url)\n          : body.webhookUrl !== undefined && body.webhookUrl !== null\n            ? String(body.webhookUrl)\n            : undefined;\n\n      if (!Number.isInteger(ttlSeconds) || ttlSeconds <= 0) {\n        res.status(400).json({ error: 'validation_error' });\n        return;\n      }\n      if (memo) {\n        const bytes = Buffer.from(memo, 'utf8');\n        if (bytes.length > 34) {\n          res.status(400).json({ error: 'validation_error' });\n          return;\n        }\n      }\n      if (webhookUrl && !Validation.url.test(webhookUrl)) {\n        res.status(400).json({ error: 'validation_error' });\n        return;\n      }\n\n      const { invoice, unsignedCall } =\n        await this.subs.generateInvoiceForSubscription(sub as SubscriptionRow, {\n          storeId: sreq.store.id,\n          merchantPrincipal: sreq.store.principal,\n          ttlSeconds,\n          memo,\n          webhookUrl,\n        });\n\n      const magicLink = `/i/${invoice.invoiceId}`;\n      res.json({ invoice, magicLink, unsignedCall: this.jsonSafe(unsignedCall) });\n    } catch (err: any) {\n      const sreq = req as AuthedRequest;\n      const id = String(req.params.id);\n      const sub = this.store.getSubscriptionByIdForStore(id, sreq.store.id);\n      const code = err?.code || err?.cause?.code;\n      // Graceful degradation: if price is down, still create the invoice via InvoiceService\n      if (code === 'price_unavailable') {\n        try {\n          const created = await this.inv.createInvoice(\n            { id: sreq.store.id, principal: sreq.store.principal },\n            {\n              amountSats: (sub as SubscriptionRow).amount_sats,\n              ttlSeconds: Number((req.body ?? {}).ttl_seconds ?? (req.body ?? {}).ttlSeconds ?? 900),\n              memo: (req.body ?? {}).memo as string | undefined,\n              webhookUrl:\n                ((req.body ?? {}) as any).webhook_url ??\n                ((req.body ?? {}) as any).webhookUrl ??\n                undefined,\n            },\n          );\n          const magicLink = `/i/${created.invoiceId}`;\n          // Map InvoiceService's unsignedTx to the expected unsignedCall shape\n          res.json({\n            invoice: created,\n            magicLink,\n            unsignedCall: (created as any).unsignedTx ?? undefined,\n          });\n          return;\n        } catch {\n          // fall through to generic error if the fallback itself fails\n        }\n      }\n      if (code === 'ETIMEDOUT') {\n        res.status(502).json({ error: 'timeout' });\n        return;\n      }\n      res.status(500).json({ error: 'server_error' });\n    }\n  }\n\n  async setSubscriptionMode(req: Request, res: Response): Promise<void> {\n    const sreq = req as AuthedRequest;\n    const id = String(req.params.id);\n    const sub = this.store.getSubscriptionByIdForStore(id, sreq.store.id);\n    if (!sub) {\n      res.status(404).end();\n      return;\n    }\n    const body = (req.body ?? {}) as Record<string, unknown>;\n    const mode = String(body.mode ?? '');\n    if (!(mode === 'invoice' || mode === 'direct')) {\n      res.status(400).json({ error: 'validation_error' });\n      return;\n    }\n    const out = await this.subs.setMode(sub as SubscriptionRow, mode as 'invoice' | 'direct');\n    const resp: any = { id: out.row.id, mode: out.row.mode };\n    if (out.unsignedCall) resp.unsignedCall = this.jsonSafe(out.unsignedCall);\n    res.json(resp);\n  }\n\n  async cancelSubscription(req: Request, res: Response): Promise<void> {\n    const sreq = req as AuthedRequest;\n    const id = String(req.params.id);\n    const sub = this.store.getActiveSubscription(id, sreq.store.id);\n    if (!sub) {\n      res.status(404).end();\n      return;\n    }\n    const out = await this.subs.cancel(sub as SubscriptionRow);\n    res.json({ unsignedCall: this.jsonSafe(out.unsignedCall) });\n  }\n\n  async listWebhooks(req: Request, res: Response): Promise<void> {\n    // guard: missing auth should be clean 401\n    if (!(req as any).store) {\n      res.status(401).json({ error: 'missing-api-key' });\n      return;\n    }\n    const sreq = req as AuthedRequest;\n    const rows = this.store.listWebhooksForStore(sreq.store.id);\n    res.json(rows.map((w) => this.dtoMapper.webhookToDto(w)));\n  }\n\n  /**\n   * POST /api/v1/stores/:storeId/prepare-invoice\n   * Body: { amount_sats, ttl_seconds, memo?, webhook_url?, payerPrincipal? }\n   * Returns: { invoice, magicLink, unsignedCall, stacksPayURI }\n   *\n   * One-call “prepare”: create DTO invoice, build unsigned pay-invoice (with PCs), and StacksPay deeplink.\n   */\n  async prepareInvoice(req: Request, res: Response): Promise<void> {\n    try {\n      const sreq = req as AuthedRequest;\n\n      // Block inactive merchants (spec behavior)\n      if (!(sreq.store?.active === 1 || sreq.store?.active === true)) {\n        res.status(403).json({ error: 'inactive' });\n        return;\n      }\n\n      // Validate create-invoice body (amount/ttl/memo/webhook)\n      const normalized = this.validateCreateInvoiceBody(req.body);\n\n      // Optional: who will sign (used to scope post-conditions)\n      const payerPrincipal =\n        (req.body && (req.body as any).payerPrincipal)\n          ? String((req.body as any).payerPrincipal)\n          : undefined;\n\n      // 1) Create the invoice (DTO or DB row); keep public DTO + magicLink\n      const out: any = await this.inv.createInvoice(\n        { id: sreq.store.id, principal: sreq.store.principal },\n        normalized,\n      );\n\n      const dto = 'invoiceId' in out\n        ? out as any\n        : this.dtoMapper.invoiceToPublicDto(out);\n\n      // Get full row+store for builder\n      const row = this.store.getInvoiceWithStore(dto.invoiceId);\n      if (!row) {\n        res.status(404).json({ error: 'not_found' });\n        return;\n      }\n\n      // 2) Build unsigned pay-invoice call (with fungible PCs)\n      //    Harden: block when sBTC token isn't configured (422 like other builders)\n      if (!this.cfg.getSbtcContractId()) {\n        res.status(422).json({ error: 'missingSbtcToken' });\n        return;\n      }\n\n      let unsignedCall: any;\n      try {\n        unsignedCall = await this.payTxAsm.buildUnsignedPayInvoice(row as any, payerPrincipal);\n      } catch (e) {\n        if (e instanceof HttpError) {\n          if (e.code === 'merchant-inactive') { res.status(e.status).json({ error: 'invalidState' }); return; }\n          if (e.code === 'expired') { res.status(e.status).json({ error: 'expired' }); return; }\n          if (e.code === 'missing-token') { res.status(e.status).json({ error: 'missingSbtcToken' }); return; }\n          if (e.code === 'invalid-id') { res.status(e.status).json({ error: 'invalidId' }); return; }\n        }\n        res.status(409).json({ error: 'invalidState' }); return;\n      }\n\n      // 3) Build StacksPay deeplink (wallet-first QR)\n      const appC = this.cfg.getContractId();\n      const sbtc = this.cfg.getSbtcContractId()!;\n      const tokenId = `${sbtc.contractAddress}.${sbtc.contractName}`;\n\n      // For StacksPay \"invoice\", do NOT include contract fields.\n      // Required: recipient, token, amount. Optional: description, expiresAt.\n      const stacksPayURI = encodeStacksPayURL({\n        operation: 'invoice',\n        recipient: String(row.store.principal ?? row.merchant_principal),\n        token: tokenId,\n        amount: String(dto.amountSats),\n        description: dto.memo ?? undefined,\n        expiresAt: new Date(dto.quoteExpiresAt).toISOString(),\n      });\n\n      // 4) Build signed `u` payload for the magic-link (short-lived)\n      const expUnix =\n         Math.floor(new Date(dto.quoteExpiresAt).getTime() / 1000); // TTL from created invoice\n      const unsignedNorm = this.normalizeUnsigned(unsignedCall);\n\n      // Guard: require per-store HMAC secret to sign `u`\n      if (!sreq.store.hmac_secret) {\n        res.status(422).json({ error: 'missingHmacSecret' });\n        return;\n      }\n\n      const uPayload = {\n        v: 1,\n        storeId: String(sreq.store.id),\n        invoiceId: String(dto.invoiceId),\n        unsignedCall: {\n          contractId: unsignedNorm.contractId,\n          function: unsignedNorm.function,\n          args: unsignedNorm.args,\n          postConditions: unsignedNorm.postConditions,\n          postConditionMode: unsignedNorm.postConditionMode,\n          network: unsignedNorm.network,\n        },\n        exp: expUnix,\n      };\n\n      // Sign + embed signature (tamper-evidence); page will at least enforce exp\n      const json = JSON.stringify(uPayload);\n      const sig = this.hmacB64url(String(sreq.store.hmac_secret), json);\n      const u = this.b64url(JSON.stringify({ ...uPayload, sig }));\n\n      // Canonical magic-link: /w/<storeId>/<invoiceId>?u=...\n      const base = `/w/${encodeURIComponent(String(sreq.store.id))}/${encodeURIComponent(String(dto.invoiceId))}`;\n      const retParam = (req.body && (req.body as any).return) ? `&return=${encodeURIComponent(String((req.body as any).return))}` : '';\n      const magicLink = `${base}?u=${encodeURIComponent(u)}${retParam}`;\n\n      // Response: everything the ecommerce/POS needs in one shot\n      const payload ={\n        invoice: dto,\n        magicLink,\n        unsignedCall: unsignedNorm, // JSON-safe: no BigInt; exact same fields\n        stacksPayURI,               // expose wallet-first deeplink\n      };\n      res.json(toJsonSafe(payload));\n    } catch(err) {\n      res.status(400).json({ error: 'validation_error' });\n    }\n  }\n\n}\n"]}