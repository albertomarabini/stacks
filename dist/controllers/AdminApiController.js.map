{"version":3,"file":"AdminApiController.js","sourceRoot":"","sources":["../../src/controllers/AdminApiController.ts"],"names":[],"mappings":";;;AAGA,6CAA0C;AAQ1C,kEAA+D;AAC/D,sEAAmE;AACnE,wFAAqF;AACrF,wFAAqF;AACrF,oFAAiF;AACjF,kFAA+E;AAY/E,MAAa,kBAAkB;IAA/B;QAQmB,eAAU,GAAG,IAAI,iCAAe,EAAE,CAAC;QACnC,cAAS,GAAG,IAAI,qCAAiB,EAAE,CAAC;QACpC,gBAAW,GAAG,IAAI,uDAA0B,EAAE,CAAC;QAC/C,gBAAW,GAAG,IAAI,uDAA0B,EAAE,CAAC;QAC/C,iBAAY,GAAG,IAAI,mDAAwB,EAAE,CAAC;QAC9C,qBAAgB,GAAG,IAAI,iDAAuB,EAAE,CAAC;QAiBlE,8EAA8E;QAC9E,0DAA0D;QAC1D,8EAA8E;QACtE,eAAU,GAAG,CAAC,CAAM,EAAO,EAAE;YACnC,IAAI,CAAC,IAAI,IAAI;gBAAE,OAAO,CAAC,CAAC;YAExB,kCAAkC;YAClC,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,CAAC,IAAI,KAAK,QAAQ,IAAI,OAAO,IAAI,CAAC,EAAE,CAAC;gBACxE,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;gBAC/B,IAAI,CAAC,KAAK,MAAM,IAAI,CAAC,KAAK,KAAK;oBAAE,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAE,CAAS,CAAC,KAAK,CAAC,EAAE,CAAC;gBACrF,IAAI,CAAC,KAAK,QAAQ,EAAE,CAAC;oBACnB,MAAM,CAAC,GAAI,CAAS,CAAC,KAAK,CAAC;oBAC3B,IAAI,OAAO,CAAC,KAAK,QAAQ;wBAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC;oBACnF,IAAI,CAAC,YAAY,UAAU;wBAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;oBAC9F,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;wBAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAG,CAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;oBAC1F,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC9C,CAAC;gBACD,IAAI,CAAC,KAAK,UAAU;oBAAE,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,CAAE,CAAS,CAAC,KAAK,CAAC,EAAE,CAAC;gBACnF,IAAI,CAAC,KAAK,MAAM;oBAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,CAAE,CAAS,CAAC,KAAK,CAAC,EAAE,CAAC;gBACpF,IAAI,CAAC,KAAK,MAAM;oBAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;gBAC1C,IAAI,CAAC,KAAK,MAAM,IAAI,CAAC,KAAK,OAAO;oBAAE,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;gBACtD,OAAO,EAAE,IAAI,EAAE,MAAM,CAAE,CAAS,CAAC,IAAI,CAAC,EAAE,KAAK,EAAG,CAAS,CAAC,KAAK,EAAE,CAAC;YACpE,CAAC;YAED,6EAA6E;YAC7E,IAAI,OAAO,CAAC,KAAK,QAAQ;gBAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC;YACxE,IAAI,OAAO,CAAC,KAAK,QAAQ;gBAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;YAErE,6BAA6B;YAC7B,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAG,CAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;YAC1F,IAAI,CAAC,YAAY,UAAU;gBAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;YAE9F,gCAAgC;YAChC,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,CAAC;gBAC1B,MAAM,IAAI,GAAI,CAAS,EAAE,eAAe,IAAK,CAAS,EAAE,OAAO,CAAC;gBAChE,MAAM,IAAI,GAAI,CAAS,EAAE,YAAY,IAAK,CAAS,EAAE,IAAI,CAAC;gBAC1D,IAAI,IAAI,IAAI,IAAI;oBAAE,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,GAAG,IAAI,IAAI,IAAI,EAAE,EAAE,CAAC;YAC1E,CAAC;YAED,wCAAwC;YACxC,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC;gBAC7E,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC;YACxE,CAAC;YAED,gFAAgF;YAChF,OAAO,CAAC,CAAC;QACX,CAAC,CAAC;QAEM,oBAAe,GAAG,CAAC,EAAO,EAAE,EAAE,CAAC,CAAC;YACtC,IAAI,EAAE,kBAAkB;YACxB,OAAO,EAAE,MAAM,CAAC,EAAE,EAAE,OAAO,IAAI,EAAE,CAAC;YAClC,SAAS,EAAE,MAAM,CAAC,EAAE,EAAE,SAAS,IAAI,KAAK,CAAC;YACzC,MAAM,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,IAAI,EAAE,CAAC;YAChC,KAAK,EAAE,MAAM,CAAC,EAAE,EAAE,KAAK,IAAI,EAAE,CAAC,EAAE,wBAAwB;SACzD,CAAC,CAAC;QAEK,0BAAqB,GAAG,CAAC,GAAQ,EAAE,EAAE,CAAC,CAAC;YAC7C,eAAe,EAAE,MAAM,CAAC,GAAG,CAAC,eAAe,IAAI,GAAG,CAAC,OAAO,IAAI,EAAE,CAAC;YACjE,YAAY,EAAE,MAAM,CAAC,GAAG,CAAC,YAAY,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC;YACxD,YAAY,EAAE,MAAM,CAAC,GAAG,CAAC,YAAY,IAAI,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC;YACtD,YAAY,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,IAAI,GAAG,CAAC,IAAI,CAAC;gBACvD,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;gBACrD,CAAC,CAAC,EAAE;YACN,OAAO,EAAE,MAAM,CAAC,GAAG,CAAC,OAAO,IAAK,IAAI,CAAC,KAAa,EAAE,WAAW,IAAI,EAAE,CAAC,EAAE,+BAA+B;YACvG,UAAU,EAAE,KAAK;YACjB,iBAAiB,EAAE,MAAM;YACzB,cAAc,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,IAAI,GAAG,CAAC,GAAG,CAAC;gBAC1D,CAAC,CAAC,CAAC,GAAG,CAAC,cAAc,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC;gBAC3D,CAAC,CAAC,EAAE;SACP,CAAC,CAAC;IAsML,CAAC;IA1RC,gBAAgB,CAAC,IAAU;QACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAClC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;IACtB,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,GAAY,EAAE,GAAa;QAC9C,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC,CAAK,8BAA8B;QACtF,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;QACjD,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;IACrB,CAAC;IA0ED,gDAAgD;IAChD,2EAA2E;IAC3E,KAAK,CAAC,cAAc,CAAC,GAAY,EAAE,GAAa;QAC9C,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACpC,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,GAAG,EAAE,CAAC;YAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YAAC,OAAO;QAAC,CAAC;QAE5C,sCAAsC;QACtC,GAAG,CAAC,SAAS,CAAC,eAAe,EAAE,qBAAqB,CAAC,CAAC;QACtD,GAAG,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;IAC5C,CAAC;IAGD,KAAK,CAAC,WAAW,CAAC,GAAY,EAAE,GAAa;QAC3C,IAAI,CAAC;YACH,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,OAAO,GAAG,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;YACxE,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;YACtD,IAAI,CAAC,SAAS,EAAE,CAAC;gBACf,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC,CAAC;gBACtD,OAAO;YACT,CAAC;YACD,IAAI,CAAC;gBACH,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC,CAAE,4BAA4B;YACjF,CAAC;YAAC,MAAM,CAAC;gBACP,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC,CAAC;gBACrD,OAAO;YACT,CAAC;YACD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;YACtF,IAAI,MAAM,CAAC,MAAM,KAAK,UAAU,EAAE,CAAC;gBACjC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;gBACtB,OAAO;YACT,CAAC;YACD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACnC,CAAC;QAAC,OAAO,GAAQ,EAAE,CAAC;YAClB,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC;YACvC,IAAI,GAAG,EAAE,IAAI,KAAK,0BAA0B,IAAI,GAAG,CAAC,QAAQ,CAAC,qBAAqB,CAAC,EAAE,CAAC;gBACpF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,0BAA0B,EAAE,CAAC,CAAC;gBAC5D,OAAO;YACT,CAAC;YACD,MAAM,GAAG,CAAC;QACZ,CAAC;IACH,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,IAAa,EAAE,GAAa;QAC3C,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAAE,CAAC;QAClD,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC;IAED,8CAA8C;IAC9C,KAAK,CAAC,UAAU,CAAC,GAAY,EAAE,GAAa;QAC1C,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;QACjD,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,CAAC,CAAC,EAAE,CAAC;YAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,iBAAiB,EAAE,CAAC,CAAC;YAAC,OAAO;QAAC,CAAC;QAEvE,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;QAE1C,MAAM,WAAW,GAAG,CAAC,CAAC,oBAAoB,IAAI,CAAC,CAAC;QAChD,IAAI,GAAG,GAAG,WAAW,GAAG,EAAE,EAAE,CAAC;YAC3B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,iBAAiB,EAAE,CAAC,CAAC;YACnD,OAAO;QACT,CAAC;QAED,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QACxC,MAAM,UAAU,GAAG,IAAA,yBAAW,EAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAEnD,kFAAkF;QAElF,yEAAyE;QACzE,iBAAiB;QACjB,yDAAyD;QACzD,YAAY;QACZ,IAAI;QAEJ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;IAC/C,CAAC;IAED,yEAAyE;IACzE,KAAK,CAAC,WAAW,CAAC,GAAY,EAAE,GAAa;QAC3C,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAEpC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAClG,IAAI,UAAU,IAAI,MAAM,EAAE,CAAC;YACzB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YACtB,OAAO;QACT,CAAC;QAED,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;YACvC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;YAC7D,CAAC,CAAC,EAAE,CAAC;QAEP,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IACtB,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,GAAY,EAAE,GAAa;QAC5C,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE,CAAwD,CAAC;QACrF,MAAM,eAAe,GAAG,MAAM,CAAC,IAAI,CAAC,eAAe,IAAI,EAAE,CAAC,CAAC;QAC3D,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC,CAAC;QACrD,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,eAAe,CAAC,CAAC;QACvD,IAAI,CAAC,YAAY,EAAE,CAAC;YAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YAAC,OAAO;QAAC,CAAC;QAErD,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,EAAE,eAAe,EAAE,YAAY,EAAE,CAAC,CAAC;QAClF,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;QACjD,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;IACrB,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,GAAY,EAAE,GAAa;QAC7C,MAAM,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QACtC,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QACjD,IAAI,CAAC,GAAG,EAAE,CAAC;YAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YAAC,OAAO;QAAC,CAAC;QAC5C,IAAI,GAAG,CAAC,MAAM,KAAK,MAAM,EAAE,CAAC;YAC1B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC,CAAC;YAChD,OAAO;QACT,CAAC;QACD,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QACtD,GAAG,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,GAAY,EAAE,GAAa;QAC7C,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACpC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAK,GAAG,CAAC,IAAY,CAAC,MAAM,CAAC,CAAC;QACxD,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QACjD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAAE,CAAC;QAClD,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IAC5D,CAAC;IAED,KAAK,CAAC,iBAAiB,CAAC,GAAY,EAAE,GAAa;QACjD,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,GAAG,CAAC,KAAK,CAAC,MAAa,CAAC,CAAC;QAC/E,MAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QAC1E,IAAI,OAAO;YAAE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CACzC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAE,QAAgB,CAAC,CAAC,CAAC,SAAS,EAC/C,OAAO,CACR,CAAC;QACF,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,GAAY,EAAE,GAAa;QAC5C,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE,CAA8B,CAAC;QAC3D,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC,CAAC;QACrD,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACzC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QACzF,IAAI,OAAO,CAAC,IAAI,KAAK,WAAW,EAAE,CAAC;YAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YAAC,OAAO;QAAC,CAAC;QACpE,IAAI,OAAO,CAAC,IAAI,KAAK,mBAAmB,EAAE,CAAC;YACzC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,gBAAgB,EAAE,IAAI,EAAE,CAAC,CAAC;YACjD,OAAO;QACT,CAAC;QACD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;IACvD,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,IAAa,EAAE,GAAa;QAC1C,MAAM,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QACvC,GAAG,CAAC,IAAI,CAAC;YACP,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;YACrC,SAAS,EAAE,CAAC,CAAC,SAAS,IAAI,IAAI;YAC9B,UAAU,EAAE,CAAC,CAAC,UAAU,IAAI,CAAC;YAC7B,QAAQ,EAAE,CAAC,CAAC,QAAQ,IAAI,IAAI;YAC5B,SAAS,EAAE,CAAC,CAAC,SAAS,IAAI,IAAI;SAC/B,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,IAAa,EAAE,GAAa;QAC9C,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QACxC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAChB,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,GAAY,EAAE,GAAa;QAC5C,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,CAA0C,CAAC;QACrE,MAAM,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QAC1D,IAAI,OAAO;YAAE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjD,MAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,KAAK,QAAQ,CAAC;QAC1D,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAC/D,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,GAAY,EAAE,GAAa;QAC5C,MAAM,OAAO,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,EAAE,CAAC;YAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAAC,OAAO;QAAC,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAEpC,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QAChE,MAAM,MAAM,GAAG,CAAC,SAAS,CAAC,CAAC,CAAE,SAA2B,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;QAEtE,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,OAAO,EAAE;YACnD,MAAM;YACN,kBAAkB,EAAE,IAAI;SACzB,CAAC,CAAC;QAEH,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC;CAEF;AAzSD,gDAySC","sourcesContent":["// src/controllers/AdminApiController.ts\nimport type { Request, Response } from 'express';\nimport type { ISqliteStore } from '../contracts/dao';\nimport { randomBytes } from \"node:crypto\";\nimport type {\n  IStacksChainClient,\n  IContractCallBuilder,\n  IWebhookDispatcher,\n  IConfigService,\n} from '../contracts/interfaces';\nimport { PollerAdminBridge } from '../poller/PollerAdminBridge';\nimport { AdminParamGuard } from '../delegates/AdminParamGuard';\nimport { AdminDtoProjector } from '../delegates/AdminDtoProjector';\nimport { MerchantKeyRotationService } from '../delegates/MerchantKeyRotationService';\nimport { MerchantOnchainSyncPlanner } from '../delegates/MerchantOnchainSyncPlanner';\nimport { WebhookAdminRetryService } from '../delegates/WebhookAdminRetryService';\nimport { MerchantCreationService } from '../delegates/MerchantCreationService';\nimport type { InvoiceStatus } from '../contracts/domain';\n\ntype Deps = {\n  store: ISqliteStore;\n  chain: IStacksChainClient;\n  builder: IContractCallBuilder;\n  dispatcher: IWebhookDispatcher;\n  pollerBridge: PollerAdminBridge;\n  cfg: IConfigService;\n};\n\nexport class AdminApiController {\n  private store!: ISqliteStore;\n  private chain!: IStacksChainClient;\n  private builder!: IContractCallBuilder;\n  private dispatcher!: IWebhookDispatcher;\n  private pollerBridge!: PollerAdminBridge;\n  private cfg!: IConfigService;\n\n  private readonly paramGuard = new AdminParamGuard();\n  private readonly projector = new AdminDtoProjector();\n  private readonly keyRotation = new MerchantKeyRotationService();\n  private readonly syncPlanner = new MerchantOnchainSyncPlanner();\n  private readonly webhookRetry = new WebhookAdminRetryService();\n  private readonly merchantCreation = new MerchantCreationService();\n\n  bindDependencies(deps: Deps): void {\n    this.store = deps.store;\n    this.chain = deps.chain;\n    this.builder = deps.builder;\n    this.dispatcher = deps.dispatcher;\n    this.pollerBridge = deps.pollerBridge;\n    this.cfg = deps.cfg;\n  }\n\n  async bootstrapAdmin(req: Request, res: Response) {\n    const callRaw = this.builder.buildBootstrapAdmin();     // add this builder if missing\n    const call = this.normalizeUnsignedCall(callRaw);\n    res.json({ call });\n  }\n\n  // ───────────────────────────────────────────────────────────────────────────\n  // JSON-safe, contract-aligned unsigned-call normalization\n  // ───────────────────────────────────────────────────────────────────────────\n  private toTypedArg = (a: any): any => {\n    if (a == null) return a;\n\n    // Already typed (sanitize nested)\n    if (typeof a === 'object' && typeof a.type === 'string' && 'value' in a) {\n      const t = a.type.toLowerCase();\n      if (t === 'uint' || t === 'int') return { type: t, value: String((a as any).value) };\n      if (t === 'buffer') {\n        const v = (a as any).value;\n        if (typeof v === 'string') return { type: 'buffer', value: v.replace(/^0x/i, '') };\n        if (v instanceof Uint8Array) return { type: 'buffer', value: Buffer.from(v).toString('hex') };\n        if (Buffer.isBuffer?.(v)) return { type: 'buffer', value: (v as Buffer).toString('hex') };\n        return { type: 'buffer', value: String(v) };\n      }\n      if (t === 'contract') return { type: 'contract', value: String((a as any).value) };\n      if (t === 'some') return { type: 'some', value: this.toTypedArg((a as any).value) };\n      if (t === 'none') return { type: 'none' };\n      if (t === 'true' || t === 'false') return { type: t };\n      return { type: String((a as any).type), value: (a as any).value };\n    }\n\n    // Raw bigint/number → uint typed arg (contract uses uints for amount/height)\n    if (typeof a === 'bigint') return { type: 'uint', value: a.toString() };\n    if (typeof a === 'number') return { type: 'uint', value: String(a) };\n\n    // Buffers → buffer typed arg\n    if (Buffer.isBuffer?.(a)) return { type: 'buffer', value: (a as Buffer).toString('hex') };\n    if (a instanceof Uint8Array) return { type: 'buffer', value: Buffer.from(a).toString('hex') };\n\n    // Contract principal via fields\n    if (typeof a === 'object') {\n      const addr = (a as any)?.contractAddress ?? (a as any)?.address;\n      const name = (a as any)?.contractName ?? (a as any)?.name;\n      if (addr && name) return { type: 'contract', value: `${addr}.${name}` };\n    }\n\n    // 64-hex → treat as buffer (invoice id)\n    if (typeof a === 'string' && /^[0-9a-fA-F]{64}$/.test(a.replace(/^0x/i, ''))) {\n      return { type: 'buffer', value: a.replace(/^0x/i, '').toLowerCase() };\n    }\n\n    // Otherwise leave as-is (string memo, etc.) — callers should prefer typed form.\n    return a;\n  };\n\n  private toPostCondition = (pc: any) => ({\n    type: 'ft-postcondition',\n    address: String(pc?.address ?? ''),\n    condition: String(pc?.condition ?? 'gte'),\n    amount: String(pc?.amount ?? ''),\n    asset: String(pc?.asset ?? ''), // \"ADDR.contract::sbtc\"\n  });\n\n  private normalizeUnsignedCall = (raw: any) => ({\n    contractAddress: String(raw.contractAddress ?? raw.address ?? ''),\n    contractName: String(raw.contractName ?? raw.name ?? ''),\n    functionName: String(raw.functionName ?? raw.fn ?? ''),\n    functionArgs: Array.isArray(raw.functionArgs ?? raw.args)\n      ? (raw.functionArgs ?? raw.args).map(this.toTypedArg)\n      : [],\n    network: String(raw.network ?? (this.chain as any)?.networkName ?? ''), // \"devnet\"/\"testnet\"/\"mainnet\"\n    anchorMode: 'any',\n    postConditionMode: 'deny',\n    postConditions: Array.isArray(raw.postConditions ?? raw.pcs)\n      ? (raw.postConditions ?? raw.pcs).map(this.toPostCondition)\n      : [],\n  });\n\n\n  // POC ONLY: expose hmacSecret via admin channel\n  // guardrails: do not log the secret, do not include in any views/hydration\n  async getStoreSecret(req: Request, res: Response): Promise<void> {\n    const storeId = String(req.params.storeId || '');\n    this.paramGuard.assertUuid(storeId);\n    const row = this.store.getMerchantById(storeId);\n    if (!row) { res.status(404).end(); return; }\n\n    // Never log secrets; mark as no-store\n    res.setHeader('Cache-Control', 'no-store, max-age=0');\n    res.json({ hmacSecret: row.hmac_secret });\n  }\n\n\n  async createStore(req: Request, res: Response): Promise<void> {\n    try {\n      const body = (req.body && typeof req.body === 'object') ? req.body : {};\n      const principal = String(body.principal ?? '').trim();\n      if (!principal) {\n        res.status(400).json({ error: 'principal-required' });\n        return;\n      }\n      try {\n        this.paramGuard.assertStacksPrincipal(principal);  // format check (SP… or ST…)\n      } catch {\n        res.status(400).json({ error: 'principal-invalid' });\n        return;\n      }\n      const result = await this.merchantCreation.create(this.store, { ...body, principal });\n      if (result.status === 'conflict') {\n        res.status(409).end();\n        return;\n      }\n      res.status(201).json(result.dto);\n    } catch (err: any) {\n      const msg = String(err?.message || \"\");\n      if (err?.code === \"SQLITE_CONSTRAINT_UNIQUE\" && msg.includes(\"merchants.principal\")) {\n        res.status(409).json({ error: \"principal-already-exists\" });\n        return;\n      }\n      throw err;\n    }\n  }\n\n  async listStores(_req: Request, res: Response): Promise<void> {\n    const rows = this.store.listMerchantsProjection();\n    res.json(rows.map((r) => this.projector.merchantToDto(r)));\n  }\n\n  // POST /api/admin/stores/:storeId/rotate-keys\n  async rotateKeys(req: Request, res: Response): Promise<void> {\n    const storeId = String(req.params.storeId ?? '');\n    const m = this.store.getMerchantById(storeId);\n    if (!m) { res.status(404).json({ error: 'store-not-found' }); return; }\n\n    const now = Math.floor(Date.now() / 1000);\n\n    const lastRotated = m.keys_last_rotated_at ?? 0;\n    if (now - lastRotated < 60) {\n      res.status(409).json({ error: 'already-rotated' });\n      return;\n    }\n\n    const apiKey = this.cfg.getAdminToken();\n    const hmacSecret = randomBytes(32).toString('hex');\n\n    // const version = this.store.rotateKeysPersist(storeId, apiKey, hmacSecret, now);\n\n    // const marked = this.store.markKeysRevealedOnce(storeId, version, now);\n    // if (!marked) {\n    //   res.status(409).json({ error: 'already-revealed' });\n    //   return;\n    // }\n\n    res.status(200).json({ apiKey, hmacSecret });\n  }\n\n  // Normalize calls before JSON to avoid BigInt and match typed-arg shape.\n  async syncOnchain(req: Request, res: Response): Promise<void> {\n    const storeId = String(req.params.storeId);\n    this.paramGuard.assertUuid(storeId);\n\n    const result = await this.syncPlanner.planForStore(this.store, this.chain, this.builder, storeId);\n    if ('notFound' in result) {\n      res.status(404).end();\n      return;\n    }\n\n    const calls = Array.isArray(result.calls)\n      ? result.calls.map((c: any) => this.normalizeUnsignedCall(c))\n      : [];\n\n    res.json({ calls });\n  }\n\n  async setSbtcToken(req: Request, res: Response): Promise<void> {\n    const body = (req.body || {}) as { contractAddress?: string; contractName?: string };\n    const contractAddress = String(body.contractAddress ?? '');\n    const contractName = String(body.contractName ?? '');\n    this.paramGuard.assertStacksPrincipal(contractAddress);\n    if (!contractName) { res.status(400).end(); return; }\n\n    const callRaw = this.builder.buildSetSbtcToken({ contractAddress, contractName });\n    const call = this.normalizeUnsignedCall(callRaw);\n    res.json({ call });\n  }\n\n  async cancelInvoice(req: Request, res: Response): Promise<void> {\n    const invoiceId = String(req.params.invoiceId);\n    this.paramGuard.assertUuid(invoiceId);\n    const row = this.store.getInvoiceById(invoiceId);\n    if (!row) { res.status(404).end(); return; }\n    if (row.status === 'paid') {\n      res.status(400).json({ error: 'already_paid' });\n      return;\n    }\n    this.store.updateInvoiceStatus(invoiceId, 'canceled');\n    res.json({ canceled: true, invoiceId });\n  }\n\n  async activateStore(req: Request, res: Response): Promise<void> {\n    const storeId = String(req.params.storeId);\n    this.paramGuard.assertUuid(storeId);\n    const active = !!(req.body && (req.body as any).active);\n    this.store.updateMerchantActive(storeId, active);\n    const rows = this.store.listMerchantsProjection();\n    const m = rows.find((r) => r.id === storeId);\n    res.json(m ? this.projector.merchantToDto(m) : undefined);\n  }\n\n  async listAdminInvoices(req: Request, res: Response): Promise<void> {\n    const statuses = this.paramGuard.parseInvoiceStatuses(req.query.status as any);\n    const storeId = req.query.storeId ? String(req.query.storeId) : undefined;\n    if (storeId) this.paramGuard.assertUuid(storeId);\n    const rows = this.store.selectAdminInvoices(\n      statuses.length ? (statuses as any) : undefined,\n      storeId,\n    );\n    res.json(rows.map((r) => this.projector.invoiceToDto(r)));\n  }\n\n  async retryWebhook(req: Request, res: Response): Promise<void> {\n    const body = (req.body || {}) as { webhookLogId?: string };\n    const webhookLogId = String(body.webhookLogId ?? '');\n    this.paramGuard.assertUuid(webhookLogId);\n    const outcome = await this.webhookRetry.retry(this.store, this.dispatcher, webhookLogId);\n    if (outcome.type === 'not-found') { res.status(404).end(); return; }\n    if (outcome.type === 'already-delivered') {\n      res.status(200).json({ alreadyDelivered: true });\n      return;\n    }\n    res.status(202).json({ enqueued: outcome.enqueued });\n  }\n\n  async getPoller(_req: Request, res: Response): Promise<void> {\n    const s = this.pollerBridge.getState();\n    res.json({\n      running: this.pollerBridge.isActive(),\n      lastRunAt: s.lastRunAt ?? null,\n      lastHeight: s.lastHeight ?? 0,\n      lastTxId: s.lastTxId ?? null,\n      lagBlocks: s.lagBlocks ?? null,\n    });\n  }\n\n  async restartPoller(_req: Request, res: Response): Promise<void> {\n    const out = this.pollerBridge.restart();\n    res.json(out);\n  }\n\n  async listWebhooks(req: Request, res: Response): Promise<void> {\n    const q = (req.query || {}) as { storeId?: string; status?: string };\n    const storeId = q.storeId ? String(q.storeId) : undefined;\n    if (storeId) this.paramGuard.assertUuid(storeId);\n    const failedOnly = String(q.status ?? 'all') === 'failed';\n    const rows = this.store.listAdminWebhooks(storeId, failedOnly);\n    res.json(rows.map((w) => this.projector.webhookToDto(w)));\n  }\n\n  async listInvoices(req: Request, res: Response): Promise<void> {\n    const storeId = String((req.query || {}).storeId ?? '');\n    if (!storeId) { res.json([]); return; }\n    this.paramGuard.assertUuid(storeId);\n\n    const rawStatus = String((req.query || {}).status ?? '').trim();\n    const status = (rawStatus ? (rawStatus as InvoiceStatus) : undefined);\n\n    const rows = this.store.listInvoicesByStore(storeId, {\n      status,\n      orderByCreatedDesc: true,\n    });\n\n    res.json(rows.map(r => this.projector.invoiceToDto(r)));\n  }\n\n}\n"]}