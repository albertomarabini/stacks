{"version":3,"file":"StoreApiAuth.js","sourceRoot":"","sources":["../../src/middleware/StoreApiAuth.ts"],"names":[],"mappings":";;;AAYA,MAAa,YAAY;IAGvB,SAAS,CAAC,KAAmB;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,YAAY,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QAC1D,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAChB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YACtB,OAAO;QACT,CAAC;QAED,MAAM,MAAM,GACV,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC;YACpB,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC;YACnB,GAAG,CAAC,OAAO,CAAC,WAAW,CAAwB,CAAC;QAEnD,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YACtB,OAAO;QACT,CAAC;QAED,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YACtB,OAAO;QACT,CAAC;QAEA,GAAW,CAAC,KAAK,GAAG,QAAQ,CAAC;QAC9B,IAAI,EAAE,CAAC;IACT,CAAC;CACF;AAhCD,oCAgCC","sourcesContent":["// src/middleware/StoreApiAuth.ts\nimport type { Request, Response, NextFunction } from 'express';\nimport type { ISqliteStore } from '../contracts/dao';\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      store?: any;\n    }\n  }\n}\n\nexport class StoreApiAuth {\n  private store?: ISqliteStore;\n\n  bindStore(store: ISqliteStore): void {\n    this.store = store;\n  }\n\n  verifyApiKey(req: Request, res: Response, next: NextFunction): void {\n    if (!this.store) {\n      res.status(401).end();\n      return;\n    }\n\n    const apiKey =\n      req.get('X-API-Key') ||\n      req.get('x-api-key') ||\n      (req.headers['x-api-key'] as string | undefined);\n\n    if (!apiKey) {\n      res.status(401).end();\n      return;\n    }\n\n    const merchant = this.store.findActiveByApiKey(apiKey);\n    if (!merchant) {\n      res.status(401).end();\n      return;\n    }\n\n    (req as any).store = merchant;\n    next();\n  }\n}\n"]}