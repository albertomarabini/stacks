{"version":3,"file":"RateLimitPolicy.js","sourceRoot":"","sources":["../../src/middleware/RateLimitPolicy.ts"],"names":[],"mappings":"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","sourcesContent":["// RateLimitPolicy.ts\nimport rateLimit from 'express-rate-limit';\nimport type { Request, Response, RequestHandler } from 'express';\n\nexport class RateLimitPolicy {\n  public publicInvoiceViewLimiter!: RequestHandler;\n  public publicProfileLimiter!: RequestHandler;\n  public publicCreateTxLimiter!: RequestHandler;\n  public createInvoiceLimiter!: RequestHandler;\n  public subInvoiceLimiter!: RequestHandler;\n\n  initLimiters(): void {\n    const publicWindowMs   = Number(process.env.RL_PUBLIC_WINDOW_MS   ?? 60_000);\n    const publicMax        = Number(process.env.RL_PUBLIC_MAX         ?? 30);\n    const merchantWindowMs = Number(process.env.RL_MERCHANT_WINDOW_MS ?? 60_000);\n    const merchantMax      = Number(process.env.RL_MERCHANT_MAX       ?? 30);\n    const subWindowMs      = Number(process.env.RL_SUB_WINDOW_MS      ?? 60_000);\n    const subMax           = Number(process.env.RL_SUB_MAX            ?? 30);\n\n    this.publicInvoiceViewLimiter = this.buildPublicLimiter(\n      this.publicInvoiceViewLimiterHandler.bind(this), publicWindowMs, publicMax);\n    this.publicProfileLimiter = this.buildPublicLimiter(\n      this.publicProfileLimiterHandler.bind(this), publicWindowMs, publicMax);\n    this.publicCreateTxLimiter = this.buildPublicLimiter(\n      this.publicCreateTxLimiterHandler.bind(this), publicWindowMs, publicMax);\n\n    this.createInvoiceLimiter = this.buildMerchantLimiter(\n      this.createInvoiceLimiterHandler.bind(this), merchantWindowMs, merchantMax);\n\n    this.subInvoiceLimiter = this.buildSubInvoiceLimiter(subWindowMs, subMax);\n  }\n\n  // ----- Express handlers you want called on limit -----\n  publicInvoiceViewLimiterHandler(req: Request, res: Response): void {\n    res.status(429).json({ reason: 'rateLimited' });\n  }\n  publicProfileLimiterHandler(req: Request, res: Response): void {\n    res.status(429).json({ reason: 'rateLimited' });\n  }\n  publicCreateTxLimiterHandler(req: Request, res: Response): void {\n    res.status(429).json({ reason: 'rateLimited' });\n  }\n  createInvoiceLimiterHandler(req: Request, res: Response): void {\n    res.status(429).json({ error: 'rate_limited' });\n  }\n  subInvoiceLimiterHandler(req: Request, res: Response): void {\n    res.status(429).json({ error: 'rate_limited' });\n  }\n\n  // ----- Adapters (v7 expects Fetch-like request/response) -----\n  private toExpressOnLimit(\n    fn: (req: Request, res: Response) => void,\n  ) {\n    return (request: unknown, response: unknown) => {\n      fn(request as Request, response as Response);\n    };\n  }\n\n  // ----- Builders -----\n  private buildPublicLimiter(\n    onLimit: (req: Request, res: Response) => void,\n    windowMs: number,\n    max: number,\n  ): RequestHandler {\n    return rateLimit({\n      windowMs,\n      max,\n      standardHeaders: true,\n      legacyHeaders: false,\n      handler: this.toExpressOnLimit(onLimit),\n      // public routes can use default key (req.ip); see trust proxy note below\n    }) as unknown as RequestHandler;\n  }\n\n  private buildMerchantLimiter(\n    onLimit: (req: Request, res: Response) => void,\n    windowMs: number,\n    max: number,\n  ): RequestHandler {\n    return rateLimit({\n      windowMs,\n      max,\n      standardHeaders: true,\n      legacyHeaders: false,\n      handler: this.toExpressOnLimit(onLimit),\n      keyGenerator: (req: any) => {\n        const storeId = String(req.store?.id ?? req.params?.storeId ?? 'unknown');\n        const apiKey = String(req.headers['x-api-key'] ?? (req.headers as any)['X-API-Key'] ?? 'no-key');\n        return `${storeId}|${apiKey}`;\n      },\n    }) as unknown as RequestHandler;\n  }\n\n  buildSubInvoiceLimiter(windowMs?: number, max?: number): RequestHandler {\n    return rateLimit({\n      windowMs: windowMs ?? 60_000,\n      max: max ?? 30,\n      standardHeaders: true,\n      legacyHeaders: false,\n      handler: this.toExpressOnLimit(this.subInvoiceLimiterHandler.bind(this)),\n      keyGenerator: (req: any) => {\n        const storeId = String(req.store?.id ?? req.params?.storeId ?? 'unknown');\n        const apiKey = String(req.headers['x-api-key'] ?? (req.headers as any)['X-API-Key'] ?? 'no-key');\n        return `${storeId}|${apiKey}`;\n      },\n    }) as unknown as RequestHandler;\n  }\n}\n"]}