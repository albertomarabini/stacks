{"version":3,"file":"AdminAuth.js","sourceRoot":"","sources":["../../src/middleware/AdminAuth.ts"],"names":[],"mappings":";;;;;;AAGA,oDAA4B;AAE5B,MAAa,SAAS;IAKpB,sBAAsB,CAAC,IAAoB;QACzC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;IAC1C,CAAC;IAED,iBAAiB,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QAC/D,MAAM,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,eAAe,CAAuB,CAAC;QAElE,IAAI,EAAE,GAAG,KAAK,CAAC;QAEf,IAAI,MAAM,IAAI,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;YAC3C,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;YACrC,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;gBAC/D,EAAE,GAAG,IAAI,CAAC;YACZ,CAAC;QACH,CAAC;aAAM,IAAI,MAAM,IAAI,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;YACjD,MAAM,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;YACvC,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAChE,MAAM,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACjC,MAAM,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YACxD,MAAM,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACpD,IACE,IAAI,CAAC,SAAS;gBACd,IAAI,CAAC,SAAS;gBACd,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;gBAC7C,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAC7C,CAAC;gBACD,EAAE,GAAG,IAAI,CAAC;YACZ,CAAC;QACH,CAAC;QAED,IAAI,EAAE,EAAE,CAAC;YACP,IAAI,EAAE,CAAC;YACP,OAAO;QACT,CAAC;QAED,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACvC,CAAC;IAEO,kBAAkB,CAAC,CAAU,EAAE,CAAU;QAC/C,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,KAAK,QAAQ;YAAE,OAAO,KAAK,CAAC;QACjE,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QAClC,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QAClC,IAAI,EAAE,CAAC,MAAM,KAAK,EAAE,CAAC,MAAM;YAAE,OAAO,KAAK,CAAC;QAC1C,OAAO,gBAAM,CAAC,eAAe,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACxC,CAAC;CACF;AApDD,8BAoDC","sourcesContent":["// src/middleware/AdminAuth.ts\nimport type { Request, Response, NextFunction } from 'express';\nimport type { IConfigService } from '../contracts/interfaces';\nimport crypto from 'crypto';\n\nexport class AdminAuth {\n  private bearer?: string;\n  private basicUser?: string;\n  private basicPass?: string;\n\n  bindCredentialsFromEnv(_cfg: IConfigService): void {\n    this.bearer = process.env.ADMIN_TOKEN;\n    this.basicUser = process.env.ADMIN_USER;\n    this.basicPass = process.env.ADMIN_PASS;\n  }\n\n  authenticateAdmin(req: Request, res: Response, next: NextFunction): void {\n    const header = req.headers['authorization'] as string | undefined;\n\n    let ok = false;\n\n    if (header && header.startsWith('Bearer ')) {\n      const token = header.slice(7).trim();\n      if (this.bearer && this.timingSafeEqualStr(token, this.bearer)) {\n        ok = true;\n      }\n    } else if (header && header.startsWith('Basic ')) {\n      const payload = header.slice(6).trim();\n      const decoded = Buffer.from(payload, 'base64').toString('utf8');\n      const idx = decoded.indexOf(':');\n      const user = idx >= 0 ? decoded.slice(0, idx) : decoded;\n      const pass = idx >= 0 ? decoded.slice(idx + 1) : '';\n      if (\n        this.basicUser &&\n        this.basicPass &&\n        this.timingSafeEqualStr(user, this.basicUser) &&\n        this.timingSafeEqualStr(pass, this.basicPass)\n      ) {\n        ok = true;\n      }\n    }\n\n    if (ok) {\n      next();\n      return;\n    }\n\n    res.status(401).send('Unauthorized');\n  }\n\n  private timingSafeEqualStr(a?: string, b?: string): boolean {\n    if (typeof a !== 'string' || typeof b !== 'string') return false;\n    const ab = Buffer.from(a, 'utf8');\n    const bb = Buffer.from(b, 'utf8');\n    if (ab.length !== bb.length) return false;\n    return crypto.timingSafeEqual(ab, bb);\n  }\n}\n"]}