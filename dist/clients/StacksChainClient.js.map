{"version":3,"file":"StacksChainClient.js","sourceRoot":"","sources":["../../src/clients/StacksChainClient.ts"],"names":[],"mappings":"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","sourcesContent":["// src/clients/StacksChainClient.ts\nimport axios, { AxiosInstance } from 'axios';\nimport {\n  makeContractCall,\n  broadcastTransaction,\n  AnchorMode,\n  PostConditionMode,\n  Pc,\n  contractPrincipalCV,\n  bufferCV,\n  uintCV,\n  someCV,\n  noneCV,\n  trueCV,\n  falseCV,\n  cvToJSON,\n  cvToHex,\n  hexToCV,\n  standardPrincipalCV,\n  tupleCV,\n  makeUnsignedContractCall,\n  Cl,\n} from '@stacks/transactions';\nimport * as stacksNetworkPkg from '@stacks/network';\nimport type { ClarityValue } from '@stacks/transactions';\n\n\nconst Net = (stacksNetworkPkg as any).default ?? stacksNetworkPkg;\nconst { networkFromName } = Net;\n\nimport type { IStacksChainClient, IConfigService } from '../contracts/interfaces';\nimport type { AnchorCase, NetworkName, OnChainSubscription } from '../contracts/domain';\nimport http from 'node:http';\nimport https from 'node:https';\n\n/** Two-entry coalescer (per stream) */\nclass DuoCoalescer {\n  private last?: { key: string; line: string; count: number };\n  private prev?: { key: string; line: string; count: number };\n  constructor(private emit: (line: string) => void) {}\n  push(key: string, line: string) {\n    if (this.last?.key === key) { this.last.count++; return; }\n    if (this.prev?.key === key) { this.flushOne(this.last); this.last = { key, line: this.prev.line, count: this.prev.count + 1 }; this.prev = undefined; return; }\n    if (this.prev) this.flushOne(this.prev);\n    this.prev = this.last;\n    this.last = { key, line, count: 1 };\n  }\n  flushAll() { this.flushOne(this.prev); this.flushOne(this.last); this.prev = this.last = undefined; }\n  private flushOne(e?: { key: string; line: string; count: number }) {\n    if (!e) return;\n    if (e.count <= 1) this.emit(e.line);\n    else this.emit(`${e.line} … called x ${e.count} times`);\n  }\n}\n\nexport class StacksChainClient implements IStacksChainClient {\n  private network!: NetworkName;\n  private baseUrl!: string;\n  private http!: AxiosInstance;\n\n  private contractAddress!: string;\n  private contractName!: string;\n\n  //DEBUG: DO NOT TOUCH THIS!\n  private debug = String(process.env.GLOBAL_DEBUGGING || '') === '1';\n  private dlog = (..._a: any[]) => { return; };\n\n  // Independent fold streams: HTTP vs CHAIN\n  private foldHTTP = new DuoCoalescer(line => this.dlog(line));\n  private foldCHAIN = new DuoCoalescer(line => this.dlog(line));\n\n  constructor(cfg: IConfigService) {\n    this.initializeNetwork(cfg);\n    this.probeExtendedApi().catch(() => {});\n  }\n\n  private short(hexLike: string | undefined, n = 8): string {\n    const s = String(hexLike || '').replace(/^0x/, '');\n    return s.slice(0, n);\n  }\n  private pathOnly(u?: string): string {\n    if (!u) return '';\n    if (u.startsWith('/')) return u;\n    try { const url = new URL(u, this.baseUrl); return url.pathname + (url.search || ''); } catch { return u; }\n  }\n\n  private cvFromTyped(a: any): ClarityValue {\n    if (!a || typeof a !== 'object') throw new Error('cvFromTyped: bad arg');\n    const t = String(a.type || '').toLowerCase();\n\n    if (t === 'uint')   return uintCV(BigInt(a.value));\n    if (t === 'buffer') {\n      const hex = String(a.value ?? '').replace(/^0x/i, '');\n      return bufferCV(Buffer.from(hex, 'hex'));\n    }\n    if (t === 'contract') {\n      const s = String(a.value || '');\n      const [addr, name] = s.split('.', 2);\n      return contractPrincipalCV(addr, name);\n    }\n    if (t === 'some')   return someCV(this.cvFromTyped(a.value));\n    if (t === 'none')   return noneCV();\n    if (t === 'true')   return trueCV();\n    if (t === 'false')  return falseCV();\n    if (t === 'address') return standardPrincipalCV(String(a.value));\n\n    // Already CV-shaped? pass through\n    if ('value' in a && 'type' in a) return a as any;\n\n    throw new Error(`cvFromTyped: unsupported type ${t}`);\n  }\n\n  // Map string -> enum for AnchorMode/PostConditionMode\n  private toAnchorMode(s?: string) {\n    const t = String(s || '').toLowerCase();\n    if (t === 'on_chain_only' || t === 'onchain' || t === 'onchainonly') return AnchorMode.OnChainOnly;\n    if (t === 'off_chain_only' || t === 'offchain' || t === 'offchainonly') return AnchorMode.OffChainOnly;\n    return AnchorMode.Any; // default\n  }\n  private toPostConditionMode(s?: string) {\n    return String(s || '').toLowerCase() === 'allow' ? PostConditionMode.Allow : PostConditionMode.Deny;\n  }\n\n  // Add near other helpers\n  async getTxStatus(txid: string): Promise<{\n    tx_id: string;\n    tx_status: 'pending'|'success'|'abort_by_response'|'failed'|'dropped_replace_by_fee'|string;\n    block_height?: number;\n    receipt_time?: number;\n    tx_result?: any;\n  }> {\n    const id = String(txid || '').toLowerCase();\n    if (!/^[0-9a-f]{64}$/.test(id)) throw new Error('bad txid');\n    return await this.getWithRetry(`/extended/v1/tx/${id}`);\n  }\n\n  // Parse \"ST...contract::asset\" -> { addr, name, asset }\n  private parseFtAsset(fq: string): { addr: string; name: string; asset: string } {\n    const [left, right] = String(fq).split('.', 2);\n    const [name, asset] = String(right || '').split('::', 2);\n    if (!left || !name || !asset) throw new Error(`bad FT asset identifier: ${fq}`);\n    return { addr: left, name, asset };\n  }\n\n  // Convert builder-shaped PCs to v7 Pc instances (TS-safe)\n  private pcsFromUnsigned(unsigned: any): any[] {\n    const raw = unsigned?.postConditions || unsigned?.post_conditions || [];\n    const out: any[] = [];\n    for (const pc of raw) {\n      if (!pc || typeof pc !== 'object') continue;\n      const cond = String(pc.condition || '').toLowerCase();\n      const amt  = BigInt(String(pc.amount ?? 0));\n      const who  = String(pc.address || '');\n\n      const codeStage = ((principal) => {\n        switch (cond) {\n          case 'eq':  return principal.willSendEq(amt);\n          case 'gt':  return principal.willSendGt(amt);\n          case 'gte': return principal.willSendGte(amt);\n          case 'lt':  return principal.willSendLt(amt);\n          case 'lte':\n          default:    return principal.willSendLte(amt);\n        }\n      })(Pc.principal(who));\n\n      if (pc.type === 'stx-postcondition') {\n        out.push(codeStage.ustx());\n        continue;\n      }\n      if (pc.type === 'ft-postcondition') {\n        const { addr, name, asset } = this.parseFtAsset(String(pc.asset || ''));\n        out.push(codeStage.ft(`${addr}.${name}`, asset));\n        continue;\n      }\n      // (nft PCs etc. — add as needed)\n    }\n    return out;\n  }\n\n  // Sign + broadcast a contract call (honors PCs/network)\n\n  // async signAndBroadcast(\n  //   unsigned: {\n  //     contractAddress: string;\n  //     contractName: string;\n  //     functionName: string;\n  //     functionArgs?: any[];\n  //     postConditions?: any[];\n  //     post_conditions?: any[];\n  //     postConditionMode?: 'allow' | 'deny';\n  //     post_condition_mode?: 'allow' | 'deny';\n  //     anchorMode?: AnchorCase;\n  //     network?: NetworkName;\n  //   },\n  //   senderKeyHex: string,\n  // ): Promise<{ txid: string }> {\n  //   const args: ClarityValue[] = (unsigned.functionArgs || []).map(x => this.cvFromTyped(x));\n\n  //   // pick network from unsigned if present; fallback to client default\n  //   const netName = (unsigned.network as any) || this.network;\n  //   const net = (Net as any).networkFromName ? (Net as any).networkFromName(netName) : networkFromName(netName);\n  //   (net as any).client = (net as any).client ?? {};\n  //   (net as any).client.baseUrl = this.baseUrl;\n  //   if (this.debug) this.foldCHAIN.push('NET', `[NET] baseUrl=${(net as any).client.baseUrl}`);\n\n  //   const postConditions = this.pcsFromUnsigned(unsigned);\n  //   const postConditionMode =\n  //     this.toPostConditionMode(unsigned.postConditionMode || (unsigned as any).post_condition_mode);\n  //   // Accept both camel & snake; convert once here\n  //   const anchorModeNorm = String(unsigned.anchorMode || 'any').toLowerCase();\n  //   const anchorMode =\n  //     anchorModeNorm === 'on_chain_only' || anchorModeNorm === 'onchainonly' || anchorModeNorm === 'onchain'\n  //       ? AnchorMode.OnChainOnly\n  //       : anchorModeNorm === 'off_chain_only' || anchorModeNorm === 'offchainonly' || anchorModeNorm === 'offchain'\n  //       ? AnchorMode.OffChainOnly\n  //       : AnchorMode.Any;\n\n  //   const tx = await makeContractCall({\n  //     contractAddress: unsigned.contractAddress,\n  //     contractName: unsigned.contractName,\n  //     functionName: unsigned.functionName,\n  //     functionArgs: args,\n  //     senderKey: senderKeyHex.replace(/^0x/i, '').slice(0, 64),\n  //     network: net,\n  //     postConditions,\n  //     postConditionMode,\n  //     // anchorMode is optional; omit unless you really require OffChainOnly/OnChainOnly\n  //   });\n\n  //   const res: any = await broadcastTransaction({ transaction: tx, network: net });\n  //   if (res?.error || res?.reason) {\n  //     const reason = res.reason || res.error;\n  //     throw Object.assign(\n  //       new Error(`broadcast failed: ${typeof reason === 'string' ? reason : JSON.stringify(res)}`),\n  //       { result: res }\n  //     );\n  //   }\n  //   const txid = String(res?.txid ?? res);\n  //   return { txid };\n  // }\n\n// DO NOT import '@stacks/connect' at top-level (will break SSR/CJS)\n// This file must only be imported in the browser (no ts-node/SSR).\n\n\n\n  async signAndBroadcast(\n    unsigned: {\n      contractAddress: string;\n      contractName: string;\n      functionName: string;\n      functionArgs?: any[];\n      postConditions?: any[];\n      post_conditions?: any[];\n      postConditionMode?: 'allow' | 'deny';\n      post_condition_mode?: 'allow' | 'deny';\n      anchorMode?: AnchorCase; // ignored by wallet\n      network?: NetworkName;\n    },\n    merchantAddress: string,\n  ): Promise<{ txid: string }> {\n    // 0) Hard block server/SSR. If this throws at startup, this file is imported on the server.\n    if (typeof window === 'undefined') {\n      throw new Error('signAndBroadcast must run in the browser (wallet required). Move this call to client-only code.');\n    }\n\n    // 1) Dynamic import (ESM-safe). Prevents Node from require()-ing ESM on startup.\n    const { request } = await import('@stacks/connect');\n\n    // 2) Encode your existing args, then append merchant principal\n    const baseArgs: ClarityValue[] = (unsigned.functionArgs || []).map((x: any) => (this as any).cvFromTyped(x));\n    const argsWithMerchant: ClarityValue[] = [...baseArgs, Cl.principal(merchantAddress)]; // address, not private key\n\n    // 3) Normalize post-conditions + mode (camel/snake)\n    const postConditions = (unsigned.postConditions ?? (unsigned as any).post_conditions) || undefined;\n    const postConditionMode = (unsigned.postConditionMode ?? (unsigned as any).post_condition_mode ?? 'deny');\n\n    // (Optional) You can build payer-safety post-conditions with Pc.* if needed. :contentReference[oaicite:5]{index=5}\n\n    // 4) Ask wallet to sign + broadcast\n    const res: any = await request('stx_callContract', {\n      contract: `${unsigned.contractAddress}.${unsigned.contractName}`,\n      functionName: unsigned.functionName,\n      functionArgs: argsWithMerchant,\n      ...(postConditions ? { postConditions } : {}),\n      postConditionMode,               // 'allow' | 'deny'\n      network: unsigned.network ?? 'mainnet'\n    });\n\n    // 5) Normalize result and return\n    const txid = String(res?.txid ?? res?.txId ?? res);\n    if (!txid) throw new Error(`wallet did not return txid: ${JSON.stringify(res)}`);\n    return { txid };\n  }\n\n\n\n\n  // ────────────────────────────────────────────────────────────────────────────\n  // Transport resiliency\n  // ────────────────────────────────────────────────────────────────────────────\n  private transientErr(e: any): boolean {\n    const code = e?.code || e?.response?.status;\n    const msg = String(e?.message || '').toLowerCase();\n    return (\n      code === 'ECONNRESET' ||\n      code === 'EPIPE' ||\n      code === 'ETIMEDOUT' ||\n      code === 'ECONNABORTED' ||\n      msg.includes('timeout') ||\n      msg.includes('socket hang up')\n    );\n  }\n\n  private async getWithRetry<T = any>(path: string, opts: { params?: any } = {}, retries = 4): Promise<T> {\n    let lastErr: any;\n    const sleep = (ms: number) => new Promise(res => setTimeout(res, ms));\n    for (let i = 0; i <= retries; i++) {\n      try {\n        const r = await this.http.get(path, opts);\n        return r.data as T;\n      } catch (e: any) {\n        lastErr = e;\n        const status = e?.response?.status;\n        const hdrs = e?.response?.headers || {};\n        if (status === 429) {\n          // Prefer server-provided hints\n          const retryAfter = Number(hdrs['retry-after']);                 // seconds\n          const resetIn = Number(hdrs['x-ratelimit-reset']);              // seconds\n          const waitMs = Number.isFinite(retryAfter)\n            ? retryAfter * 1000\n            : Number.isFinite(resetIn)\n              ? resetIn * 1000\n              : 500 * Math.pow(2, i); // fallback exponential\n          await sleep(waitMs);\n          continue;\n        }\n        if (!this.transientErr(e) || i === retries) throw e;\n        const backoff = 150 * Math.pow(2, i) + Math.floor(Math.random() * 200);\n        await sleep(backoff);\n      }\n    }\n    throw lastErr;\n  }\n\n  private async postWithRetry<T = any>(path: string, body: any, retries = 4): Promise<T> {\n    let lastErr: any;\n    const sleep = (ms: number) => new Promise(res => setTimeout(res, ms));\n    for (let i = 0; i <= retries; i++) {\n      try {\n        const r = await this.http.post(path, body, { headers: { 'Content-Type': 'application/json' } });\n        return r.data as T;\n      } catch (e: any) {\n        lastErr = e;\n        const status = e?.response?.status;\n        const hdrs = e?.response?.headers || {};\n        if (status === 429) {\n          const retryAfter = Number(hdrs['retry-after']);\n          const resetIn = Number(hdrs['x-ratelimit-reset']);\n          const waitMs = Number.isFinite(retryAfter)\n            ? retryAfter * 1000\n            : Number.isFinite(resetIn)\n              ? resetIn * 1000\n              : 500 * Math.pow(2, i);\n          await sleep(waitMs);\n          continue;\n        }\n        if (!this.transientErr(e) || i === retries) throw e;\n        const backoff = 150 * Math.pow(2, i) + Math.floor(Math.random() * 200);\n        await sleep(backoff);\n      }\n    }\n    throw lastErr;\n  }\n\n\n  // 2a) Fallback for contracts that use get-invoice-status-v2 { id: (buff 32) }\n  private async readInvoiceStatusV2Fallback(idHex: string): Promise<'not-found' | 'paid' | 'canceled' | 'expired' | 'unpaid'> {\n    const clean = idHex.toLowerCase().replace(/^0x/, '');\n    const key = tupleCV({ id: bufferCV(Buffer.from(clean, 'hex')) });\n    const cv = await this.callReadOnly('get-invoice-status-v2', [key]);\n    const j: any = cvToJSON(cv);\n    const val = String(j?.value ?? '').toLowerCase();\n    return (val || 'not-found') as any;\n  }\n\n  // ────────────────────────────────────────────────────────────────────────────\n  // Init\n  // ────────────────────────────────────────────────────────────────────────────\n  initializeNetwork(cfg: IConfigService): void {\n    const net = (cfg.getNetwork() as NetworkName) ?? 'testnet';\n    const customApiUrl = (net === 'mainnet'\n        ? 'https://api.hiro.so'\n        : net === 'testnet'\n          ? 'https://api.testnet.hiro.so'\n          : 'http://localhost:3999');\n    console.log(`[ChainClient] initialized on ${net} ${customApiUrl}`);\n    const apiKey = cfg.getHiroAPIKey()\n\n    this.network = net;\n    this.baseUrl = String(customApiUrl).replace(/\\/+$/, '');\n\n    this.http = axios.create({\n      baseURL: this.baseUrl,\n      timeout: 20_000,\n      httpAgent: new http.Agent({ keepAlive: true, maxSockets: 64, maxFreeSockets: 16 }),\n      httpsAgent: new https.Agent({ keepAlive: true, maxSockets: 64, maxFreeSockets: 16 }),\n      maxRedirects: 5,\n      proxy: false,\n      headers: apiKey ? { 'x-api-key': apiKey } : undefined,\n    });\n\n    this.http.interceptors.request.use(cfg => {\n      (cfg as any)._t = Date.now();\n      if (this.debug) {\n        const method = (cfg.method || 'GET').toUpperCase();\n        const path = this.pathOnly(cfg.url || '');\n        this.foldHTTP.push(`REQ:${method}:${path}`, `→ ${method} ${path}`);\n      }\n      return cfg;\n    });\n    if (this.debug) {\n      this.dlog('init', { network: this.network, baseUrl: this.baseUrl });\n      this.http.interceptors.request.use(cfg => {\n        (cfg as any)._t = Date.now();\n        const m = (cfg.method || 'GET').toUpperCase();\n        const p = this.pathOnly(cfg.url || '');\n        this.foldHTTP.push(`REQ:${m}:${p}`, `→ ${m} ${p}`);\n        return cfg;\n      });\n      this.http.interceptors.response.use(\n        res => {\n          const dt = Date.now() - ((res.config as any)._t || Date.now());\n          const m = (res.config.method || 'GET').toUpperCase();\n          const p = this.pathOnly(res.config.url || '');\n          this.foldHTTP.push(`RES:${m}:${p}:${res.status}`, `← ${res.status} ${m} ${p} ${dt}ms`);\n          return res;\n        },\n        err => {\n          const cfg = err.config || {};\n          const dt = Date.now() - ((cfg as any)._t || Date.now());\n          const m = (cfg.method || 'GET').toUpperCase();\n          const p = this.pathOnly(cfg.url || '');\n          const st = err.response?.status || err.code || 'ERR';\n          this.foldHTTP.push(`ERR:${m}:${p}:${st}`, `✗ ${st} ${m} ${p} ${dt}ms`);\n          return Promise.reject(err);\n        }\n      );\n      process.once('beforeExit', () => { this.foldHTTP.flushAll(); this.foldCHAIN.flushAll(); });\n    }\n\n    const { contractAddress, contractName } = cfg.getContractId();\n    this.contractAddress = contractAddress;\n    this.contractName = contractName;\n  }\n\n  private async probeExtendedApi() {\n    const url = '/extended/v1/info';\n    try {\n      await this.getWithRetry(url, {}, 0);\n      if (this.debug) this.foldCHAIN.push('EXT:ok', '[EXT] extended API present');\n    } catch {\n      if (this.debug) this.foldCHAIN.push('EXT:miss', '[EXT] extended API missing; poller will degrade gracefully');\n    }\n  }\n\n  // ────────────────────────────────────────────────────────────────────────────\n  // Read-only helpers (ABI-aligned)\n  // ────────────────────────────────────────────────────────────────────────────\n\n  async readAdminPrincipal() {\n    const cv = await this.callReadOnly('get-admin', []);\n    const j: any = cvToJSON(cv);\n    return (j?.type === 'optional' && j.value) ? String(j.value) : undefined;\n  }\n\n  async callReadOnly(functionName: string, functionArgs: ClarityValue[]): Promise<ClarityValue> {\n    const argsHex = (functionArgs ?? []).map(cv => cvToHex(cv));\n    const url = `/v2/contracts/call-read/${this.contractAddress}/${this.contractName}/${functionName}?proof=0`;\n    const body = { sender: this.contractAddress, arguments: argsHex };\n    const resp: any = await this.postWithRetry(url, body);\n    const resultHex: string = String(resp?.result ?? '');\n    if (!resultHex.startsWith('0x')) throw new Error(`callReadOnly: bad result for ${functionName}`);\n    return hexToCV(resultHex);\n  }\n\n  /**\n   * Decode (optional (tuple …)) from `get-invoice`.\n   */\n  async readInvoice(idHex: string) {\n    const clean = String(idHex || '').replace(/^0x/i, '').toLowerCase();\n    if (clean.length !== 64 || /[^0-9a-f]/i.test(clean)) return undefined;\n\n    const toNumU = (x: any): number => {\n      if (x === null || x === undefined) return NaN;\n      if (typeof x === 'number') return x;\n      if (typeof x === 'bigint') return Number(x);\n      if (typeof x === 'string') return Number(x.startsWith('u') ? x.slice(1) : x);\n      if (typeof x === 'object') {\n        if ('value' in x) return toNumU((x as any).value);\n        if ('repr'  in x) return toNumU((x as any).repr);\n        const k = Object.keys(x)[0];\n        return k ? toNumU((x as any)[k]) : NaN;\n      }\n      return NaN;\n    };\n\n    const isKind = (j: any, kind: 'response' | 'optional' | 'tuple') => {\n      const t = j?.type;\n      if (!t) return false;\n      return t === kind || (typeof t === 'string' && t.toLowerCase().includes(kind));\n    };\n\n    const unwrap = (j0: any) => {\n      let j = j0;\n      if (isKind(j, 'response')) j = j.value ?? j.ok ?? j.err ?? j;\n      if (isKind(j, 'optional')) {\n        if (!('value' in j) || j.value == null) return undefined;\n        j = j.value;\n      }\n      if (isKind(j, 'tuple')) return j;\n      if (isKind(j?.value, 'tuple')) return j.value;\n      return j;\n    };\n\n    const asFields = (tupleNode: any): Array<{ name: string; value: any }> => {\n      const v = tupleNode?.value ?? tupleNode;\n      if (Array.isArray(v)) return v;\n      if (v && typeof v === 'object') {\n        return Object.entries(v).map(([name, value]) => ({ name, value }));\n      }\n      return [];\n    };\n\n    const get = (fields: Array<{ name: string; value: any }>, k: string) =>\n      fields.find((x) => (x?.name ?? (x as any)?.key) === k)?.value;\n\n    try {\n      const cv = await this.callReadOnly('get-invoice', [bufferCV(Buffer.from(clean, 'hex'))]);\n      const tupleNode = unwrap(cvToJSON(cv));\n      if (!tupleNode) return undefined;\n\n      const f = asFields(tupleNode);\n\n      const amountCV = get(f, 'amount') ?? get(f, 'amount-sats') ?? get(f, 'amount_sats') ?? get(f, 'amountSats');\n      const refundCV = get(f, 'refund-amount') ?? get(f, 'refund_amount') ?? get(f, 'refundAmount');\n\n      const paidCV     = get(f, 'paid');\n      const canceledCV = get(f, 'canceled');\n      const expiredCV  = get(f, 'expired');\n\n      const truthy = (x: any) => {\n        const v = (x && typeof x === 'object' && 'value' in x) ? (x as any).value : x;\n        return v === true || v === 'true' || v === 'True' || v === 1 || v === '1';\n      };\n\n      const amountSats  = toNumU(amountCV);\n      const refundAmount = refundCV == null ? 0 : toNumU(refundCV);\n\n      let status: 'paid' | 'canceled' | 'expired' | 'unpaid' = 'unpaid';\n      if (truthy(paidCV)) status = 'paid'; else if (truthy(canceledCV)) status = 'canceled'; else if (truthy(expiredCV)) status = 'expired';\n\n      const payerCV = get(f, 'payer');\n      let payer: string | undefined;\n      if (payerCV && payerCV.type === 'optional' && payerCV.value) {\n        const inner = payerCV.value;\n        payer = String(inner?.value ?? inner ?? '');\n      }\n\n      return {\n        status,\n        paidAtHeight: undefined,\n        lastChangeHeight: undefined,\n        lastTxId: undefined,\n        refundAmount,\n        amountSats,\n        payer,\n      };\n    } catch { /* fall back */ }\n\n    try {\n      const j = await this.readInvoiceDirectMap(clean);\n      if (!j) return undefined;\n      const f = asFields(j);\n\n      const amountCV = get(f, 'amount') ?? get(f, 'amount-sats') ?? get(f, 'amount_sats') ?? get(f, 'amountSats');\n      const refundCV = get(f, 'refund-amount') ?? get(f, 'refund_amount') ?? get(f, 'refundAmount');\n\n      const paidCV     = get(f, 'paid');\n      const canceledCV = get(f, 'canceled');\n      const expiredCV  = get(f, 'expired');\n\n      const truthy = (x: any) => {\n        const v = (x && typeof x === 'object' && 'value' in x) ? (x as any).value : x;\n        return v === true || v === 'true' || v === 'True' || v === 1 || v === '1';\n      };\n\n      const amountSats   = toNumU(amountCV);\n      const refundAmount = refundCV == null ? 0 : toNumU(refundCV);\n\n      let status: 'paid' | 'canceled' | 'expired' | 'unpaid' = 'unpaid';\n      if (truthy(paidCV)) status = 'paid'; else if (truthy(canceledCV)) status = 'canceled'; else if (truthy(expiredCV)) status = 'expired';\n\n      return {\n        status,\n        paidAtHeight: undefined,\n        lastChangeHeight: undefined,\n        lastTxId: undefined,\n        refundAmount,\n        amountSats,\n        payer: undefined,\n      };\n    } catch {\n      return undefined;\n    }\n  }\n\n  async readInvoiceStatus(idHex: string): Promise<'not-found' | 'paid' | 'canceled' | 'expired' | 'unpaid'> {\n    const clean = idHex.toLowerCase().replace(/^0x/, '');\n    if (!/^[0-9a-f]{64}$/.test(clean)) return 'not-found';\n    try {\n      const cv = await this.callReadOnly('get-invoice-status', [bufferCV(Buffer.from(clean, 'hex'))]);\n      const j: any = cvToJSON(cv);\n      const val = String(j?.value ?? '').toLowerCase();\n      if (val) return val as any;\n    } catch { /* fall through */ }\n    try {\n      const v2 = await this.readInvoiceStatusV2Fallback(clean);\n      if (v2 !== 'not-found') return v2;\n    } catch { /* ignore */ }\n    return 'not-found';\n  }\n\n  async readInvoiceDirectMap(idHex: string): Promise<any | undefined> {\n    const clean = idHex.toLowerCase().replace(/^0x/, '');\n    if (!/^[0-9a-f]{64}$/.test(clean)) return undefined;\n    const keyCv = tupleCV({ id: bufferCV(Buffer.from(clean, 'hex')) });\n    const keyHex = cvToHex(keyCv);\n    const path = `/v2/map_entry/${this.contractAddress}/${this.contractName}/invoices?proof=0`;\n    const out: any = await this.postWithRetry(path, JSON.stringify(keyHex));\n    if (!out?.data) return undefined;\n    const cv = hexToCV(String(out.data));\n    const j: any = cvToJSON(cv);\n    return j?.value || j;\n  }\n\n  async getStxBalance(principal: string): Promise<bigint> {\n    const resp: any = await this.getWithRetry(`/extended/v1/address/${encodeURIComponent(principal)}/balances`);\n    const stx = resp?.stx?.balance ?? '0';\n    return BigInt(String(stx));\n  }\n\n  async readSbtcToken() {\n    const cv = await this.callReadOnly('get-sbtc', []);\n    const j: any = cvToJSON(cv);\n    const p = (j && j.type === 'optional' && j.value) ? String(j.value) : '';\n    if (!p.includes('.')) return undefined;\n    const [contractAddress, contractName] = p.split('.', 2);\n    return { contractAddress, contractName };\n  }\n\n  async readSubscription(idHex: string): Promise<OnChainSubscription | undefined> {\n    const clean = idHex.toLowerCase().replace(/^0x/, '');\n    if (!/^[0-9a-f]{64}$/.test(clean)) return undefined;\n\n    const cv = await this.callReadOnly('get-subscription', [\n      bufferCV(Buffer.from(clean, 'hex')),\n    ]);\n\n    const j: any = cvToJSON(cv);\n    if (!j || j.type !== 'optional' || !j.value) return undefined;\n\n    const tup = j.value.value ?? j.value;\n    return {\n      idHex,\n      merchant: String(tup?.merchant?.value || ''),\n      subscriber: String(tup?.subscriber?.value || ''),\n      amountSats: BigInt(String(tup?.amount?.value ?? '0')),\n      intervalBlocks: BigInt(String(tup?.['interval']?.value ?? tup?.['interval-blocks']?.value ?? '0')),\n      nextDue: BigInt(String(tup?.['next-due']?.value ?? '0')),\n      active: !!tup?.active?.value,\n      lastPaid:\n        tup?.['last-paid']?.type === 'optional' && tup['last-paid'].value\n          ? BigInt(String(tup['last-paid'].value.value ?? tup['last-paid'].value))\n          : undefined,\n    };\n  }\n\n  // Tip helpers\n  async getTip(): Promise<{ height: number; blockHash: string }> {\n    const fetchLatestFromList = async () => {\n      const list = await this.getWithRetry<{ results?: any[] }>(\n        '/extended/v1/block',\n        { params: { limit: 1, offset: 0 } }\n      );\n      const first = Array.isArray(list?.results) ? list.results[0] : undefined;\n      if (!first) throw new Error('getTip: empty block list');\n      return { height: Number(first.height), blockHash: String(first.hash) };\n    };\n\n    // wrap the initial /v2/info call\n    let info: { stacks_tip_height?: number } | undefined;\n    try {\n      info = await this.getWithRetry<{ stacks_tip_height?: number }>('/v2/info');\n    } catch {\n      return await fetchLatestFromList();\n    }\n\n    const height = Number(info?.stacks_tip_height);\n    if (!Number.isFinite(height) || height <= 0) {\n      return await fetchLatestFromList();\n    }\n\n    try {\n      const blk = await this.getWithRetry(`/extended/v1/block/by_height/${height}`);\n      const blockHash = String((blk as any)?.hash ?? (blk as any)?.data?.hash);\n      if (!blockHash) return await fetchLatestFromList();\n      return { height, blockHash };\n    } catch (e: any) {\n      if (e?.response?.status === 404 || this.transientErr(e)) {\n        return await fetchLatestFromList();\n      }\n      throw e;\n    }\n  }\n\n  async getTipHeight(): Promise<number> {\n    const tip = await this.getTip();\n    return tip.height;\n  }\n\n  async getFungibleBalance(assetContract: { contractAddress: string; contractName: string }, principal: string) {\n    const resp: any = await this.getWithRetry(`/extended/v1/address/${encodeURIComponent(principal)}/balances`);\n    const tokens: Record<string, any> = resp?.fungible_tokens ?? {};\n    const fqPrefix = `${assetContract.contractAddress}.${assetContract.contractName}::`;\n    let balanceStr = '0';\n    for (const [key, entry] of Object.entries(tokens)) {\n      if (key.startsWith(fqPrefix)) { balanceStr = String((entry as any)?.balance ?? '0'); break; }\n    }\n    return BigInt(balanceStr);\n  }\n\n  async getContractCallEvents(params: { fromHeight: number; limit?: number; maxPages?: number }): Promise<any[]> {\n    const contractId = `${this.contractAddress}.${this.contractName}`;\n    const basePath = `/extended/v1/contract/${contractId}/events`;\n\n    const pageLimit = Math.max(1, Math.min(200, params.limit ?? 50));\n    const maxPages = Math.max(1, params.maxPages ?? 10);\n\n    const out: any[] = [];\n    let offset = 0;\n\n    for (let page = 0; page < maxPages; page++) {\n      const resp = await this.http.get(basePath, { params: { limit: pageLimit, offset } });\n      const rows: any[] = Array.isArray(resp.data?.results) ? resp.data.results : [];\n\n      if (!rows.length) break;\n\n      for (const ev of rows) {\n        const h = Number(ev?.block_height ?? ev?.tx?.block_height ?? NaN);\n        if (!Number.isFinite(h) || h < params.fromHeight) continue;\n        out.push(ev);\n      }\n\n      offset += rows.length;\n      if (rows.length < pageLimit) break;\n    }\n\n    return out;\n  }\n\n  async getBlockHeader(height: number): Promise<{ parent_block_hash: string; block_hash: string }> {\n    const resp: any = await this.getWithRetry(`/extended/v1/block/by_height/${height}`);\n    return {\n      parent_block_hash: String(resp?.parent_block_hash ?? resp?.data?.parent_block_hash ?? ''),\n      block_hash: String(resp?.hash ?? resp?.data?.hash ?? ''),\n    };\n  }\n\n  // Planner wants this; returning false keeps registration in the plan (harmless).\n  async isMerchantRegisteredOnChain(_principal: string): Promise<boolean> {\n    return false;\n  }\n}\n\nexport default StacksChainClient;\n"]}