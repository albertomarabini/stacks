{
  "version": 3,
  "sources": ["../../../src/client/islands/SubscriptionLedgerIsland.ts"],
  "sourcesContent": ["/* eslint-disable no-alert, no-console */\n\ntype PageData = {\n    kind: 'subscriptions';\n    storeId: string;\n    filterUrl: string;      // WEBPAY controller (SSR fragment): /merchant/:storeId/subscriptions/filter\n    actionsBase: string;    // WEBPAY controller base: /merchant/:storeId/subscriptions\n    csrfToken?: string | null;\n  };\n  const data: PageData = (window as any).__PAGE__ || {\n    kind: 'subscriptions',\n    storeId: '',\n    filterUrl: '',\n    actionsBase: '',\n    csrfToken: null,\n  };\n\n  function $(sel: string, root: Document | HTMLElement = document) {\n    return Array.from(root.querySelectorAll(sel)) as HTMLElement[];\n  }\n\n  // Tiny esc\n  const esc = (s: any) =>\n    String(s ?? '').replace(/[&<>\"']/g, c => ({'&':'&amp;','<':'&lt;','>':'&gt;','\"':'&quot;',\"'\":'&#39;'}[c]!));\n\n  function toUrlEncoded(body: Record<string, any>) {\n    const qs = new URLSearchParams();\n    for (const [k, v] of Object.entries(body)) qs.append(k, String(v ?? ''));\n    return qs;\n  }\n\n  function readMetaCsrf(): string | null {\n    const m = document.querySelector('meta[name=\"csrf-token\"]') as HTMLMetaElement | null;\n    return m?.content || null;\n  }\n\n  async function postHtml(url: string, body: Record<string, any>) {\n    const token = data.csrfToken || readMetaCsrf();\n    const qs = toUrlEncoded(body);\n    if (token && !qs.get('_csrf')) qs.append('_csrf', token);\n\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Accept': 'text/html',\n        'X-Requested-With': 'XMLHttpRequest',\n        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n      },\n      body: qs.toString(),\n      credentials: 'same-origin',\n    });\n    if (!res.ok) throw new Error(`HTTP ${res.status}`);\n    return res.text();\n  }\n\n  async function postJson(url: string, body: Record<string, any>) {\n    const token = data.csrfToken || readMetaCsrf();\n    const obj = { ...body };\n    if (token && !('_csrf' in obj)) (obj as any)._csrf = token;\n\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: { 'Accept': 'application/json', 'Content-Type': 'application/json' },\n      body: JSON.stringify(obj),\n      credentials: 'same-origin',\n    });\n    const text = await res.text();\n    let json: any = null;\n    try { json = text ? JSON.parse(text) : null; } catch { /* leave as text */ }\n    if (!res.ok) throw Object.assign(new Error(`HTTP ${res.status}`), { body: json || text });\n    return json;\n  }\n\n  async function refreshLedgerFromForm() {\n    const form = document.getElementById('subscription-filter-form') as HTMLFormElement | null;\n    const target = document.getElementById('subs-ledger-results');\n    if (!form || !target) return;\n    const fd = new FormData(form);\n    const status = String(fd.get('status') || '');\n    const next_due = String(fd.get('next_due') || '');\n    const q = String(fd.get('q') || '');\n    target.classList.add('opacity-60','pointer-events-none');\n    try {\n      const html = await postHtml(data.filterUrl, { status, next_due, q });\n      const doc = new DOMParser().parseFromString(html, 'text/html');\n      const fresh = doc.getElementById('subs-ledger-results');\n      target.innerHTML = fresh ? fresh.innerHTML : html;\n      bindRowActions();\n    } finally {\n      target.classList.remove('opacity-60','pointer-events-none');\n    }\n  }\n\n  function attachFilter() {\n    const form = document.getElementById('subscription-filter-form') as HTMLFormElement | null;\n    if (!form) return;\n    form.addEventListener('submit', async (e) => {\n      e.preventDefault();\n      try { await refreshLedgerFromForm(); } catch (err) { console.warn('filter failed', err); }\n    });\n  }\n\n  function renderSuccessSheet(model: any) {\n    const dlg = document.getElementById('sub-success-dialog') as HTMLDialogElement | null;\n    const body = document.getElementById('sub-success-body');\n    if (!dlg || !body) return;\n\n    const invoice = model?.invoice || {};\n    const magicLink = model?.magicLink || '';\n    const exp = invoice?.quoteExpiresAt || '';\n    const amt = invoice?.amountSats ?? '';\n    body.innerHTML = `\n      <dl class=\"grid grid-cols-2 gap-x-4 gap-y-2\">\n        <dt class=\"text-muted\">Invoice</dt><dd class=\"font-mono\">${esc(invoice.invoiceId || '')}</dd>\n        <dt class=\"text-muted\">Amount</dt><dd>${esc(amt)} sats</dd>\n        <dt class=\"text-muted\">Expires</dt><dd>${esc(exp)}</dd>\n        <dt class=\"text-muted\">Magic Link</dt><dd class=\"truncate font-mono\">${esc(magicLink)}</dd>\n      </dl>\n    `;\n    dlg.showModal();\n\n    const copyBtn = dlg.querySelector('[data-copy-link]') as HTMLButtonElement | null;\n    copyBtn?.addEventListener('click', async () => {\n      try { await navigator.clipboard.writeText(String(magicLink || '')); copyBtn.textContent = 'Copied'; setTimeout(()=>copyBtn.textContent='Copy Link',1200); } catch {}\n    }, { once: true });\n\n    const mailBtn = dlg.querySelector('[data-send-email]') as HTMLButtonElement | null;\n    mailBtn?.addEventListener('click', async () => {\n      try {\n        // NOTE: server route name is app-specific; see \u201CConfidence line\u201D\n        await postJson(`${data.actionsBase}/${encodeURIComponent(invoice.subscriptionId || model.subscriptionId || '')}/email`, { magicLink });\n        mailBtn.textContent = 'Sent';\n        setTimeout(()=>mailBtn.textContent='Send Email',1200);\n      } catch (e) {\n        alert('Email failed');\n      }\n    }, { once: true });\n\n    dlg.querySelector('[data-close]')?.addEventListener('click', () => dlg.close(), { once: true });\n  }\n\n  function bindRowActions() {\n    $('[data-row-kind=\"subscription\"]').forEach((row) => {\n      const subId = row.getAttribute('data-subscription-id')!;\n      // Generate invoice now\n      row.querySelector<HTMLElement>('[data-action=\"generate-invoice\"]')?.addEventListener('click', async () => {\n        const ttl = prompt('TTL seconds (120..1800):', '900');\n        if (!ttl) return;\n        const memo = prompt('Invoice memo (optional):', '') || '';\n        try {\n          const json = await postJson(`${data.actionsBase}/${encodeURIComponent(subId)}/invoice`, {\n            ttl_seconds: ttl, memo\n          });\n          renderSuccessSheet(json);\n          await refreshLedgerFromForm();\n        } catch (e) {\n          console.warn('generate-invoice failed', e);\n          alert('Could not create invoice for this subscription.');\n        }\n      });\n\n      // Send email (row-level shortcut; uses server to send latest link)\n      row.querySelector<HTMLElement>('[data-action=\"send-email\"]')?.addEventListener('click', async () => {\n        try {\n          await postJson(`${data.actionsBase}/${encodeURIComponent(subId)}/email`, {});\n          alert('Email queued');\n        } catch (e) {\n          alert('Email failed');\n        }\n      });\n\n      // Cancel subscription (may return unsigned call)\n      row.querySelector<HTMLElement>('[data-action=\"cancel-subscription\"]')?.addEventListener('click', async () => {\n        if (!confirm('Cancel this subscription?')) return;\n        try {\n          const res = await postJson(`${data.actionsBase}/${encodeURIComponent(subId)}/cancel`, {});\n          // Optional: if server returns { unsignedCall }, open via a shared wallet helper\n          if (res && res.unsignedCall) {\n            // window.openUnsignedInWallet?.(res.unsignedCall); // hook if available\n            alert('Unsigned cancel returned. Please sign in wallet (integration hook not wired in this island).');\n          }\n          await refreshLedgerFromForm();\n        } catch (e) {\n          alert('Cancel failed');\n        }\n      });\n\n      // Details drawer (delegated to your drawer partial / route)\n      row.querySelector<HTMLElement>('[data-action=\"view-details\"]')?.addEventListener('click', () => {\n        const evt = new CustomEvent('subscription:details', { detail: { subscriptionId: subId } });\n        window.dispatchEvent(evt);\n      });\n    });\n  }\n\n  // Boot\n  attachFilter();\n  bindRowActions();\n  document.querySelector('#sub-success-dialog [data-close]')?.addEventListener('click', () => {\n    (document.getElementById('sub-success-dialog') as HTMLDialogElement)?.close();\n  });\n"],
  "mappings": "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",
  "names": []
}
