{
  "version": 3,
  "sources": ["../../../src/client/islands/helpers/StatusStripDomRenderer.ts", "../../../src/client/islands/helpers/StatusPollingBackoffManager.ts", "../../../src/client/islands/helpers/StatusStripStatusMapper.ts", "../../../src/client/islands/StatusStripIsland.ts"],
  "sourcesContent": ["//StatusStripDomRenderer.ts\n\nexport class StatusStripDomRenderer {\n  private statusStripEl: HTMLElement | null = null;\n  private errorBannerEl: HTMLElement | null = null;\n  private currentStatus: string | null = null;\n\n  updateStatus(status: string): void {\n    const el = this.getStatusStripEl();\n    el.textContent = this.statusToDisplay(status);\n    el.className =\n      \"status-strip px-2 py-1 rounded border text-sm font-medium transition-colors duration-200 \" +\n      this.statusToClasses(status);\n    this.currentStatus = status;\n    if (this.isTerminalStatus(status)) {\n      el.setAttribute('data-terminal', 'true');\n    }\n  }\n\n  showError(message: string): void {\n    const errorEl = this.getErrorBannerEl(true);\n    errorEl.textContent = message;\n    errorEl.style.display = \"block\";\n  }\n\n  hideError(): void {\n    const errorEl = this.getErrorBannerEl(false);\n    if (errorEl) {\n      errorEl.style.display = \"none\";\n    }\n  }\n\n  validateAndInitHydration(h: { invoiceId: string } | undefined): boolean {\n    if (!h || typeof h.invoiceId !== \"string\" || !h.invoiceId) {\n      // previously wrote an error to the DOM \u2014 remove that side effect\n      return false; // be silent\n    }\n    this.currentStatus = null;\n    this.hideError();\n    return true;\n  }\n\n\n  getCurrentStatus(): string | null {\n    return this.currentStatus;\n  }\n\n  private getStatusStripEl(): HTMLElement {\n    if (this.statusStripEl) return this.statusStripEl;\n    this.statusStripEl = document.getElementById(\"status-strip\") as HTMLElement;\n    return this.statusStripEl;\n  }\n\n  private getErrorBannerEl(createIfMissing: boolean): HTMLElement {\n    if (this.errorBannerEl) return this.errorBannerEl;\n    let el = document.getElementById(\"status-strip-error\") as HTMLElement | null;\n    if (!el && createIfMissing) {\n      const parent = this.getStatusStripEl();\n      el = document.createElement(\"div\");\n      el.id = \"status-strip-error\";\n      el.className =\n        \"status-strip-error px-2 py-1 rounded border bg-red-50 text-red-800 border-red-200 mt-2 text-sm font-medium\";\n      el.style.display = \"none\";\n      if (parent && parent.parentNode) {\n        parent.parentNode.insertBefore(el, parent.nextSibling);\n      } else {\n        document.body.appendChild(el);\n      }\n    }\n    this.errorBannerEl = el as HTMLElement;\n    return this.errorBannerEl;\n  }\n\n  private statusToDisplay(status: string): string {\n    switch (status) {\n      case \"unpaid\":\n        return \"Awaiting payment\";\n      case \"paid\":\n        return \"Paid \u2713\";\n      case \"partially_refunded\":\n        return \"Partially Refunded\";\n      case \"refunded\":\n        return \"Refunded\";\n      case \"canceled\":\n        return \"Canceled\";\n      case \"expired\":\n        return \"Expired\";\n      default:\n        return \"Unknown\";\n    }\n  }\n\n  private statusToClasses(status: string): string {\n    switch (status) {\n      case \"unpaid\":\n        return \"bg-yellow-50 text-yellow-800 border-yellow-200\";\n      case \"paid\":\n        return \"bg-green-50 text-green-800 border-green-200\";\n      case \"partially_refunded\":\n      case \"refunded\":\n        return \"bg-blue-50 text-blue-800 border-blue-200\";\n      case \"canceled\":\n      case \"expired\":\n        return \"bg-gray-50 text-gray-800 border-gray-200\";\n      default:\n        return \"bg-red-50 text-red-800 border-red-200\";\n    }\n  }\n\n  private isTerminalStatus(status: string): boolean {\n    return status === \"paid\" || status === \"expired\" || status === \"canceled\";\n  }\n}\n", "export class StatusPollingBackoffManager {\n  pollingDelay: number = 1200;\n  minDelay: number = 1000;\n  maxDelay: number = 60000;\n  backoffFactor: number = 1.7;\n  intervalId: number | null = null;\n  suspended: boolean = false;\n\n  startPolling(callback: () => void): void {\n    this.clearPolling();\n    this.intervalId = window.setInterval(callback, this.pollingDelay);\n  }\n\n  clearPolling(): void {\n    if (this.intervalId !== null) {\n      clearInterval(this.intervalId);\n      this.intervalId = null;\n    }\n  }\n\n  backoffAndRetry(callback: () => void): void {\n    if (this.suspended) return;\n    this.clearPolling();\n    this.pollingDelay = Math.min(\n      this.maxDelay,\n      Math.max(this.minDelay, Math.floor(this.pollingDelay * this.backoffFactor))\n    );\n    window.setTimeout(callback, this.pollingDelay);\n  }\n\n  suspend(): void {\n    this.suspended = true;\n    this.clearPolling();\n  }\n\n  resume(callback: () => void, isTerminal: boolean): void {\n    this.suspended = false;\n    if (!isTerminal && this.intervalId === null) {\n      this.startPolling(callback);\n    }\n  }\n\n  resetDelay(): void {\n    this.pollingDelay = 1200;\n  }\n\n  getPollingDelay(): number {\n    return this.pollingDelay;\n  }\n}\n", "//StatusStripStatusMapper.ts\n\nexport class StatusStripStatusMapper {\n  static statusToDisplay(status: string): string {\n    switch (status) {\n      case 'unpaid':\n        return 'Awaiting payment';\n      case 'paid':\n        return 'Paid \u2713';\n      case 'partially_refunded':\n        return 'Partially Refunded';\n      case 'refunded':\n        return 'Refunded';\n      case 'canceled':\n        return 'Canceled';\n      case 'expired':\n        return 'Expired';\n      default:\n        return 'Unknown';\n    }\n  }\n\n  static statusToClasses(status: string): string {\n    switch (status) {\n      case 'unpaid':\n        return 'bg-yellow-50 text-yellow-800 border-yellow-200';\n      case 'paid':\n        return 'bg-green-50 text-green-800 border-green-200';\n      case 'partially_refunded':\n      case 'refunded':\n        return 'bg-blue-50 text-blue-800 border-blue-200';\n      case 'canceled':\n      case 'expired':\n        return 'bg-gray-50 text-gray-800 border-gray-200';\n      default:\n        return 'bg-red-50 text-red-800 border-red-200';\n    }\n  }\n\n  static isTerminalStatus(status: string): boolean {\n    return status === 'paid' || status === 'expired' || status === 'canceled';\n  }\n}\n", "// StatusStripIsland.ts\nimport { StatusStripDomRenderer } from './helpers/StatusStripDomRenderer';\nimport { StatusPollingBackoffManager } from './helpers/StatusPollingBackoffManager';\nimport { StatusStripStatusMapper } from './helpers/StatusStripStatusMapper';\n\nexport class StatusStripIsland {\n  private static domRenderer = new StatusStripDomRenderer();\n  static backoffManager = new StatusPollingBackoffManager();\n\n  private static hasInvoice(): boolean {\n    const h = (window as any).__PAGE__;\n    return !!(h && typeof h.invoiceId === 'string' && h.invoiceId.length > 0);\n  }\n\n  static pollStatus(): void {\n    if (!StatusStripIsland.hasInvoice()) return;\n    const { invoiceId, storeId } = (window as any).__PAGE__;\n    fetch(`/status/${storeId}/${invoiceId}`, { headers: { Accept: 'application/json' }, cache: 'no-store' })\n      .then((response) => {\n        StatusStripIsland.handleStatusResponse(response);\n        StatusStripIsland.backoffManager.resetDelay();\n      })\n      .catch((err) => {\n        StatusStripIsland.handleStatusError(err);\n        StatusStripIsland.backoffManager.backoffAndRetry(\n          StatusStripIsland.pollStatus.bind(StatusStripIsland)\n        );\n      });\n  }\n\n  static handleVisibilityChange(): void {\n    if (document.hidden) {\n      StatusStripIsland.backoffManager.suspend();\n      return;\n    }\n    if (!StatusStripIsland.hasInvoice()) return;\n    const currentStatus = StatusStripIsland.domRenderer.getCurrentStatus();\n    const isTerminal = StatusStripStatusMapper.isTerminalStatus(currentStatus as string);\n    StatusStripIsland.backoffManager.resume(\n      StatusStripIsland.pollStatus.bind(StatusStripIsland),\n      isTerminal\n    );\n  }\n\n  static handleBeforeUnload(): void {\n    StatusStripIsland.backoffManager.clearPolling();\n  }\n\n  static handleStatusResponse(response: Response): void {\n    response\n      .json()\n      .then((dto) => {\n        const status: string = dto.status;\n        if (status !== StatusStripIsland.domRenderer.getCurrentStatus()) {\n          StatusStripIsland.domRenderer.updateStatus(status);\n        }\n        StatusStripIsland.domRenderer.hideError();\n\n        if (StatusStripStatusMapper.isTerminalStatus(status)) {\n          StatusStripIsland.backoffManager.clearPolling();\n          document.dispatchEvent(new CustomEvent('invoice:terminal', { detail: { status } }));\n        }\n      })\n      .catch(() => {\n        StatusStripIsland.domRenderer.showError('Error parsing payment status. Retrying\u2026');\n      });\n  }\n\n  static handleStatusError(_error: any): void {\n    StatusStripIsland.domRenderer.showError('Error fetching payment status. Retrying\u2026');\n    StatusStripIsland.backoffManager.backoffAndRetry(\n      StatusStripIsland.pollStatus.bind(StatusStripIsland)\n    );\n  }\n\n  static handleHydration(hydration: { invoiceId?: string }): void {\n    const ok = StatusStripIsland.domRenderer.validateAndInitHydration(hydration as any);\n    if (!ok) {\n      StatusStripIsland.backoffManager.clearPolling();\n      return;\n    }\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const hydration = (window as any).__PAGE__;\n  StatusStripIsland.handleHydration(hydration);\n  if (StatusStripIsland['hasInvoice']()) {\n    StatusStripIsland.pollStatus();\n    StatusStripIsland.backoffManager.startPolling(\n      StatusStripIsland.pollStatus.bind(StatusStripIsland)\n    );\n  }\n});\n\ndocument.addEventListener('invoice:ready', () => {\n  if (!StatusStripIsland['hasInvoice']()) return;\n  StatusStripIsland.pollStatus();\n  StatusStripIsland.backoffManager.startPolling(\n    StatusStripIsland.pollStatus.bind(StatusStripIsland)\n  );\n});\n\ndocument.addEventListener('invoice:purged', () => {\n  StatusStripIsland.backoffManager.clearPolling();\n});\n\ndocument.addEventListener(\n  'visibilitychange',\n  StatusStripIsland.handleVisibilityChange.bind(StatusStripIsland)\n);\nwindow.addEventListener(\n  'beforeunload',\n  StatusStripIsland.handleBeforeUnload.bind(StatusStripIsland)\n);\n"],
  "mappings": "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",
  "names": []
}
