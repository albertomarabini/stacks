{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/components/modal/utils.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,MAAM,QAAQ,GAAG,GAAG,EAAE;IAC3B,MAAM,UAAU,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC;IAChC,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;IACjC,MAAM,OAAO,GAAG,OAAQ,MAAc,CAAC,GAAG,KAAK,WAAW,CAAC;IAC3D,MAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACnD,MAAM,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACnD,MAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAErD,IAAI,WAAW,EAAE,CAAC;QAChB,OAAO,KAAK,CAAC;IACf,CAAC;SAAM,IACL,UAAU,KAAK,IAAI;QACnB,OAAO,UAAU,KAAK,WAAW;QACjC,UAAU,KAAK,aAAa;QAC5B,OAAO,KAAK,KAAK;QACjB,QAAQ,KAAK,KAAK;QAClB,QAAQ,KAAK,KAAK,EAClB,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;SAAM,CAAC;QACN,OAAO,KAAK,CAAC;IACf,CAAC;AACH,CAAC,CAAC;AAIF,MAAM,CAAC,MAAM,UAAU,GAAG,GAAmB,EAAE;IAC7C,IAAI,QAAQ,EAAE,EAAE,CAAC;QACf,OAAO,QAAQ,CAAC;IAClB,CAAC;SAAM,IAAI,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC;QAC1D,OAAO,SAAS,CAAC;IACnB,CAAC;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAIF,MAAM,CAAC,MAAM,WAAW,GAAG,GAAoB,EAAE;IAC/C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC;QAAE,OAAO,IAAI,CAAC;IAChE,IAAI,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;QAClD,OAAO,KAAK,CAAC;IACf,CAAC;;QAAM,OAAO,SAAS,CAAC;AAC1B,CAAC,CAAC","sourcesContent":["export const isChrome = () => {\n  const isChromium = !!window['chrome'];\n  const winNav = window.navigator;\n  const vendorName = winNav.vendor;\n  const isOpera = typeof (window as any).opr !== 'undefined';\n  const isIEedge = winNav.userAgent.includes('Edge');\n  const isIOSChrome = /CriOS/.exec(winNav.userAgent);\n  const isMobile = winNav.userAgent.includes('Mobile');\n\n  if (isIOSChrome) {\n    return false;\n  } else if (\n    isChromium !== null &&\n    typeof isChromium !== 'undefined' &&\n    vendorName === 'Google Inc.' &&\n    isOpera === false &&\n    isIEedge === false &&\n    isMobile === false\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\ntype Browser = 'Chrome' | 'Firefox';\n\nexport const getBrowser = (): Browser | null => {\n  if (isChrome()) {\n    return 'Chrome';\n  } else if (window.navigator.userAgent.includes('Firefox')) {\n    return 'Firefox';\n  }\n  return null;\n};\n\ntype Platform = 'Android' | 'IOS';\n\nexport const getPlatform = (): Platform | null => {\n  if (!window.navigator.userAgent.includes('Mobile')) return null;\n  if (window.navigator.userAgent.includes('iPhone')) {\n    return 'IOS';\n  } else return 'Android';\n};\n"]}